/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_c_5fbusiness_5frelation_2eproto_INCLUDED
#define PROTOBUF_C_c_5fbusiness_5frelation_2eproto_INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "b_error.pb-c.h"
#include "b_business_account.pb-c.h"
#include "b_business_relation.pb-c.h"

typedef struct _c_business_relation_friend_info c_business_relation_friend_info;
typedef struct _c_business_relation_add_friend_rq c_business_relation_add_friend_rq;
typedef struct _c_business_relation_add_friend_rs c_business_relation_add_friend_rs;
typedef struct _c_business_relation_add_friend_nt c_business_relation_add_friend_nt;
typedef struct _c_business_relation_delete_friend_rq c_business_relation_delete_friend_rq;
typedef struct _c_business_relation_delete_friend_rs c_business_relation_delete_friend_rs;
typedef struct _c_business_relation_delete_friend_nt c_business_relation_delete_friend_nt;
typedef struct _c_business_relation_allow_friend_rq c_business_relation_allow_friend_rq;
typedef struct _c_business_relation_allow_friend_rs c_business_relation_allow_friend_rs;
typedef struct _c_business_relation_allow_friend_nt c_business_relation_allow_friend_nt;
typedef struct _c_business_relation_query_friends_rq c_business_relation_query_friends_rq;
typedef struct _c_business_relation_query_friends_rs c_business_relation_query_friends_rs;
typedef struct _c_business_relation_rename_friend_remark_rq c_business_relation_rename_friend_remark_rq;
typedef struct _c_business_relation_rename_friend_remark_rs c_business_relation_rename_friend_remark_rs;
typedef struct _c_business_relation_add_friend_group_rq c_business_relation_add_friend_group_rq;
typedef struct _c_business_relation_add_friend_group_rs c_business_relation_add_friend_group_rs;
typedef struct _c_business_relation_delete_friend_group_rq c_business_relation_delete_friend_group_rq;
typedef struct _c_business_relation_delete_friend_group_rs c_business_relation_delete_friend_group_rs;
typedef struct _c_business_relation_rename_friend_group_rq c_business_relation_rename_friend_group_rq;
typedef struct _c_business_relation_rename_friend_group_rs c_business_relation_rename_friend_group_rs;
typedef struct _c_business_relation_change_friend_group_rq c_business_relation_change_friend_group_rq;
typedef struct _c_business_relation_change_friend_group_rs c_business_relation_change_friend_group_rs;
typedef struct _c_business_relation_query_friends_apply_rq c_business_relation_query_friends_apply_rq;
typedef struct _c_business_relation_query_friends_apply_rs c_business_relation_query_friends_apply_rs;
typedef struct _c_business_relation_talk_friend_rq c_business_relation_talk_friend_rq;
typedef struct _c_business_relation_talk_friend_rs c_business_relation_talk_friend_rs;
typedef struct _c_business_relation_talk_friend_nt c_business_relation_talk_friend_nt;


/* --- enums --- */

typedef enum _c_business_relation_add_friend_rq_msg {
  c_business_relation_add_friend_rq_msg_id = 33562897
} c_business_relation_add_friend_rq_msg;
typedef enum _c_business_relation_add_friend_rs_msg {
  c_business_relation_add_friend_rs_msg_id = 33562898
} c_business_relation_add_friend_rs_msg;
typedef enum _c_business_relation_add_friend_nt_msg {
  c_business_relation_add_friend_nt_msg_id = 33563009
} c_business_relation_add_friend_nt_msg;
typedef enum _c_business_relation_delete_friend_rq_msg {
  c_business_relation_delete_friend_rq_msg_id = 33562899
} c_business_relation_delete_friend_rq_msg;
typedef enum _c_business_relation_delete_friend_rs_msg {
  c_business_relation_delete_friend_rs_msg_id = 33562900
} c_business_relation_delete_friend_rs_msg;
typedef enum _c_business_relation_delete_friend_nt_msg {
  c_business_relation_delete_friend_nt_msg_id = 33563010
} c_business_relation_delete_friend_nt_msg;
typedef enum _c_business_relation_allow_friend_rq_msg {
  c_business_relation_allow_friend_rq_msg_id = 33562901
} c_business_relation_allow_friend_rq_msg;
typedef enum _c_business_relation_allow_friend_rq_opcode_t {
  c_business_relation_allow_friend_rq_opcode_t_allow = 1,
  c_business_relation_allow_friend_rq_opcode_t_refuse = 2
} c_business_relation_allow_friend_rq_opcode_t;
typedef enum _c_business_relation_allow_friend_rs_msg {
  c_business_relation_allow_friend_rs_msg_id = 33562902
} c_business_relation_allow_friend_rs_msg;
typedef enum _c_business_relation_allow_friend_nt_msg {
  c_business_relation_allow_friend_nt_msg_id = 33563011
} c_business_relation_allow_friend_nt_msg;
typedef enum _c_business_relation_query_friends_rq_msg {
  c_business_relation_query_friends_rq_msg_id = 33562903
} c_business_relation_query_friends_rq_msg;
typedef enum _c_business_relation_query_friends_rs_msg {
  c_business_relation_query_friends_rs_msg_id = 33562904
} c_business_relation_query_friends_rs_msg;
typedef enum _c_business_relation_rename_friend_remark_rq_msg {
  c_business_relation_rename_friend_remark_rq_msg_id = 33562905
} c_business_relation_rename_friend_remark_rq_msg;
typedef enum _c_business_relation_rename_friend_remark_rs_msg {
  c_business_relation_rename_friend_remark_rs_msg_id = 33562912
} c_business_relation_rename_friend_remark_rs_msg;
typedef enum _c_business_relation_add_friend_group_rq_msg {
  c_business_relation_add_friend_group_rq_msg_id = 33562913
} c_business_relation_add_friend_group_rq_msg;
typedef enum _c_business_relation_add_friend_group_rs_msg {
  c_business_relation_add_friend_group_rs_msg_id = 33562914
} c_business_relation_add_friend_group_rs_msg;
typedef enum _c_business_relation_delete_friend_group_rq_msg {
  c_business_relation_delete_friend_group_rq_msg_id = 33562915
} c_business_relation_delete_friend_group_rq_msg;
typedef enum _c_business_relation_delete_friend_group_rs_msg {
  c_business_relation_delete_friend_group_rs_msg_id = 33562916
} c_business_relation_delete_friend_group_rs_msg;
typedef enum _c_business_relation_rename_friend_group_rq_msg {
  c_business_relation_rename_friend_group_rq_msg_id = 33562917
} c_business_relation_rename_friend_group_rq_msg;
typedef enum _c_business_relation_rename_friend_group_rs_msg {
  c_business_relation_rename_friend_group_rs_msg_id = 33562918
} c_business_relation_rename_friend_group_rs_msg;
typedef enum _c_business_relation_change_friend_group_rq_msg {
  c_business_relation_change_friend_group_rq_msg_id = 33562919
} c_business_relation_change_friend_group_rq_msg;
typedef enum _c_business_relation_change_friend_group_rs_msg {
  c_business_relation_change_friend_group_rs_msg_id = 33562920
} c_business_relation_change_friend_group_rs_msg;
typedef enum _c_business_relation_query_friends_apply_rq_msg {
  c_business_relation_query_friends_apply_rq_msg_id = 33562921
} c_business_relation_query_friends_apply_rq_msg;
typedef enum _c_business_relation_query_friends_apply_rs_msg {
  c_business_relation_query_friends_apply_rs_msg_id = 33562928
} c_business_relation_query_friends_apply_rs_msg;
typedef enum _c_business_relation_talk_friend_rq_msg {
  c_business_relation_talk_friend_rq_msg_id = 33562961
} c_business_relation_talk_friend_rq_msg;
typedef enum _c_business_relation_talk_friend_rs_msg {
  c_business_relation_talk_friend_rs_msg_id = 33562962
} c_business_relation_talk_friend_rs_msg;
typedef enum _c_business_relation_talk_friend_nt_msg {
  c_business_relation_talk_friend_nt_msg_id = 33563025
} c_business_relation_talk_friend_nt_msg;
typedef enum _c_business_relation_msg {
  c_business_relation_msg_min_id = 33562880,
  c_business_relation_msg_max_id = 33563135
} c_business_relation_msg;

/* --- messages --- */

struct  _c_business_relation_friend_info
{
  ProtobufCMessage base;
  b_business_account_user_info *user_info;
  char *user_group;
  char *user_remark;
};
#define c_business_relation_friend_info_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_friend_info_descriptor) \
    , NULL, NULL, NULL }


struct  _c_business_relation_add_friend_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
  unsigned long long int user_add_id;
  char *user_remark;
  char *description;
};
#define c_business_relation_add_friend_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_add_friend_rq_descriptor) \
    , 0, 0, NULL, NULL }


struct  _c_business_relation_add_friend_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int user_add_id;
  char *user_remark;
};
#define c_business_relation_add_friend_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_add_friend_rs_descriptor) \
    , NULL, 0, NULL }


struct  _c_business_relation_add_friend_nt
{
  ProtobufCMessage base;
  b_business_account_user_info *apply_user_info;
  char *description;
};
#define c_business_relation_add_friend_nt_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_add_friend_nt_descriptor) \
    , NULL, NULL }


struct  _c_business_relation_delete_friend_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
  unsigned long long int user_delete_id;
};
#define c_business_relation_delete_friend_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_delete_friend_rq_descriptor) \
    , 0, 0 }


struct  _c_business_relation_delete_friend_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int user_delete_id;
};
#define c_business_relation_delete_friend_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_delete_friend_rs_descriptor) \
    , NULL, 0 }


struct  _c_business_relation_delete_friend_nt
{
  ProtobufCMessage base;
  unsigned long long int apply_user_id;
};
#define c_business_relation_delete_friend_nt_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_delete_friend_nt_descriptor) \
    , 0 }


struct  _c_business_relation_allow_friend_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
  unsigned long long int user_allow_id;
  char *user_myself_nick;
  char *user_allow_nick;
  unsigned long long int friend_group_id;
  unsigned int opcode;
};
#define c_business_relation_allow_friend_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_allow_friend_rq_descriptor) \
    , 0, 0, NULL, NULL, 0, 0 }


struct  _c_business_relation_allow_friend_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int user_allow_id;
  unsigned int opcode;
  size_t n_relation_s;
  b_business_relation_user_relation **relation_s;
};
#define c_business_relation_allow_friend_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_allow_friend_rs_descriptor) \
    , NULL, 0, 0, 0,NULL }


struct  _c_business_relation_allow_friend_nt
{
  ProtobufCMessage base;
  b_business_account_user_info *apply_user_info;
  unsigned int opcode;
  size_t n_relation_s;
  b_business_relation_user_relation **relation_s;
};
#define c_business_relation_allow_friend_nt_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_allow_friend_nt_descriptor) \
    , NULL, 0, 0,NULL }


struct  _c_business_relation_query_friends_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
};
#define c_business_relation_query_friends_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_query_friends_rq_descriptor) \
    , 0 }


struct  _c_business_relation_query_friends_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  size_t n_group_s;
  b_business_relation_user_relation_group **group_s;
  size_t n_relation_s;
  b_business_relation_user_relation **relation_s;
};
#define c_business_relation_query_friends_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_query_friends_rs_descriptor) \
    , NULL, 0,NULL, 0,NULL }


struct  _c_business_relation_rename_friend_remark_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
  unsigned long long int user_friend_id;
  char *user_friend_remark;
};
#define c_business_relation_rename_friend_remark_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_rename_friend_remark_rq_descriptor) \
    , 0, 0, NULL }


struct  _c_business_relation_rename_friend_remark_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int user_friend_id;
  char *user_friend_remark;
};
#define c_business_relation_rename_friend_remark_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_rename_friend_remark_rs_descriptor) \
    , NULL, 0, NULL }


struct  _c_business_relation_add_friend_group_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
  char *user_friend_group;
};
#define c_business_relation_add_friend_group_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_add_friend_group_rq_descriptor) \
    , 0, NULL }


struct  _c_business_relation_add_friend_group_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  char *user_friend_group;
  unsigned long long int user_friend_group_id;
};
#define c_business_relation_add_friend_group_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_add_friend_group_rs_descriptor) \
    , NULL, NULL, 0 }


struct  _c_business_relation_delete_friend_group_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
  unsigned long long int user_friend_id;
  unsigned long long int user_friend_group_id;
};
#define c_business_relation_delete_friend_group_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_delete_friend_group_rq_descriptor) \
    , 0, 0, 0 }


struct  _c_business_relation_delete_friend_group_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int user_friend_id;
  unsigned long long int user_friend_group_id;
};
#define c_business_relation_delete_friend_group_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_delete_friend_group_rs_descriptor) \
    , NULL, 0, 0 }


struct  _c_business_relation_rename_friend_group_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
  unsigned long long int user_friend_group_id;
  char *user_friend_group;
};
#define c_business_relation_rename_friend_group_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_rename_friend_group_rq_descriptor) \
    , 0, 0, NULL }


struct  _c_business_relation_rename_friend_group_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int user_friend_group_id;
  char *user_friend_group;
};
#define c_business_relation_rename_friend_group_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_rename_friend_group_rs_descriptor) \
    , NULL, 0, NULL }


struct  _c_business_relation_change_friend_group_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
  unsigned long long int user_friend_id;
  unsigned long long int user_friend_group_id_old;
  unsigned long long int user_friend_group_id_new;
};
#define c_business_relation_change_friend_group_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_change_friend_group_rq_descriptor) \
    , 0, 0, 0, 0 }


struct  _c_business_relation_change_friend_group_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int user_friend_id;
  unsigned long long int user_friend_group_id_old;
  unsigned long long int user_friend_group_id_new;
};
#define c_business_relation_change_friend_group_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_change_friend_group_rs_descriptor) \
    , NULL, 0, 0, 0 }


struct  _c_business_relation_query_friends_apply_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
};
#define c_business_relation_query_friends_apply_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_query_friends_apply_rq_descriptor) \
    , 0 }


struct  _c_business_relation_query_friends_apply_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  size_t n_apply_s;
  b_business_relation_friend_apply **apply_s;
};
#define c_business_relation_query_friends_apply_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_query_friends_apply_rs_descriptor) \
    , NULL, 0,NULL }


struct  _c_business_relation_talk_friend_rq
{
  ProtobufCMessage base;
  unsigned long long int user_myself_id;
  unsigned long long int user_talk_id;
  char *talking;
};
#define c_business_relation_talk_friend_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_talk_friend_rq_descriptor) \
    , 0, 0, NULL }


struct  _c_business_relation_talk_friend_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int user_talk_id;
};
#define c_business_relation_talk_friend_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_talk_friend_rs_descriptor) \
    , NULL, 0 }


struct  _c_business_relation_talk_friend_nt
{
  ProtobufCMessage base;
  unsigned long long int apply_talk_id;
  char *talking;
};
#define c_business_relation_talk_friend_nt_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_business_relation_talk_friend_nt_descriptor) \
    , 0, NULL }


/* c_business_relation_friend_info methods */
void   c_business_relation_friend_info_init
                     (c_business_relation_friend_info         *message);
size_t c_business_relation_friend_info_get_packed_size
                     (const c_business_relation_friend_info   *message);
size_t c_business_relation_friend_info_pack
                     (const c_business_relation_friend_info   *message,
                      unsigned char             *out);
size_t c_business_relation_friend_info_pack_to_buffer
                     (const c_business_relation_friend_info   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_friend_info *
       c_business_relation_friend_info_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_friend_info_free_unpacked
                     (c_business_relation_friend_info *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_add_friend_rq methods */
void   c_business_relation_add_friend_rq_init
                     (c_business_relation_add_friend_rq         *message);
size_t c_business_relation_add_friend_rq_get_packed_size
                     (const c_business_relation_add_friend_rq   *message);
size_t c_business_relation_add_friend_rq_pack
                     (const c_business_relation_add_friend_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_add_friend_rq_pack_to_buffer
                     (const c_business_relation_add_friend_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_add_friend_rq *
       c_business_relation_add_friend_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_add_friend_rq_free_unpacked
                     (c_business_relation_add_friend_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_add_friend_rs methods */
void   c_business_relation_add_friend_rs_init
                     (c_business_relation_add_friend_rs         *message);
size_t c_business_relation_add_friend_rs_get_packed_size
                     (const c_business_relation_add_friend_rs   *message);
size_t c_business_relation_add_friend_rs_pack
                     (const c_business_relation_add_friend_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_add_friend_rs_pack_to_buffer
                     (const c_business_relation_add_friend_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_add_friend_rs *
       c_business_relation_add_friend_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_add_friend_rs_free_unpacked
                     (c_business_relation_add_friend_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_add_friend_nt methods */
void   c_business_relation_add_friend_nt_init
                     (c_business_relation_add_friend_nt         *message);
size_t c_business_relation_add_friend_nt_get_packed_size
                     (const c_business_relation_add_friend_nt   *message);
size_t c_business_relation_add_friend_nt_pack
                     (const c_business_relation_add_friend_nt   *message,
                      unsigned char             *out);
size_t c_business_relation_add_friend_nt_pack_to_buffer
                     (const c_business_relation_add_friend_nt   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_add_friend_nt *
       c_business_relation_add_friend_nt_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_add_friend_nt_free_unpacked
                     (c_business_relation_add_friend_nt *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_delete_friend_rq methods */
void   c_business_relation_delete_friend_rq_init
                     (c_business_relation_delete_friend_rq         *message);
size_t c_business_relation_delete_friend_rq_get_packed_size
                     (const c_business_relation_delete_friend_rq   *message);
size_t c_business_relation_delete_friend_rq_pack
                     (const c_business_relation_delete_friend_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_delete_friend_rq_pack_to_buffer
                     (const c_business_relation_delete_friend_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_delete_friend_rq *
       c_business_relation_delete_friend_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_delete_friend_rq_free_unpacked
                     (c_business_relation_delete_friend_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_delete_friend_rs methods */
void   c_business_relation_delete_friend_rs_init
                     (c_business_relation_delete_friend_rs         *message);
size_t c_business_relation_delete_friend_rs_get_packed_size
                     (const c_business_relation_delete_friend_rs   *message);
size_t c_business_relation_delete_friend_rs_pack
                     (const c_business_relation_delete_friend_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_delete_friend_rs_pack_to_buffer
                     (const c_business_relation_delete_friend_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_delete_friend_rs *
       c_business_relation_delete_friend_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_delete_friend_rs_free_unpacked
                     (c_business_relation_delete_friend_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_delete_friend_nt methods */
void   c_business_relation_delete_friend_nt_init
                     (c_business_relation_delete_friend_nt         *message);
size_t c_business_relation_delete_friend_nt_get_packed_size
                     (const c_business_relation_delete_friend_nt   *message);
size_t c_business_relation_delete_friend_nt_pack
                     (const c_business_relation_delete_friend_nt   *message,
                      unsigned char             *out);
size_t c_business_relation_delete_friend_nt_pack_to_buffer
                     (const c_business_relation_delete_friend_nt   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_delete_friend_nt *
       c_business_relation_delete_friend_nt_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_delete_friend_nt_free_unpacked
                     (c_business_relation_delete_friend_nt *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_allow_friend_rq methods */
void   c_business_relation_allow_friend_rq_init
                     (c_business_relation_allow_friend_rq         *message);
size_t c_business_relation_allow_friend_rq_get_packed_size
                     (const c_business_relation_allow_friend_rq   *message);
size_t c_business_relation_allow_friend_rq_pack
                     (const c_business_relation_allow_friend_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_allow_friend_rq_pack_to_buffer
                     (const c_business_relation_allow_friend_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_allow_friend_rq *
       c_business_relation_allow_friend_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_allow_friend_rq_free_unpacked
                     (c_business_relation_allow_friend_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_allow_friend_rs methods */
void   c_business_relation_allow_friend_rs_init
                     (c_business_relation_allow_friend_rs         *message);
size_t c_business_relation_allow_friend_rs_get_packed_size
                     (const c_business_relation_allow_friend_rs   *message);
size_t c_business_relation_allow_friend_rs_pack
                     (const c_business_relation_allow_friend_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_allow_friend_rs_pack_to_buffer
                     (const c_business_relation_allow_friend_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_allow_friend_rs *
       c_business_relation_allow_friend_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_allow_friend_rs_free_unpacked
                     (c_business_relation_allow_friend_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_allow_friend_nt methods */
void   c_business_relation_allow_friend_nt_init
                     (c_business_relation_allow_friend_nt         *message);
size_t c_business_relation_allow_friend_nt_get_packed_size
                     (const c_business_relation_allow_friend_nt   *message);
size_t c_business_relation_allow_friend_nt_pack
                     (const c_business_relation_allow_friend_nt   *message,
                      unsigned char             *out);
size_t c_business_relation_allow_friend_nt_pack_to_buffer
                     (const c_business_relation_allow_friend_nt   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_allow_friend_nt *
       c_business_relation_allow_friend_nt_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_allow_friend_nt_free_unpacked
                     (c_business_relation_allow_friend_nt *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_query_friends_rq methods */
void   c_business_relation_query_friends_rq_init
                     (c_business_relation_query_friends_rq         *message);
size_t c_business_relation_query_friends_rq_get_packed_size
                     (const c_business_relation_query_friends_rq   *message);
size_t c_business_relation_query_friends_rq_pack
                     (const c_business_relation_query_friends_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_query_friends_rq_pack_to_buffer
                     (const c_business_relation_query_friends_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_query_friends_rq *
       c_business_relation_query_friends_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_query_friends_rq_free_unpacked
                     (c_business_relation_query_friends_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_query_friends_rs methods */
void   c_business_relation_query_friends_rs_init
                     (c_business_relation_query_friends_rs         *message);
size_t c_business_relation_query_friends_rs_get_packed_size
                     (const c_business_relation_query_friends_rs   *message);
size_t c_business_relation_query_friends_rs_pack
                     (const c_business_relation_query_friends_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_query_friends_rs_pack_to_buffer
                     (const c_business_relation_query_friends_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_query_friends_rs *
       c_business_relation_query_friends_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_query_friends_rs_free_unpacked
                     (c_business_relation_query_friends_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_rename_friend_remark_rq methods */
void   c_business_relation_rename_friend_remark_rq_init
                     (c_business_relation_rename_friend_remark_rq         *message);
size_t c_business_relation_rename_friend_remark_rq_get_packed_size
                     (const c_business_relation_rename_friend_remark_rq   *message);
size_t c_business_relation_rename_friend_remark_rq_pack
                     (const c_business_relation_rename_friend_remark_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_rename_friend_remark_rq_pack_to_buffer
                     (const c_business_relation_rename_friend_remark_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_rename_friend_remark_rq *
       c_business_relation_rename_friend_remark_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_rename_friend_remark_rq_free_unpacked
                     (c_business_relation_rename_friend_remark_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_rename_friend_remark_rs methods */
void   c_business_relation_rename_friend_remark_rs_init
                     (c_business_relation_rename_friend_remark_rs         *message);
size_t c_business_relation_rename_friend_remark_rs_get_packed_size
                     (const c_business_relation_rename_friend_remark_rs   *message);
size_t c_business_relation_rename_friend_remark_rs_pack
                     (const c_business_relation_rename_friend_remark_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_rename_friend_remark_rs_pack_to_buffer
                     (const c_business_relation_rename_friend_remark_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_rename_friend_remark_rs *
       c_business_relation_rename_friend_remark_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_rename_friend_remark_rs_free_unpacked
                     (c_business_relation_rename_friend_remark_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_add_friend_group_rq methods */
void   c_business_relation_add_friend_group_rq_init
                     (c_business_relation_add_friend_group_rq         *message);
size_t c_business_relation_add_friend_group_rq_get_packed_size
                     (const c_business_relation_add_friend_group_rq   *message);
size_t c_business_relation_add_friend_group_rq_pack
                     (const c_business_relation_add_friend_group_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_add_friend_group_rq_pack_to_buffer
                     (const c_business_relation_add_friend_group_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_add_friend_group_rq *
       c_business_relation_add_friend_group_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_add_friend_group_rq_free_unpacked
                     (c_business_relation_add_friend_group_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_add_friend_group_rs methods */
void   c_business_relation_add_friend_group_rs_init
                     (c_business_relation_add_friend_group_rs         *message);
size_t c_business_relation_add_friend_group_rs_get_packed_size
                     (const c_business_relation_add_friend_group_rs   *message);
size_t c_business_relation_add_friend_group_rs_pack
                     (const c_business_relation_add_friend_group_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_add_friend_group_rs_pack_to_buffer
                     (const c_business_relation_add_friend_group_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_add_friend_group_rs *
       c_business_relation_add_friend_group_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_add_friend_group_rs_free_unpacked
                     (c_business_relation_add_friend_group_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_delete_friend_group_rq methods */
void   c_business_relation_delete_friend_group_rq_init
                     (c_business_relation_delete_friend_group_rq         *message);
size_t c_business_relation_delete_friend_group_rq_get_packed_size
                     (const c_business_relation_delete_friend_group_rq   *message);
size_t c_business_relation_delete_friend_group_rq_pack
                     (const c_business_relation_delete_friend_group_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_delete_friend_group_rq_pack_to_buffer
                     (const c_business_relation_delete_friend_group_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_delete_friend_group_rq *
       c_business_relation_delete_friend_group_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_delete_friend_group_rq_free_unpacked
                     (c_business_relation_delete_friend_group_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_delete_friend_group_rs methods */
void   c_business_relation_delete_friend_group_rs_init
                     (c_business_relation_delete_friend_group_rs         *message);
size_t c_business_relation_delete_friend_group_rs_get_packed_size
                     (const c_business_relation_delete_friend_group_rs   *message);
size_t c_business_relation_delete_friend_group_rs_pack
                     (const c_business_relation_delete_friend_group_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_delete_friend_group_rs_pack_to_buffer
                     (const c_business_relation_delete_friend_group_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_delete_friend_group_rs *
       c_business_relation_delete_friend_group_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_delete_friend_group_rs_free_unpacked
                     (c_business_relation_delete_friend_group_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_rename_friend_group_rq methods */
void   c_business_relation_rename_friend_group_rq_init
                     (c_business_relation_rename_friend_group_rq         *message);
size_t c_business_relation_rename_friend_group_rq_get_packed_size
                     (const c_business_relation_rename_friend_group_rq   *message);
size_t c_business_relation_rename_friend_group_rq_pack
                     (const c_business_relation_rename_friend_group_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_rename_friend_group_rq_pack_to_buffer
                     (const c_business_relation_rename_friend_group_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_rename_friend_group_rq *
       c_business_relation_rename_friend_group_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_rename_friend_group_rq_free_unpacked
                     (c_business_relation_rename_friend_group_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_rename_friend_group_rs methods */
void   c_business_relation_rename_friend_group_rs_init
                     (c_business_relation_rename_friend_group_rs         *message);
size_t c_business_relation_rename_friend_group_rs_get_packed_size
                     (const c_business_relation_rename_friend_group_rs   *message);
size_t c_business_relation_rename_friend_group_rs_pack
                     (const c_business_relation_rename_friend_group_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_rename_friend_group_rs_pack_to_buffer
                     (const c_business_relation_rename_friend_group_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_rename_friend_group_rs *
       c_business_relation_rename_friend_group_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_rename_friend_group_rs_free_unpacked
                     (c_business_relation_rename_friend_group_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_change_friend_group_rq methods */
void   c_business_relation_change_friend_group_rq_init
                     (c_business_relation_change_friend_group_rq         *message);
size_t c_business_relation_change_friend_group_rq_get_packed_size
                     (const c_business_relation_change_friend_group_rq   *message);
size_t c_business_relation_change_friend_group_rq_pack
                     (const c_business_relation_change_friend_group_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_change_friend_group_rq_pack_to_buffer
                     (const c_business_relation_change_friend_group_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_change_friend_group_rq *
       c_business_relation_change_friend_group_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_change_friend_group_rq_free_unpacked
                     (c_business_relation_change_friend_group_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_change_friend_group_rs methods */
void   c_business_relation_change_friend_group_rs_init
                     (c_business_relation_change_friend_group_rs         *message);
size_t c_business_relation_change_friend_group_rs_get_packed_size
                     (const c_business_relation_change_friend_group_rs   *message);
size_t c_business_relation_change_friend_group_rs_pack
                     (const c_business_relation_change_friend_group_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_change_friend_group_rs_pack_to_buffer
                     (const c_business_relation_change_friend_group_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_change_friend_group_rs *
       c_business_relation_change_friend_group_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_change_friend_group_rs_free_unpacked
                     (c_business_relation_change_friend_group_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_query_friends_apply_rq methods */
void   c_business_relation_query_friends_apply_rq_init
                     (c_business_relation_query_friends_apply_rq         *message);
size_t c_business_relation_query_friends_apply_rq_get_packed_size
                     (const c_business_relation_query_friends_apply_rq   *message);
size_t c_business_relation_query_friends_apply_rq_pack
                     (const c_business_relation_query_friends_apply_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_query_friends_apply_rq_pack_to_buffer
                     (const c_business_relation_query_friends_apply_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_query_friends_apply_rq *
       c_business_relation_query_friends_apply_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_query_friends_apply_rq_free_unpacked
                     (c_business_relation_query_friends_apply_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_query_friends_apply_rs methods */
void   c_business_relation_query_friends_apply_rs_init
                     (c_business_relation_query_friends_apply_rs         *message);
size_t c_business_relation_query_friends_apply_rs_get_packed_size
                     (const c_business_relation_query_friends_apply_rs   *message);
size_t c_business_relation_query_friends_apply_rs_pack
                     (const c_business_relation_query_friends_apply_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_query_friends_apply_rs_pack_to_buffer
                     (const c_business_relation_query_friends_apply_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_query_friends_apply_rs *
       c_business_relation_query_friends_apply_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_query_friends_apply_rs_free_unpacked
                     (c_business_relation_query_friends_apply_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_talk_friend_rq methods */
void   c_business_relation_talk_friend_rq_init
                     (c_business_relation_talk_friend_rq         *message);
size_t c_business_relation_talk_friend_rq_get_packed_size
                     (const c_business_relation_talk_friend_rq   *message);
size_t c_business_relation_talk_friend_rq_pack
                     (const c_business_relation_talk_friend_rq   *message,
                      unsigned char             *out);
size_t c_business_relation_talk_friend_rq_pack_to_buffer
                     (const c_business_relation_talk_friend_rq   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_talk_friend_rq *
       c_business_relation_talk_friend_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_talk_friend_rq_free_unpacked
                     (c_business_relation_talk_friend_rq *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_talk_friend_rs methods */
void   c_business_relation_talk_friend_rs_init
                     (c_business_relation_talk_friend_rs         *message);
size_t c_business_relation_talk_friend_rs_get_packed_size
                     (const c_business_relation_talk_friend_rs   *message);
size_t c_business_relation_talk_friend_rs_pack
                     (const c_business_relation_talk_friend_rs   *message,
                      unsigned char             *out);
size_t c_business_relation_talk_friend_rs_pack_to_buffer
                     (const c_business_relation_talk_friend_rs   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_talk_friend_rs *
       c_business_relation_talk_friend_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_talk_friend_rs_free_unpacked
                     (c_business_relation_talk_friend_rs *message,
                      ProtobufCAllocator *allocator);
/* c_business_relation_talk_friend_nt methods */
void   c_business_relation_talk_friend_nt_init
                     (c_business_relation_talk_friend_nt         *message);
size_t c_business_relation_talk_friend_nt_get_packed_size
                     (const c_business_relation_talk_friend_nt   *message);
size_t c_business_relation_talk_friend_nt_pack
                     (const c_business_relation_talk_friend_nt   *message,
                      unsigned char             *out);
size_t c_business_relation_talk_friend_nt_pack_to_buffer
                     (const c_business_relation_talk_friend_nt   *message,
                      ProtobufCBuffer     *buffer);
c_business_relation_talk_friend_nt *
       c_business_relation_talk_friend_nt_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_business_relation_talk_friend_nt_free_unpacked
                     (c_business_relation_talk_friend_nt *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*c_business_relation_friend_info_Closure)
                 (const c_business_relation_friend_info *message,
                  void *closure_data);
typedef void (*c_business_relation_add_friend_rq_Closure)
                 (const c_business_relation_add_friend_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_add_friend_rs_Closure)
                 (const c_business_relation_add_friend_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_add_friend_nt_Closure)
                 (const c_business_relation_add_friend_nt *message,
                  void *closure_data);
typedef void (*c_business_relation_delete_friend_rq_Closure)
                 (const c_business_relation_delete_friend_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_delete_friend_rs_Closure)
                 (const c_business_relation_delete_friend_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_delete_friend_nt_Closure)
                 (const c_business_relation_delete_friend_nt *message,
                  void *closure_data);
typedef void (*c_business_relation_allow_friend_rq_Closure)
                 (const c_business_relation_allow_friend_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_allow_friend_rs_Closure)
                 (const c_business_relation_allow_friend_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_allow_friend_nt_Closure)
                 (const c_business_relation_allow_friend_nt *message,
                  void *closure_data);
typedef void (*c_business_relation_query_friends_rq_Closure)
                 (const c_business_relation_query_friends_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_query_friends_rs_Closure)
                 (const c_business_relation_query_friends_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_rename_friend_remark_rq_Closure)
                 (const c_business_relation_rename_friend_remark_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_rename_friend_remark_rs_Closure)
                 (const c_business_relation_rename_friend_remark_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_add_friend_group_rq_Closure)
                 (const c_business_relation_add_friend_group_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_add_friend_group_rs_Closure)
                 (const c_business_relation_add_friend_group_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_delete_friend_group_rq_Closure)
                 (const c_business_relation_delete_friend_group_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_delete_friend_group_rs_Closure)
                 (const c_business_relation_delete_friend_group_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_rename_friend_group_rq_Closure)
                 (const c_business_relation_rename_friend_group_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_rename_friend_group_rs_Closure)
                 (const c_business_relation_rename_friend_group_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_change_friend_group_rq_Closure)
                 (const c_business_relation_change_friend_group_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_change_friend_group_rs_Closure)
                 (const c_business_relation_change_friend_group_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_query_friends_apply_rq_Closure)
                 (const c_business_relation_query_friends_apply_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_query_friends_apply_rs_Closure)
                 (const c_business_relation_query_friends_apply_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_talk_friend_rq_Closure)
                 (const c_business_relation_talk_friend_rq *message,
                  void *closure_data);
typedef void (*c_business_relation_talk_friend_rs_Closure)
                 (const c_business_relation_talk_friend_rs *message,
                  void *closure_data);
typedef void (*c_business_relation_talk_friend_nt_Closure)
                 (const c_business_relation_talk_friend_nt *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    c_business_relation_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_friend_info_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_add_friend_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_add_friend_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_add_friend_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_add_friend_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_add_friend_nt_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_add_friend_nt_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_delete_friend_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_delete_friend_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_delete_friend_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_delete_friend_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_delete_friend_nt_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_delete_friend_nt_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_allow_friend_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_allow_friend_rq_msg_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_allow_friend_rq_opcode_t_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_allow_friend_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_allow_friend_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_allow_friend_nt_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_allow_friend_nt_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_query_friends_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_query_friends_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_query_friends_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_query_friends_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_rename_friend_remark_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_rename_friend_remark_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_rename_friend_remark_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_rename_friend_remark_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_add_friend_group_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_add_friend_group_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_add_friend_group_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_add_friend_group_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_delete_friend_group_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_delete_friend_group_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_delete_friend_group_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_delete_friend_group_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_rename_friend_group_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_rename_friend_group_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_rename_friend_group_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_rename_friend_group_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_change_friend_group_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_change_friend_group_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_change_friend_group_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_change_friend_group_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_query_friends_apply_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_query_friends_apply_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_query_friends_apply_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_query_friends_apply_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_talk_friend_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_talk_friend_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_talk_friend_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_talk_friend_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_business_relation_talk_friend_nt_descriptor;
extern const ProtobufCEnumDescriptor    c_business_relation_talk_friend_nt_msg_descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_c_5fbusiness_5frelation_2eproto_INCLUDED */
