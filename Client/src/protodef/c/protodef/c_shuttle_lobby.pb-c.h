/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_c_5fshuttle_5flobby_2eproto_INCLUDED
#define PROTOBUF_C_c_5fshuttle_5flobby_2eproto_INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "b_error.pb-c.h"
#include "b_math.pb-c.h"

typedef struct _c_shuttle_lobby_exchange_key_rq c_shuttle_lobby_exchange_key_rq;
typedef struct _c_shuttle_lobby_exchange_key_rs c_shuttle_lobby_exchange_key_rs;
typedef struct _c_shuttle_lobby_token_verify_rq c_shuttle_lobby_token_verify_rq;
typedef struct _c_shuttle_lobby_token_verify_rs c_shuttle_lobby_token_verify_rs;
typedef struct _c_shuttle_lobby_heartbeat_rq c_shuttle_lobby_heartbeat_rq;
typedef struct _c_shuttle_lobby_heartbeat_rs c_shuttle_lobby_heartbeat_rs;


/* --- enums --- */

typedef enum _c_shuttle_lobby_exchange_key_rq_msg {
  c_shuttle_lobby_exchange_key_rq_msg_id = 33558784
} c_shuttle_lobby_exchange_key_rq_msg;
typedef enum _c_shuttle_lobby_exchange_key_rs_msg {
  c_shuttle_lobby_exchange_key_rs_msg_id = 33558785
} c_shuttle_lobby_exchange_key_rs_msg;
typedef enum _c_shuttle_lobby_token_verify_rq_msg {
  c_shuttle_lobby_token_verify_rq_msg_id = 33558786
} c_shuttle_lobby_token_verify_rq_msg;
typedef enum _c_shuttle_lobby_token_verify_rs_msg {
  c_shuttle_lobby_token_verify_rs_msg_id = 33558787
} c_shuttle_lobby_token_verify_rs_msg;
typedef enum _c_shuttle_lobby_heartbeat_rq_msg {
  c_shuttle_lobby_heartbeat_rq_msg_id = 33558788
} c_shuttle_lobby_heartbeat_rq_msg;
typedef enum _c_shuttle_lobby_heartbeat_rs_msg {
  c_shuttle_lobby_heartbeat_rs_msg_id = 33558789
} c_shuttle_lobby_heartbeat_rs_msg;
typedef enum _c_shuttle_lobby_msg {
  c_shuttle_lobby_msg_min_id = 33558784,
  c_shuttle_lobby_msg_max_id = 33559039
} c_shuttle_lobby_msg;

/* --- messages --- */

struct  _c_shuttle_lobby_exchange_key_rq
{
  ProtobufCMessage base;
  ProtobufCBinaryData public_key;
  ProtobufCBinaryData encrypt_key_l;
  unsigned int version;
};
#define c_shuttle_lobby_exchange_key_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_shuttle_lobby_exchange_key_rq_descriptor) \
    , {0,NULL}, {0,NULL}, 0 }


struct  _c_shuttle_lobby_exchange_key_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  ProtobufCBinaryData encrypt_key_r;
};
#define c_shuttle_lobby_exchange_key_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_shuttle_lobby_exchange_key_rs_descriptor) \
    , NULL, {0,NULL} }


struct  _c_shuttle_lobby_token_verify_rq
{
  ProtobufCMessage base;
  unsigned long long int uid;
  char *token;
};
extern char c_shuttle_lobby_token_verify_rq_token_default_value[];
#define c_shuttle_lobby_token_verify_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_shuttle_lobby_token_verify_rq_descriptor) \
    , 0, c_shuttle_lobby_token_verify_rq_token_default_value }


struct  _c_shuttle_lobby_token_verify_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int uid;
  char *token;
};
extern char c_shuttle_lobby_token_verify_rs_token_default_value[];
#define c_shuttle_lobby_token_verify_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_shuttle_lobby_token_verify_rs_descriptor) \
    , NULL, 0, c_shuttle_lobby_token_verify_rs_token_default_value }


struct  _c_shuttle_lobby_heartbeat_rq
{
  ProtobufCMessage base;
  unsigned long long int uid;
  unsigned long long int timecode_native;
  b_math_coord *coord_info;
};
#define c_shuttle_lobby_heartbeat_rq_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_shuttle_lobby_heartbeat_rq_descriptor) \
    , 0, 0, NULL }


struct  _c_shuttle_lobby_heartbeat_rs
{
  ProtobufCMessage base;
  b_error_info *error;
  unsigned long long int uid;
  unsigned long long int timecode_native;
  b_math_coord *coord_info;
};
#define c_shuttle_lobby_heartbeat_rs_Init \
 { PROTOBUF_C_MESSAGE_INIT (&c_shuttle_lobby_heartbeat_rs_descriptor) \
    , NULL, 0, 0, NULL }


/* c_shuttle_lobby_exchange_key_rq methods */
void   c_shuttle_lobby_exchange_key_rq_init
                     (c_shuttle_lobby_exchange_key_rq         *message);
size_t c_shuttle_lobby_exchange_key_rq_get_packed_size
                     (const c_shuttle_lobby_exchange_key_rq   *message);
size_t c_shuttle_lobby_exchange_key_rq_pack
                     (const c_shuttle_lobby_exchange_key_rq   *message,
                      unsigned char             *out);
size_t c_shuttle_lobby_exchange_key_rq_pack_to_buffer
                     (const c_shuttle_lobby_exchange_key_rq   *message,
                      ProtobufCBuffer     *buffer);
c_shuttle_lobby_exchange_key_rq *
       c_shuttle_lobby_exchange_key_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_shuttle_lobby_exchange_key_rq_free_unpacked
                     (c_shuttle_lobby_exchange_key_rq *message,
                      ProtobufCAllocator *allocator);
/* c_shuttle_lobby_exchange_key_rs methods */
void   c_shuttle_lobby_exchange_key_rs_init
                     (c_shuttle_lobby_exchange_key_rs         *message);
size_t c_shuttle_lobby_exchange_key_rs_get_packed_size
                     (const c_shuttle_lobby_exchange_key_rs   *message);
size_t c_shuttle_lobby_exchange_key_rs_pack
                     (const c_shuttle_lobby_exchange_key_rs   *message,
                      unsigned char             *out);
size_t c_shuttle_lobby_exchange_key_rs_pack_to_buffer
                     (const c_shuttle_lobby_exchange_key_rs   *message,
                      ProtobufCBuffer     *buffer);
c_shuttle_lobby_exchange_key_rs *
       c_shuttle_lobby_exchange_key_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_shuttle_lobby_exchange_key_rs_free_unpacked
                     (c_shuttle_lobby_exchange_key_rs *message,
                      ProtobufCAllocator *allocator);
/* c_shuttle_lobby_token_verify_rq methods */
void   c_shuttle_lobby_token_verify_rq_init
                     (c_shuttle_lobby_token_verify_rq         *message);
size_t c_shuttle_lobby_token_verify_rq_get_packed_size
                     (const c_shuttle_lobby_token_verify_rq   *message);
size_t c_shuttle_lobby_token_verify_rq_pack
                     (const c_shuttle_lobby_token_verify_rq   *message,
                      unsigned char             *out);
size_t c_shuttle_lobby_token_verify_rq_pack_to_buffer
                     (const c_shuttle_lobby_token_verify_rq   *message,
                      ProtobufCBuffer     *buffer);
c_shuttle_lobby_token_verify_rq *
       c_shuttle_lobby_token_verify_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_shuttle_lobby_token_verify_rq_free_unpacked
                     (c_shuttle_lobby_token_verify_rq *message,
                      ProtobufCAllocator *allocator);
/* c_shuttle_lobby_token_verify_rs methods */
void   c_shuttle_lobby_token_verify_rs_init
                     (c_shuttle_lobby_token_verify_rs         *message);
size_t c_shuttle_lobby_token_verify_rs_get_packed_size
                     (const c_shuttle_lobby_token_verify_rs   *message);
size_t c_shuttle_lobby_token_verify_rs_pack
                     (const c_shuttle_lobby_token_verify_rs   *message,
                      unsigned char             *out);
size_t c_shuttle_lobby_token_verify_rs_pack_to_buffer
                     (const c_shuttle_lobby_token_verify_rs   *message,
                      ProtobufCBuffer     *buffer);
c_shuttle_lobby_token_verify_rs *
       c_shuttle_lobby_token_verify_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_shuttle_lobby_token_verify_rs_free_unpacked
                     (c_shuttle_lobby_token_verify_rs *message,
                      ProtobufCAllocator *allocator);
/* c_shuttle_lobby_heartbeat_rq methods */
void   c_shuttle_lobby_heartbeat_rq_init
                     (c_shuttle_lobby_heartbeat_rq         *message);
size_t c_shuttle_lobby_heartbeat_rq_get_packed_size
                     (const c_shuttle_lobby_heartbeat_rq   *message);
size_t c_shuttle_lobby_heartbeat_rq_pack
                     (const c_shuttle_lobby_heartbeat_rq   *message,
                      unsigned char             *out);
size_t c_shuttle_lobby_heartbeat_rq_pack_to_buffer
                     (const c_shuttle_lobby_heartbeat_rq   *message,
                      ProtobufCBuffer     *buffer);
c_shuttle_lobby_heartbeat_rq *
       c_shuttle_lobby_heartbeat_rq_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_shuttle_lobby_heartbeat_rq_free_unpacked
                     (c_shuttle_lobby_heartbeat_rq *message,
                      ProtobufCAllocator *allocator);
/* c_shuttle_lobby_heartbeat_rs methods */
void   c_shuttle_lobby_heartbeat_rs_init
                     (c_shuttle_lobby_heartbeat_rs         *message);
size_t c_shuttle_lobby_heartbeat_rs_get_packed_size
                     (const c_shuttle_lobby_heartbeat_rs   *message);
size_t c_shuttle_lobby_heartbeat_rs_pack
                     (const c_shuttle_lobby_heartbeat_rs   *message,
                      unsigned char             *out);
size_t c_shuttle_lobby_heartbeat_rs_pack_to_buffer
                     (const c_shuttle_lobby_heartbeat_rs   *message,
                      ProtobufCBuffer     *buffer);
c_shuttle_lobby_heartbeat_rs *
       c_shuttle_lobby_heartbeat_rs_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   c_shuttle_lobby_heartbeat_rs_free_unpacked
                     (c_shuttle_lobby_heartbeat_rs *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*c_shuttle_lobby_exchange_key_rq_Closure)
                 (const c_shuttle_lobby_exchange_key_rq *message,
                  void *closure_data);
typedef void (*c_shuttle_lobby_exchange_key_rs_Closure)
                 (const c_shuttle_lobby_exchange_key_rs *message,
                  void *closure_data);
typedef void (*c_shuttle_lobby_token_verify_rq_Closure)
                 (const c_shuttle_lobby_token_verify_rq *message,
                  void *closure_data);
typedef void (*c_shuttle_lobby_token_verify_rs_Closure)
                 (const c_shuttle_lobby_token_verify_rs *message,
                  void *closure_data);
typedef void (*c_shuttle_lobby_heartbeat_rq_Closure)
                 (const c_shuttle_lobby_heartbeat_rq *message,
                  void *closure_data);
typedef void (*c_shuttle_lobby_heartbeat_rs_Closure)
                 (const c_shuttle_lobby_heartbeat_rs *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    c_shuttle_lobby_msg_descriptor;
extern const ProtobufCMessageDescriptor c_shuttle_lobby_exchange_key_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_shuttle_lobby_exchange_key_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_shuttle_lobby_exchange_key_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_shuttle_lobby_exchange_key_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_shuttle_lobby_token_verify_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_shuttle_lobby_token_verify_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_shuttle_lobby_token_verify_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_shuttle_lobby_token_verify_rs_msg_descriptor;
extern const ProtobufCMessageDescriptor c_shuttle_lobby_heartbeat_rq_descriptor;
extern const ProtobufCEnumDescriptor    c_shuttle_lobby_heartbeat_rq_msg_descriptor;
extern const ProtobufCMessageDescriptor c_shuttle_lobby_heartbeat_rs_descriptor;
extern const ProtobufCEnumDescriptor    c_shuttle_lobby_heartbeat_rs_msg_descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_c_5fshuttle_5flobby_2eproto_INCLUDED */
