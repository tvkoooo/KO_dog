/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_b_5fbusiness_5frelation_2eproto_INCLUDED
#define PROTOBUF_C_b_5fbusiness_5frelation_2eproto_INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _b_business_relation_user_relation b_business_relation_user_relation;
typedef struct _b_business_relation_user_relation_group b_business_relation_user_relation_group;
typedef struct _b_business_relation_friend_apply b_business_relation_friend_apply;


/* --- enums --- */


/* --- messages --- */

struct  _b_business_relation_user_relation
{
  ProtobufCMessage base;
  unsigned long long int user_id;
  unsigned long long int friend_group_id;
  unsigned long long int friend_id;
  char *friend_remark;
  unsigned int build_friend_time;
};
#define b_business_relation_user_relation_Init \
 { PROTOBUF_C_MESSAGE_INIT (&b_business_relation_user_relation_descriptor) \
    , 0, 0, 0, NULL, 0 }


struct  _b_business_relation_user_relation_group
{
  ProtobufCMessage base;
  unsigned long long int id;
  unsigned long long int user_id;
  char *friend_group;
};
#define b_business_relation_user_relation_group_Init \
 { PROTOBUF_C_MESSAGE_INIT (&b_business_relation_user_relation_group_descriptor) \
    , 0, 0, NULL }


struct  _b_business_relation_friend_apply
{
  ProtobufCMessage base;
  unsigned long long int user_apply_id;
  char *user_apply_name;
  char *user_apply_nick;
  unsigned int user_apply_create_time;
  char *user_apply_description;
};
#define b_business_relation_friend_apply_Init \
 { PROTOBUF_C_MESSAGE_INIT (&b_business_relation_friend_apply_descriptor) \
    , 0, NULL, NULL, 0, NULL }


/* b_business_relation_user_relation methods */
void   b_business_relation_user_relation_init
                     (b_business_relation_user_relation         *message);
size_t b_business_relation_user_relation_get_packed_size
                     (const b_business_relation_user_relation   *message);
size_t b_business_relation_user_relation_pack
                     (const b_business_relation_user_relation   *message,
                      unsigned char             *out);
size_t b_business_relation_user_relation_pack_to_buffer
                     (const b_business_relation_user_relation   *message,
                      ProtobufCBuffer     *buffer);
b_business_relation_user_relation *
       b_business_relation_user_relation_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   b_business_relation_user_relation_free_unpacked
                     (b_business_relation_user_relation *message,
                      ProtobufCAllocator *allocator);
/* b_business_relation_user_relation_group methods */
void   b_business_relation_user_relation_group_init
                     (b_business_relation_user_relation_group         *message);
size_t b_business_relation_user_relation_group_get_packed_size
                     (const b_business_relation_user_relation_group   *message);
size_t b_business_relation_user_relation_group_pack
                     (const b_business_relation_user_relation_group   *message,
                      unsigned char             *out);
size_t b_business_relation_user_relation_group_pack_to_buffer
                     (const b_business_relation_user_relation_group   *message,
                      ProtobufCBuffer     *buffer);
b_business_relation_user_relation_group *
       b_business_relation_user_relation_group_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   b_business_relation_user_relation_group_free_unpacked
                     (b_business_relation_user_relation_group *message,
                      ProtobufCAllocator *allocator);
/* b_business_relation_friend_apply methods */
void   b_business_relation_friend_apply_init
                     (b_business_relation_friend_apply         *message);
size_t b_business_relation_friend_apply_get_packed_size
                     (const b_business_relation_friend_apply   *message);
size_t b_business_relation_friend_apply_pack
                     (const b_business_relation_friend_apply   *message,
                      unsigned char             *out);
size_t b_business_relation_friend_apply_pack_to_buffer
                     (const b_business_relation_friend_apply   *message,
                      ProtobufCBuffer     *buffer);
b_business_relation_friend_apply *
       b_business_relation_friend_apply_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const unsigned char       *data);
void   b_business_relation_friend_apply_free_unpacked
                     (b_business_relation_friend_apply *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*b_business_relation_user_relation_Closure)
                 (const b_business_relation_user_relation *message,
                  void *closure_data);
typedef void (*b_business_relation_user_relation_group_Closure)
                 (const b_business_relation_user_relation_group *message,
                  void *closure_data);
typedef void (*b_business_relation_friend_apply_Closure)
                 (const b_business_relation_friend_apply *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor b_business_relation_user_relation_descriptor;
extern const ProtobufCMessageDescriptor b_business_relation_user_relation_group_descriptor;
extern const ProtobufCMessageDescriptor b_business_relation_friend_apply_descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_b_5fbusiness_5frelation_2eproto_INCLUDED */
