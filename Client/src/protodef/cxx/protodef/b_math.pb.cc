// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: b_math.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "b_math.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace b_math {
class coordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<coord> {
} _coord_default_instance_;
class vec2DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<vec2> {
} _vec2_default_instance_;
class vec3DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<vec3> {
} _vec3_default_instance_;
class vec4DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<vec4> {
} _vec4_default_instance_;
class mat3DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<mat3> {
} _mat3_default_instance_;
class mat4DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<mat4> {
} _mat4_default_instance_;

namespace protobuf_b_5fmath_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(coord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(coord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(coord, j_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(coord, w_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec2, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec2, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec3, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec3, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec4, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec4, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec4, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec4, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec4, w_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mat3, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mat3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mat3, m_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mat4, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mat4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mat4, m_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(coord)},
  { 9, 16, sizeof(vec2)},
  { 18, 26, sizeof(vec3)},
  { 29, 38, sizeof(vec4)},
  { 42, 48, sizeof(mat3)},
  { 49, 55, sizeof(mat4)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_coord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_vec2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_vec3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_vec4_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_mat3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_mat4_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "b_math.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _coord_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _vec2_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _vec3_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _vec4_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _mat3_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _mat4_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _coord_default_instance_.DefaultConstruct();
  _vec2_default_instance_.DefaultConstruct();
  _vec3_default_instance_.DefaultConstruct();
  _vec4_default_instance_.DefaultConstruct();
  _mat3_default_instance_.DefaultConstruct();
  _mat4_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014b_math.proto\022\006b_math\"#\n\005coord\022\014\n\001j\030\001 \002"
      "(\001:\0010\022\014\n\001w\030\002 \002(\001:\0010\"\"\n\004vec2\022\014\n\001x\030\001 \002(\001:\001"
      "0\022\014\n\001y\030\002 \002(\001:\0010\"0\n\004vec3\022\014\n\001x\030\001 \002(\001:\0010\022\014\n"
      "\001y\030\002 \002(\001:\0010\022\014\n\001z\030\003 \002(\001:\0010\">\n\004vec4\022\014\n\001x\030\001"
      " \002(\001:\0010\022\014\n\001y\030\002 \002(\001:\0010\022\014\n\001z\030\003 \002(\001:\0010\022\014\n\001w"
      "\030\004 \002(\001:\0010\"\021\n\004mat3\022\t\n\001m\030\001 \003(\001\"\021\n\004mat4\022\t\n\001"
      "m\030\001 \003(\001B6\n\010protodefB\006b_mathZ\017protodef/b_"
      "math\242\002\007B_math_\252\002\006b_math"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 303);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "b_math.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_b_5fmath_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int coord::kJFieldNumber;
const int coord::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

coord::coord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_b_5fmath_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:b_math.coord)
}
coord::coord(const coord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&j_, &from.j_,
    reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&j_) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:b_math.coord)
}

void coord::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&j_, 0, reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&j_) + sizeof(w_));
}

coord::~coord() {
  // @@protoc_insertion_point(destructor:b_math.coord)
  SharedDtor();
}

void coord::SharedDtor() {
}

void coord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* coord::descriptor() {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const coord& coord::default_instance() {
  protobuf_b_5fmath_2eproto::InitDefaults();
  return *internal_default_instance();
}

coord* coord::New(::google::protobuf::Arena* arena) const {
  coord* n = new coord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void coord::Clear() {
// @@protoc_insertion_point(message_clear_start:b_math.coord)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&j_, 0, reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&j_) + sizeof(w_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool coord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:b_math.coord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double j = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_j();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &j_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double w = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_w();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:b_math.coord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:b_math.coord)
  return false;
#undef DO_
}

void coord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:b_math.coord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double j = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->j(), output);
  }

  // required double w = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->w(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:b_math.coord)
}

::google::protobuf::uint8* coord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:b_math.coord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double j = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->j(), target);
  }

  // required double w = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->w(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:b_math.coord)
  return target;
}

size_t coord::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:b_math.coord)
  size_t total_size = 0;

  if (has_j()) {
    // required double j = 1 [default = 0];
    total_size += 1 + 8;
  }

  if (has_w()) {
    // required double w = 2 [default = 0];
    total_size += 1 + 8;
  }

  return total_size;
}
size_t coord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:b_math.coord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double j = 1 [default = 0];
    total_size += 1 + 8;

    // required double w = 2 [default = 0];
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void coord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:b_math.coord)
  GOOGLE_DCHECK_NE(&from, this);
  const coord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const coord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:b_math.coord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:b_math.coord)
    MergeFrom(*source);
  }
}

void coord::MergeFrom(const coord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:b_math.coord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      j_ = from.j_;
    }
    if (cached_has_bits & 0x00000002u) {
      w_ = from.w_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void coord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:b_math.coord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void coord::CopyFrom(const coord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:b_math.coord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool coord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void coord::Swap(coord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void coord::InternalSwap(coord* other) {
  std::swap(j_, other->j_);
  std::swap(w_, other->w_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata coord::GetMetadata() const {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// coord

// required double j = 1 [default = 0];
bool coord::has_j() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void coord::set_has_j() {
  _has_bits_[0] |= 0x00000001u;
}
void coord::clear_has_j() {
  _has_bits_[0] &= ~0x00000001u;
}
void coord::clear_j() {
  j_ = 0;
  clear_has_j();
}
double coord::j() const {
  // @@protoc_insertion_point(field_get:b_math.coord.j)
  return j_;
}
void coord::set_j(double value) {
  set_has_j();
  j_ = value;
  // @@protoc_insertion_point(field_set:b_math.coord.j)
}

// required double w = 2 [default = 0];
bool coord::has_w() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void coord::set_has_w() {
  _has_bits_[0] |= 0x00000002u;
}
void coord::clear_has_w() {
  _has_bits_[0] &= ~0x00000002u;
}
void coord::clear_w() {
  w_ = 0;
  clear_has_w();
}
double coord::w() const {
  // @@protoc_insertion_point(field_get:b_math.coord.w)
  return w_;
}
void coord::set_w(double value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:b_math.coord.w)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int vec2::kXFieldNumber;
const int vec2::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

vec2::vec2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_b_5fmath_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:b_math.vec2)
}
vec2::vec2(const vec2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:b_math.vec2)
}

void vec2::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
}

vec2::~vec2() {
  // @@protoc_insertion_point(destructor:b_math.vec2)
  SharedDtor();
}

void vec2::SharedDtor() {
}

void vec2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* vec2::descriptor() {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const vec2& vec2::default_instance() {
  protobuf_b_5fmath_2eproto::InitDefaults();
  return *internal_default_instance();
}

vec2* vec2::New(::google::protobuf::Arena* arena) const {
  vec2* n = new vec2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void vec2::Clear() {
// @@protoc_insertion_point(message_clear_start:b_math.vec2)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool vec2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:b_math.vec2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:b_math.vec2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:b_math.vec2)
  return false;
#undef DO_
}

void vec2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:b_math.vec2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:b_math.vec2)
}

::google::protobuf::uint8* vec2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:b_math.vec2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:b_math.vec2)
  return target;
}

size_t vec2::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:b_math.vec2)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1 [default = 0];
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2 [default = 0];
    total_size += 1 + 8;
  }

  return total_size;
}
size_t vec2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:b_math.vec2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double x = 1 [default = 0];
    total_size += 1 + 8;

    // required double y = 2 [default = 0];
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void vec2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:b_math.vec2)
  GOOGLE_DCHECK_NE(&from, this);
  const vec2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const vec2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:b_math.vec2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:b_math.vec2)
    MergeFrom(*source);
  }
}

void vec2::MergeFrom(const vec2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:b_math.vec2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void vec2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:b_math.vec2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void vec2::CopyFrom(const vec2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:b_math.vec2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool vec2::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void vec2::Swap(vec2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void vec2::InternalSwap(vec2* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata vec2::GetMetadata() const {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// vec2

// required double x = 1 [default = 0];
bool vec2::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void vec2::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void vec2::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void vec2::clear_x() {
  x_ = 0;
  clear_has_x();
}
double vec2::x() const {
  // @@protoc_insertion_point(field_get:b_math.vec2.x)
  return x_;
}
void vec2::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:b_math.vec2.x)
}

// required double y = 2 [default = 0];
bool vec2::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void vec2::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void vec2::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void vec2::clear_y() {
  y_ = 0;
  clear_has_y();
}
double vec2::y() const {
  // @@protoc_insertion_point(field_get:b_math.vec2.y)
  return y_;
}
void vec2::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:b_math.vec2.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int vec3::kXFieldNumber;
const int vec3::kYFieldNumber;
const int vec3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

vec3::vec3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_b_5fmath_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:b_math.vec3)
}
vec3::vec3(const vec3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:b_math.vec3)
}

void vec3::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
}

vec3::~vec3() {
  // @@protoc_insertion_point(destructor:b_math.vec3)
  SharedDtor();
}

void vec3::SharedDtor() {
}

void vec3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* vec3::descriptor() {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const vec3& vec3::default_instance() {
  protobuf_b_5fmath_2eproto::InitDefaults();
  return *internal_default_instance();
}

vec3* vec3::New(::google::protobuf::Arena* arena) const {
  vec3* n = new vec3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:b_math.vec3)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool vec3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:b_math.vec3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double z = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:b_math.vec3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:b_math.vec3)
  return false;
#undef DO_
}

void vec3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:b_math.vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double z = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:b_math.vec3)
}

::google::protobuf::uint8* vec3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:b_math.vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double z = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:b_math.vec3)
  return target;
}

size_t vec3::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:b_math.vec3)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1 [default = 0];
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2 [default = 0];
    total_size += 1 + 8;
  }

  if (has_z()) {
    // required double z = 3 [default = 0];
    total_size += 1 + 8;
  }

  return total_size;
}
size_t vec3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:b_math.vec3)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required double x = 1 [default = 0];
    total_size += 1 + 8;

    // required double y = 2 [default = 0];
    total_size += 1 + 8;

    // required double z = 3 [default = 0];
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void vec3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:b_math.vec3)
  GOOGLE_DCHECK_NE(&from, this);
  const vec3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const vec3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:b_math.vec3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:b_math.vec3)
    MergeFrom(*source);
  }
}

void vec3::MergeFrom(const vec3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:b_math.vec3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void vec3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:b_math.vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void vec3::CopyFrom(const vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:b_math.vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool vec3::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void vec3::Swap(vec3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void vec3::InternalSwap(vec3* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata vec3::GetMetadata() const {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// vec3

// required double x = 1 [default = 0];
bool vec3::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void vec3::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void vec3::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void vec3::clear_x() {
  x_ = 0;
  clear_has_x();
}
double vec3::x() const {
  // @@protoc_insertion_point(field_get:b_math.vec3.x)
  return x_;
}
void vec3::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:b_math.vec3.x)
}

// required double y = 2 [default = 0];
bool vec3::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void vec3::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void vec3::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void vec3::clear_y() {
  y_ = 0;
  clear_has_y();
}
double vec3::y() const {
  // @@protoc_insertion_point(field_get:b_math.vec3.y)
  return y_;
}
void vec3::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:b_math.vec3.y)
}

// required double z = 3 [default = 0];
bool vec3::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void vec3::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void vec3::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void vec3::clear_z() {
  z_ = 0;
  clear_has_z();
}
double vec3::z() const {
  // @@protoc_insertion_point(field_get:b_math.vec3.z)
  return z_;
}
void vec3::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:b_math.vec3.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int vec4::kXFieldNumber;
const int vec4::kYFieldNumber;
const int vec4::kZFieldNumber;
const int vec4::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

vec4::vec4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_b_5fmath_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:b_math.vec4)
}
vec4::vec4(const vec4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:b_math.vec4)
}

void vec4::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_) + sizeof(w_));
}

vec4::~vec4() {
  // @@protoc_insertion_point(destructor:b_math.vec4)
  SharedDtor();
}

void vec4::SharedDtor() {
}

void vec4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* vec4::descriptor() {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const vec4& vec4::default_instance() {
  protobuf_b_5fmath_2eproto::InitDefaults();
  return *internal_default_instance();
}

vec4* vec4::New(::google::protobuf::Arena* arena) const {
  vec4* n = new vec4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void vec4::Clear() {
// @@protoc_insertion_point(message_clear_start:b_math.vec4)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_) + sizeof(w_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool vec4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:b_math.vec4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double z = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double w = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_w();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:b_math.vec4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:b_math.vec4)
  return false;
#undef DO_
}

void vec4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:b_math.vec4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double z = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // required double w = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->w(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:b_math.vec4)
}

::google::protobuf::uint8* vec4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:b_math.vec4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double z = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // required double w = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->w(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:b_math.vec4)
  return target;
}

size_t vec4::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:b_math.vec4)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1 [default = 0];
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2 [default = 0];
    total_size += 1 + 8;
  }

  if (has_z()) {
    // required double z = 3 [default = 0];
    total_size += 1 + 8;
  }

  if (has_w()) {
    // required double w = 4 [default = 0];
    total_size += 1 + 8;
  }

  return total_size;
}
size_t vec4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:b_math.vec4)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required double x = 1 [default = 0];
    total_size += 1 + 8;

    // required double y = 2 [default = 0];
    total_size += 1 + 8;

    // required double z = 3 [default = 0];
    total_size += 1 + 8;

    // required double w = 4 [default = 0];
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void vec4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:b_math.vec4)
  GOOGLE_DCHECK_NE(&from, this);
  const vec4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const vec4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:b_math.vec4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:b_math.vec4)
    MergeFrom(*source);
  }
}

void vec4::MergeFrom(const vec4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:b_math.vec4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      w_ = from.w_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void vec4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:b_math.vec4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void vec4::CopyFrom(const vec4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:b_math.vec4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool vec4::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void vec4::Swap(vec4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void vec4::InternalSwap(vec4* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(w_, other->w_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata vec4::GetMetadata() const {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// vec4

// required double x = 1 [default = 0];
bool vec4::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void vec4::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void vec4::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void vec4::clear_x() {
  x_ = 0;
  clear_has_x();
}
double vec4::x() const {
  // @@protoc_insertion_point(field_get:b_math.vec4.x)
  return x_;
}
void vec4::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:b_math.vec4.x)
}

// required double y = 2 [default = 0];
bool vec4::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void vec4::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void vec4::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void vec4::clear_y() {
  y_ = 0;
  clear_has_y();
}
double vec4::y() const {
  // @@protoc_insertion_point(field_get:b_math.vec4.y)
  return y_;
}
void vec4::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:b_math.vec4.y)
}

// required double z = 3 [default = 0];
bool vec4::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void vec4::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void vec4::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void vec4::clear_z() {
  z_ = 0;
  clear_has_z();
}
double vec4::z() const {
  // @@protoc_insertion_point(field_get:b_math.vec4.z)
  return z_;
}
void vec4::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:b_math.vec4.z)
}

// required double w = 4 [default = 0];
bool vec4::has_w() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void vec4::set_has_w() {
  _has_bits_[0] |= 0x00000008u;
}
void vec4::clear_has_w() {
  _has_bits_[0] &= ~0x00000008u;
}
void vec4::clear_w() {
  w_ = 0;
  clear_has_w();
}
double vec4::w() const {
  // @@protoc_insertion_point(field_get:b_math.vec4.w)
  return w_;
}
void vec4::set_w(double value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:b_math.vec4.w)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mat3::kMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mat3::mat3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_b_5fmath_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:b_math.mat3)
}
mat3::mat3(const mat3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      m_(from.m_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:b_math.mat3)
}

void mat3::SharedCtor() {
  _cached_size_ = 0;
}

mat3::~mat3() {
  // @@protoc_insertion_point(destructor:b_math.mat3)
  SharedDtor();
}

void mat3::SharedDtor() {
}

void mat3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mat3::descriptor() {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mat3& mat3::default_instance() {
  protobuf_b_5fmath_2eproto::InitDefaults();
  return *internal_default_instance();
}

mat3* mat3::New(::google::protobuf::Arena* arena) const {
  mat3* n = new mat3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mat3::Clear() {
// @@protoc_insertion_point(message_clear_start:b_math.mat3)
  m_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool mat3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:b_math.mat3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double m = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_m())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_m())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:b_math.mat3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:b_math.mat3)
  return false;
#undef DO_
}

void mat3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:b_math.mat3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double m = 1;
  for (int i = 0, n = this->m_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->m(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:b_math.mat3)
}

::google::protobuf::uint8* mat3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:b_math.mat3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double m = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->m_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:b_math.mat3)
  return target;
}

size_t mat3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:b_math.mat3)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated double m = 1;
  {
    unsigned int count = this->m_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->m_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mat3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:b_math.mat3)
  GOOGLE_DCHECK_NE(&from, this);
  const mat3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mat3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:b_math.mat3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:b_math.mat3)
    MergeFrom(*source);
  }
}

void mat3::MergeFrom(const mat3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:b_math.mat3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  m_.MergeFrom(from.m_);
}

void mat3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:b_math.mat3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mat3::CopyFrom(const mat3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:b_math.mat3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mat3::IsInitialized() const {
  return true;
}

void mat3::Swap(mat3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mat3::InternalSwap(mat3* other) {
  m_.InternalSwap(&other->m_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mat3::GetMetadata() const {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// mat3

// repeated double m = 1;
int mat3::m_size() const {
  return m_.size();
}
void mat3::clear_m() {
  m_.Clear();
}
double mat3::m(int index) const {
  // @@protoc_insertion_point(field_get:b_math.mat3.m)
  return m_.Get(index);
}
void mat3::set_m(int index, double value) {
  m_.Set(index, value);
  // @@protoc_insertion_point(field_set:b_math.mat3.m)
}
void mat3::add_m(double value) {
  m_.Add(value);
  // @@protoc_insertion_point(field_add:b_math.mat3.m)
}
const ::google::protobuf::RepeatedField< double >&
mat3::m() const {
  // @@protoc_insertion_point(field_list:b_math.mat3.m)
  return m_;
}
::google::protobuf::RepeatedField< double >*
mat3::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:b_math.mat3.m)
  return &m_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mat4::kMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mat4::mat4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_b_5fmath_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:b_math.mat4)
}
mat4::mat4(const mat4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      m_(from.m_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:b_math.mat4)
}

void mat4::SharedCtor() {
  _cached_size_ = 0;
}

mat4::~mat4() {
  // @@protoc_insertion_point(destructor:b_math.mat4)
  SharedDtor();
}

void mat4::SharedDtor() {
}

void mat4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mat4::descriptor() {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mat4& mat4::default_instance() {
  protobuf_b_5fmath_2eproto::InitDefaults();
  return *internal_default_instance();
}

mat4* mat4::New(::google::protobuf::Arena* arena) const {
  mat4* n = new mat4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mat4::Clear() {
// @@protoc_insertion_point(message_clear_start:b_math.mat4)
  m_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool mat4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:b_math.mat4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double m = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_m())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_m())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:b_math.mat4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:b_math.mat4)
  return false;
#undef DO_
}

void mat4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:b_math.mat4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double m = 1;
  for (int i = 0, n = this->m_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->m(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:b_math.mat4)
}

::google::protobuf::uint8* mat4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:b_math.mat4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double m = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->m_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:b_math.mat4)
  return target;
}

size_t mat4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:b_math.mat4)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated double m = 1;
  {
    unsigned int count = this->m_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->m_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mat4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:b_math.mat4)
  GOOGLE_DCHECK_NE(&from, this);
  const mat4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mat4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:b_math.mat4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:b_math.mat4)
    MergeFrom(*source);
  }
}

void mat4::MergeFrom(const mat4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:b_math.mat4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  m_.MergeFrom(from.m_);
}

void mat4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:b_math.mat4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mat4::CopyFrom(const mat4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:b_math.mat4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mat4::IsInitialized() const {
  return true;
}

void mat4::Swap(mat4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mat4::InternalSwap(mat4* other) {
  m_.InternalSwap(&other->m_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mat4::GetMetadata() const {
  protobuf_b_5fmath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_b_5fmath_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// mat4

// repeated double m = 1;
int mat4::m_size() const {
  return m_.size();
}
void mat4::clear_m() {
  m_.Clear();
}
double mat4::m(int index) const {
  // @@protoc_insertion_point(field_get:b_math.mat4.m)
  return m_.Get(index);
}
void mat4::set_m(int index, double value) {
  m_.Set(index, value);
  // @@protoc_insertion_point(field_set:b_math.mat4.m)
}
void mat4::add_m(double value) {
  m_.Add(value);
  // @@protoc_insertion_point(field_add:b_math.mat4.m)
}
const ::google::protobuf::RepeatedField< double >&
mat4::m() const {
  // @@protoc_insertion_point(field_list:b_math.mat4.m)
  return m_;
}
::google::protobuf::RepeatedField< double >*
mat4::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:b_math.mat4.m)
  return &m_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace b_math

// @@protoc_insertion_point(global_scope)
