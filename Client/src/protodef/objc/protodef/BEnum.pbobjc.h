// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: b_enum.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum B_enum_reply_t

typedef GPB_ENUM(B_enum_reply_t) {
  /** 接受 */
  B_enum_reply_t_Accept = 0,

  /** 拒绝 */
  B_enum_reply_t_Refuse = 1,
};

GPBEnumDescriptor *B_enum_reply_t_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL B_enum_reply_t_IsValidValue(int32_t value);

#pragma mark - Enum B_enum_operate_t

typedef GPB_ENUM(B_enum_operate_t) {
  /** 确定 */
  B_enum_operate_t_Ensure = 0,

  /** 取消 */
  B_enum_operate_t_Cancel = 1,
};

GPBEnumDescriptor *B_enum_operate_t_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL B_enum_operate_t_IsValidValue(int32_t value);

#pragma mark - Enum B_enum_opcode_t

/** 数据表操作码 */
typedef GPB_ENUM(B_enum_opcode_t) {
  /** 替换本地所有 */
  B_enum_opcode_t_Assign = 0,

  /** 更新本地指定 */
  B_enum_opcode_t_Update = 1,

  /** 直接插入新值 */
  B_enum_opcode_t_Insert = 2,

  /** 清除本地指定 */
  B_enum_opcode_t_Remove = 3,

  /** 清除本地所有 */
  B_enum_opcode_t_Delete = 4,
};

GPBEnumDescriptor *B_enum_opcode_t_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL B_enum_opcode_t_IsValidValue(int32_t value);

#pragma mark - B_enum_BEnumRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface B_enum_BEnumRoot : GPBRootObject
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
