// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c_business_relation.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class B_business_account_user_info;
@class B_business_relation_friend_apply;
@class B_business_relation_user_relation;
@class B_business_relation_user_relation_group;
@class B_error_info;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum C_business_relation_msg

typedef GPB_ENUM(C_business_relation_msg) {
  C_business_relation_msg_MinId = 33562880,
  C_business_relation_msg_MaxId = 33563135,
};

GPBEnumDescriptor *C_business_relation_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_add_friend_rq_msg

typedef GPB_ENUM(C_business_relation_add_friend_rq_msg) {
  C_business_relation_add_friend_rq_msg_Id = 33562897,
};

GPBEnumDescriptor *C_business_relation_add_friend_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_add_friend_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_add_friend_rs_msg

typedef GPB_ENUM(C_business_relation_add_friend_rs_msg) {
  C_business_relation_add_friend_rs_msg_Id = 33562898,
};

GPBEnumDescriptor *C_business_relation_add_friend_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_add_friend_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_add_friend_nt_msg

typedef GPB_ENUM(C_business_relation_add_friend_nt_msg) {
  C_business_relation_add_friend_nt_msg_Id = 33563009,
};

GPBEnumDescriptor *C_business_relation_add_friend_nt_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_add_friend_nt_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_delete_friend_rq_msg

typedef GPB_ENUM(C_business_relation_delete_friend_rq_msg) {
  C_business_relation_delete_friend_rq_msg_Id = 33562899,
};

GPBEnumDescriptor *C_business_relation_delete_friend_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_delete_friend_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_delete_friend_rs_msg

typedef GPB_ENUM(C_business_relation_delete_friend_rs_msg) {
  C_business_relation_delete_friend_rs_msg_Id = 33562900,
};

GPBEnumDescriptor *C_business_relation_delete_friend_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_delete_friend_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_delete_friend_nt_msg

typedef GPB_ENUM(C_business_relation_delete_friend_nt_msg) {
  C_business_relation_delete_friend_nt_msg_Id = 33563010,
};

GPBEnumDescriptor *C_business_relation_delete_friend_nt_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_delete_friend_nt_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_allow_friend_rq_msg

typedef GPB_ENUM(C_business_relation_allow_friend_rq_msg) {
  C_business_relation_allow_friend_rq_msg_Id = 33562901,
};

GPBEnumDescriptor *C_business_relation_allow_friend_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_allow_friend_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_allow_friend_rq_opcode_t

typedef GPB_ENUM(C_business_relation_allow_friend_rq_opcode_t) {
  C_business_relation_allow_friend_rq_opcode_t_Allow = 1,
  C_business_relation_allow_friend_rq_opcode_t_Refuse = 2,
};

GPBEnumDescriptor *C_business_relation_allow_friend_rq_opcode_t_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_allow_friend_rq_opcode_t_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_allow_friend_rs_msg

typedef GPB_ENUM(C_business_relation_allow_friend_rs_msg) {
  C_business_relation_allow_friend_rs_msg_Id = 33562902,
};

GPBEnumDescriptor *C_business_relation_allow_friend_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_allow_friend_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_allow_friend_nt_msg

typedef GPB_ENUM(C_business_relation_allow_friend_nt_msg) {
  C_business_relation_allow_friend_nt_msg_Id = 33563011,
};

GPBEnumDescriptor *C_business_relation_allow_friend_nt_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_allow_friend_nt_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_query_friends_rq_msg

typedef GPB_ENUM(C_business_relation_query_friends_rq_msg) {
  C_business_relation_query_friends_rq_msg_Id = 33562903,
};

GPBEnumDescriptor *C_business_relation_query_friends_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_query_friends_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_query_friends_rs_msg

typedef GPB_ENUM(C_business_relation_query_friends_rs_msg) {
  C_business_relation_query_friends_rs_msg_Id = 33562904,
};

GPBEnumDescriptor *C_business_relation_query_friends_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_query_friends_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_rename_friend_remark_rq_msg

typedef GPB_ENUM(C_business_relation_rename_friend_remark_rq_msg) {
  C_business_relation_rename_friend_remark_rq_msg_Id = 33562905,
};

GPBEnumDescriptor *C_business_relation_rename_friend_remark_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_rename_friend_remark_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_rename_friend_remark_rs_msg

typedef GPB_ENUM(C_business_relation_rename_friend_remark_rs_msg) {
  C_business_relation_rename_friend_remark_rs_msg_Id = 33562912,
};

GPBEnumDescriptor *C_business_relation_rename_friend_remark_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_rename_friend_remark_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_add_friend_group_rq_msg

typedef GPB_ENUM(C_business_relation_add_friend_group_rq_msg) {
  C_business_relation_add_friend_group_rq_msg_Id = 33562913,
};

GPBEnumDescriptor *C_business_relation_add_friend_group_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_add_friend_group_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_add_friend_group_rs_msg

typedef GPB_ENUM(C_business_relation_add_friend_group_rs_msg) {
  C_business_relation_add_friend_group_rs_msg_Id = 33562914,
};

GPBEnumDescriptor *C_business_relation_add_friend_group_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_add_friend_group_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_delete_friend_group_rq_msg

typedef GPB_ENUM(C_business_relation_delete_friend_group_rq_msg) {
  C_business_relation_delete_friend_group_rq_msg_Id = 33562913,
};

GPBEnumDescriptor *C_business_relation_delete_friend_group_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_delete_friend_group_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_delete_friend_group_rs_msg

typedef GPB_ENUM(C_business_relation_delete_friend_group_rs_msg) {
  C_business_relation_delete_friend_group_rs_msg_Id = 33562914,
};

GPBEnumDescriptor *C_business_relation_delete_friend_group_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_delete_friend_group_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_rename_friend_group_rq_msg

typedef GPB_ENUM(C_business_relation_rename_friend_group_rq_msg) {
  C_business_relation_rename_friend_group_rq_msg_Id = 33562913,
};

GPBEnumDescriptor *C_business_relation_rename_friend_group_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_rename_friend_group_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_rename_friend_group_rs_msg

typedef GPB_ENUM(C_business_relation_rename_friend_group_rs_msg) {
  C_business_relation_rename_friend_group_rs_msg_Id = 33562914,
};

GPBEnumDescriptor *C_business_relation_rename_friend_group_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_rename_friend_group_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_change_friend_group_rq_msg

typedef GPB_ENUM(C_business_relation_change_friend_group_rq_msg) {
  C_business_relation_change_friend_group_rq_msg_Id = 33562915,
};

GPBEnumDescriptor *C_business_relation_change_friend_group_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_change_friend_group_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_change_friend_group_rs_msg

typedef GPB_ENUM(C_business_relation_change_friend_group_rs_msg) {
  C_business_relation_change_friend_group_rs_msg_Id = 33562916,
};

GPBEnumDescriptor *C_business_relation_change_friend_group_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_change_friend_group_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_query_friends_apply_rq_msg

typedef GPB_ENUM(C_business_relation_query_friends_apply_rq_msg) {
  C_business_relation_query_friends_apply_rq_msg_Id = 33562917,
};

GPBEnumDescriptor *C_business_relation_query_friends_apply_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_query_friends_apply_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_query_friends_apply_rs_msg

typedef GPB_ENUM(C_business_relation_query_friends_apply_rs_msg) {
  C_business_relation_query_friends_apply_rs_msg_Id = 33562918,
};

GPBEnumDescriptor *C_business_relation_query_friends_apply_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_query_friends_apply_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_talk_friend_rq_msg

typedef GPB_ENUM(C_business_relation_talk_friend_rq_msg) {
  C_business_relation_talk_friend_rq_msg_Id = 33562961,
};

GPBEnumDescriptor *C_business_relation_talk_friend_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_talk_friend_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_talk_friend_rs_msg

typedef GPB_ENUM(C_business_relation_talk_friend_rs_msg) {
  C_business_relation_talk_friend_rs_msg_Id = 33562962,
};

GPBEnumDescriptor *C_business_relation_talk_friend_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_talk_friend_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_business_relation_talk_friend_nt_msg

typedef GPB_ENUM(C_business_relation_talk_friend_nt_msg) {
  C_business_relation_talk_friend_nt_msg_Id = 33563025,
};

GPBEnumDescriptor *C_business_relation_talk_friend_nt_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_business_relation_talk_friend_nt_msg_IsValidValue(int32_t value);

#pragma mark - C_business_relation_CBusinessRelationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface C_business_relation_CBusinessRelationRoot : GPBRootObject
@end

#pragma mark - C_business_relation_friend_info

typedef GPB_ENUM(C_business_relation_friend_info_FieldNumber) {
  C_business_relation_friend_info_FieldNumber_UserInfo = 1,
  C_business_relation_friend_info_FieldNumber_UserGroup = 2,
  C_business_relation_friend_info_FieldNumber_UserRemark = 3,
};

@interface C_business_relation_friend_info : GPBMessage

/** 用户基础数据 */
@property(nonatomic, readwrite, strong, null_resettable) B_business_account_user_info *userInfo;
/** Test to see if @c userInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserInfo;

/** 用户分组 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userGroup;
/** Test to see if @c userGroup has been set. */
@property(nonatomic, readwrite) BOOL hasUserGroup;

/** 用户备注名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userRemark;
/** Test to see if @c userRemark has been set. */
@property(nonatomic, readwrite) BOOL hasUserRemark;

@end

#pragma mark - C_business_relation_add_friend_rq

typedef GPB_ENUM(C_business_relation_add_friend_rq_FieldNumber) {
  C_business_relation_add_friend_rq_FieldNumber_UserMyselfId = 1,
  C_business_relation_add_friend_rq_FieldNumber_UserAddId = 2,
  C_business_relation_add_friend_rq_FieldNumber_UserRemark = 3,
  C_business_relation_add_friend_rq_FieldNumber_Description_p = 4,
};

/**
 * (tcp)加好友
 **/
@interface C_business_relation_add_friend_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
/** 添加用户id */
@property(nonatomic, readwrite) uint64_t userAddId;

@property(nonatomic, readwrite) BOOL hasUserAddId;
/** 添加朋友备注名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userRemark;
/** Test to see if @c userRemark has been set. */
@property(nonatomic, readwrite) BOOL hasUserRemark;

/** 添加描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

@end

#pragma mark - C_business_relation_add_friend_rs

typedef GPB_ENUM(C_business_relation_add_friend_rs_FieldNumber) {
  C_business_relation_add_friend_rs_FieldNumber_Error = 1,
  C_business_relation_add_friend_rs_FieldNumber_UserAddId = 2,
  C_business_relation_add_friend_rs_FieldNumber_UserRemark = 3,
};

/**
 * (tcp)加好友
 **/
@interface C_business_relation_add_friend_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 添加用户id */
@property(nonatomic, readwrite) uint64_t userAddId;

@property(nonatomic, readwrite) BOOL hasUserAddId;
/** 添加朋友备注名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userRemark;
/** Test to see if @c userRemark has been set. */
@property(nonatomic, readwrite) BOOL hasUserRemark;

@end

#pragma mark - C_business_relation_add_friend_nt

typedef GPB_ENUM(C_business_relation_add_friend_nt_FieldNumber) {
  C_business_relation_add_friend_nt_FieldNumber_ApplyUserInfo = 1,
  C_business_relation_add_friend_nt_FieldNumber_Description_p = 2,
};

/**
 * (tcp)加好友
 **/
@interface C_business_relation_add_friend_nt : GPBMessage

/** 申请添加好友用户的数据 */
@property(nonatomic, readwrite, strong, null_resettable) B_business_account_user_info *applyUserInfo;
/** Test to see if @c applyUserInfo has been set. */
@property(nonatomic, readwrite) BOOL hasApplyUserInfo;

/** 添加描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

@end

#pragma mark - C_business_relation_delete_friend_rq

typedef GPB_ENUM(C_business_relation_delete_friend_rq_FieldNumber) {
  C_business_relation_delete_friend_rq_FieldNumber_UserMyselfId = 1,
  C_business_relation_delete_friend_rq_FieldNumber_UserDeleteId = 2,
};

/**
 * (tcp)删除好友
 **/
@interface C_business_relation_delete_friend_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
/** 删除用户id */
@property(nonatomic, readwrite) uint64_t userDeleteId;

@property(nonatomic, readwrite) BOOL hasUserDeleteId;
@end

#pragma mark - C_business_relation_delete_friend_rs

typedef GPB_ENUM(C_business_relation_delete_friend_rs_FieldNumber) {
  C_business_relation_delete_friend_rs_FieldNumber_Error = 1,
  C_business_relation_delete_friend_rs_FieldNumber_UserDeleteId = 2,
};

/**
 * (tcp)删除好友
 **/
@interface C_business_relation_delete_friend_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 删除用户id */
@property(nonatomic, readwrite) uint64_t userDeleteId;

@property(nonatomic, readwrite) BOOL hasUserDeleteId;
@end

#pragma mark - C_business_relation_delete_friend_nt

typedef GPB_ENUM(C_business_relation_delete_friend_nt_FieldNumber) {
  C_business_relation_delete_friend_nt_FieldNumber_ApplyUserId = 1,
};

/**
 * (tcp)删除好友
 **/
@interface C_business_relation_delete_friend_nt : GPBMessage

/** 申请删除好友的用户数据 */
@property(nonatomic, readwrite) uint64_t applyUserId;

@property(nonatomic, readwrite) BOOL hasApplyUserId;
@end

#pragma mark - C_business_relation_allow_friend_rq

typedef GPB_ENUM(C_business_relation_allow_friend_rq_FieldNumber) {
  C_business_relation_allow_friend_rq_FieldNumber_UserMyselfId = 1,
  C_business_relation_allow_friend_rq_FieldNumber_UserAllowId = 2,
  C_business_relation_allow_friend_rq_FieldNumber_UserMyselfNick = 3,
  C_business_relation_allow_friend_rq_FieldNumber_UserAllowNick = 4,
  C_business_relation_allow_friend_rq_FieldNumber_Opcode = 5,
};

/**
 * (tcp)同意加好友
 **/
@interface C_business_relation_allow_friend_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
/** 同意用户id */
@property(nonatomic, readwrite) uint64_t userAllowId;

@property(nonatomic, readwrite) BOOL hasUserAllowId;
/** 自己用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userMyselfNick;
/** Test to see if @c userMyselfNick has been set. */
@property(nonatomic, readwrite) BOOL hasUserMyselfNick;

/** 同意用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAllowNick;
/** Test to see if @c userAllowNick has been set. */
@property(nonatomic, readwrite) BOOL hasUserAllowNick;

/** 用户操作码 */
@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
@end

#pragma mark - C_business_relation_allow_friend_rs

typedef GPB_ENUM(C_business_relation_allow_friend_rs_FieldNumber) {
  C_business_relation_allow_friend_rs_FieldNumber_Error = 1,
  C_business_relation_allow_friend_rs_FieldNumber_UserAllowId = 2,
  C_business_relation_allow_friend_rs_FieldNumber_Opcode = 3,
  C_business_relation_allow_friend_rs_FieldNumber_RelationSArray = 4,
};

/**
 * (tcp)同意加好友
 **/
@interface C_business_relation_allow_friend_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 同意用户id */
@property(nonatomic, readwrite) uint64_t userAllowId;

@property(nonatomic, readwrite) BOOL hasUserAllowId;
/** 用户操作码 */
@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
/** 同意后的好友更新数据（如果不同意，该项无） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<B_business_relation_user_relation*> *relationSArray;
/** The number of items in @c relationSArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger relationSArray_Count;

@end

#pragma mark - C_business_relation_allow_friend_nt

typedef GPB_ENUM(C_business_relation_allow_friend_nt_FieldNumber) {
  C_business_relation_allow_friend_nt_FieldNumber_ApplyUserInfo = 1,
  C_business_relation_allow_friend_nt_FieldNumber_Opcode = 2,
  C_business_relation_allow_friend_nt_FieldNumber_RelationSArray = 3,
};

/**
 * (tcp)同意加好友
 **/
@interface C_business_relation_allow_friend_nt : GPBMessage

/** 同意添加好友的用户数据 */
@property(nonatomic, readwrite, strong, null_resettable) B_business_account_user_info *applyUserInfo;
/** Test to see if @c applyUserInfo has been set. */
@property(nonatomic, readwrite) BOOL hasApplyUserInfo;

/** 用户操作码 */
@property(nonatomic, readwrite) uint32_t opcode;

@property(nonatomic, readwrite) BOOL hasOpcode;
/** 同意后的好友更新数据（如果不同意，该项无） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<B_business_relation_user_relation*> *relationSArray;
/** The number of items in @c relationSArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger relationSArray_Count;

@end

#pragma mark - C_business_relation_query_friends_rq

typedef GPB_ENUM(C_business_relation_query_friends_rq_FieldNumber) {
  C_business_relation_query_friends_rq_FieldNumber_UserMyselfId = 1,
};

/**
 * (tcp)查询好友
 **/
@interface C_business_relation_query_friends_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
@end

#pragma mark - C_business_relation_query_friends_rs

typedef GPB_ENUM(C_business_relation_query_friends_rs_FieldNumber) {
  C_business_relation_query_friends_rs_FieldNumber_Error = 1,
  C_business_relation_query_friends_rs_FieldNumber_GroupSArray = 2,
  C_business_relation_query_friends_rs_FieldNumber_RelationSArray = 3,
};

/**
 * (tcp)查询好友
 **/
@interface C_business_relation_query_friends_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 好友关系组列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<B_business_relation_user_relation_group*> *groupSArray;
/** The number of items in @c groupSArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupSArray_Count;

/** 好友关系列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<B_business_relation_user_relation*> *relationSArray;
/** The number of items in @c relationSArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger relationSArray_Count;

@end

#pragma mark - C_business_relation_rename_friend_remark_rq

typedef GPB_ENUM(C_business_relation_rename_friend_remark_rq_FieldNumber) {
  C_business_relation_rename_friend_remark_rq_FieldNumber_UserMyselfId = 1,
  C_business_relation_rename_friend_remark_rq_FieldNumber_UserFriendId = 2,
  C_business_relation_rename_friend_remark_rq_FieldNumber_UserFriendRemark = 3,
};

/**
 * (tcp)修改好友备注
 **/
@interface C_business_relation_rename_friend_remark_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
/** 好友用户id */
@property(nonatomic, readwrite) uint64_t userFriendId;

@property(nonatomic, readwrite) BOOL hasUserFriendId;
/** 好友备注名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userFriendRemark;
/** Test to see if @c userFriendRemark has been set. */
@property(nonatomic, readwrite) BOOL hasUserFriendRemark;

@end

#pragma mark - C_business_relation_rename_friend_remark_rs

typedef GPB_ENUM(C_business_relation_rename_friend_remark_rs_FieldNumber) {
  C_business_relation_rename_friend_remark_rs_FieldNumber_Error = 1,
  C_business_relation_rename_friend_remark_rs_FieldNumber_UserFriendId = 2,
  C_business_relation_rename_friend_remark_rs_FieldNumber_UserFriendRemark = 3,
};

/**
 * (tcp)修改好友备注
 **/
@interface C_business_relation_rename_friend_remark_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 聊天用户id */
@property(nonatomic, readwrite) uint64_t userFriendId;

@property(nonatomic, readwrite) BOOL hasUserFriendId;
/** 好友备注名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userFriendRemark;
/** Test to see if @c userFriendRemark has been set. */
@property(nonatomic, readwrite) BOOL hasUserFriendRemark;

@end

#pragma mark - C_business_relation_add_friend_group_rq

typedef GPB_ENUM(C_business_relation_add_friend_group_rq_FieldNumber) {
  C_business_relation_add_friend_group_rq_FieldNumber_UserMyselfId = 1,
  C_business_relation_add_friend_group_rq_FieldNumber_UserFriendGroup = 2,
};

/**
 * (tcp)新增好友组名
 **/
@interface C_business_relation_add_friend_group_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
/** 好友组名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userFriendGroup;
/** Test to see if @c userFriendGroup has been set. */
@property(nonatomic, readwrite) BOOL hasUserFriendGroup;

@end

#pragma mark - C_business_relation_add_friend_group_rs

typedef GPB_ENUM(C_business_relation_add_friend_group_rs_FieldNumber) {
  C_business_relation_add_friend_group_rs_FieldNumber_Error = 1,
  C_business_relation_add_friend_group_rs_FieldNumber_UserFriendGroup = 2,
  C_business_relation_add_friend_group_rs_FieldNumber_UserFriendGroupId = 3,
};

/**
 * (tcp)新增好友组名
 **/
@interface C_business_relation_add_friend_group_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 好友组名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userFriendGroup;
/** Test to see if @c userFriendGroup has been set. */
@property(nonatomic, readwrite) BOOL hasUserFriendGroup;

/** 好友组名id */
@property(nonatomic, readwrite) uint64_t userFriendGroupId;

@property(nonatomic, readwrite) BOOL hasUserFriendGroupId;
@end

#pragma mark - C_business_relation_delete_friend_group_rq

typedef GPB_ENUM(C_business_relation_delete_friend_group_rq_FieldNumber) {
  C_business_relation_delete_friend_group_rq_FieldNumber_UserMyselfId = 1,
  C_business_relation_delete_friend_group_rq_FieldNumber_UserFriendId = 2,
  C_business_relation_delete_friend_group_rq_FieldNumber_UserFriendGroupId = 3,
};

/**
 * (tcp)删除好友组名(删除一个好友的组名/删除整个组并且所属成员变为默认好友:user_friend_id=0)
 **/
@interface C_business_relation_delete_friend_group_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
/** 好友用户id */
@property(nonatomic, readwrite) uint64_t userFriendId;

@property(nonatomic, readwrite) BOOL hasUserFriendId;
/** 好友组名id */
@property(nonatomic, readwrite) uint64_t userFriendGroupId;

@property(nonatomic, readwrite) BOOL hasUserFriendGroupId;
@end

#pragma mark - C_business_relation_delete_friend_group_rs

typedef GPB_ENUM(C_business_relation_delete_friend_group_rs_FieldNumber) {
  C_business_relation_delete_friend_group_rs_FieldNumber_Error = 1,
  C_business_relation_delete_friend_group_rs_FieldNumber_UserFriendId = 2,
  C_business_relation_delete_friend_group_rs_FieldNumber_UserFriendGroupId = 3,
};

/**
 * (tcp)删除好友组名(删除一个好友的组名/删除整个组并且所属成员变为默认好友:user_friend_id=0)
 **/
@interface C_business_relation_delete_friend_group_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 好友用户id */
@property(nonatomic, readwrite) uint64_t userFriendId;

@property(nonatomic, readwrite) BOOL hasUserFriendId;
/** 好友组名id */
@property(nonatomic, readwrite) uint64_t userFriendGroupId;

@property(nonatomic, readwrite) BOOL hasUserFriendGroupId;
@end

#pragma mark - C_business_relation_rename_friend_group_rq

typedef GPB_ENUM(C_business_relation_rename_friend_group_rq_FieldNumber) {
  C_business_relation_rename_friend_group_rq_FieldNumber_UserMyselfId = 1,
  C_business_relation_rename_friend_group_rq_FieldNumber_UserFriendGroupId = 3,
  C_business_relation_rename_friend_group_rq_FieldNumber_UserFriendGroup = 4,
};

/**
 * (tcp)修改好友组名(重命名组)
 **/
@interface C_business_relation_rename_friend_group_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
/** 好友组名id */
@property(nonatomic, readwrite) uint64_t userFriendGroupId;

@property(nonatomic, readwrite) BOOL hasUserFriendGroupId;
/** 好友组名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userFriendGroup;
/** Test to see if @c userFriendGroup has been set. */
@property(nonatomic, readwrite) BOOL hasUserFriendGroup;

@end

#pragma mark - C_business_relation_rename_friend_group_rs

typedef GPB_ENUM(C_business_relation_rename_friend_group_rs_FieldNumber) {
  C_business_relation_rename_friend_group_rs_FieldNumber_Error = 1,
  C_business_relation_rename_friend_group_rs_FieldNumber_UserFriendGroupId = 3,
  C_business_relation_rename_friend_group_rs_FieldNumber_UserFriendGroup = 4,
};

/**
 * (tcp)修改好友组名(重命名组)
 **/
@interface C_business_relation_rename_friend_group_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 好友组名id */
@property(nonatomic, readwrite) uint64_t userFriendGroupId;

@property(nonatomic, readwrite) BOOL hasUserFriendGroupId;
/** 好友组名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userFriendGroup;
/** Test to see if @c userFriendGroup has been set. */
@property(nonatomic, readwrite) BOOL hasUserFriendGroup;

@end

#pragma mark - C_business_relation_change_friend_group_rq

typedef GPB_ENUM(C_business_relation_change_friend_group_rq_FieldNumber) {
  C_business_relation_change_friend_group_rq_FieldNumber_UserMyselfId = 1,
  C_business_relation_change_friend_group_rq_FieldNumber_UserFriendId = 2,
  C_business_relation_change_friend_group_rq_FieldNumber_UserFriendGroupIdOld = 3,
  C_business_relation_change_friend_group_rq_FieldNumber_UserFriendGroupIdNew = 4,
};

/**
 * (tcp)改变好友组名(改变一个好友到已经存在组名/修改整个组和所属成员到新组名:user_friend_id=0)
 **/
@interface C_business_relation_change_friend_group_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
/** 好友用户id */
@property(nonatomic, readwrite) uint64_t userFriendId;

@property(nonatomic, readwrite) BOOL hasUserFriendId;
/** 好友旧组名id */
@property(nonatomic, readwrite) uint64_t userFriendGroupIdOld;

@property(nonatomic, readwrite) BOOL hasUserFriendGroupIdOld;
/** 好友新组名id */
@property(nonatomic, readwrite) uint64_t userFriendGroupIdNew;

@property(nonatomic, readwrite) BOOL hasUserFriendGroupIdNew;
@end

#pragma mark - C_business_relation_change_friend_group_rs

typedef GPB_ENUM(C_business_relation_change_friend_group_rs_FieldNumber) {
  C_business_relation_change_friend_group_rs_FieldNumber_Error = 1,
  C_business_relation_change_friend_group_rs_FieldNumber_UserFriendId = 2,
  C_business_relation_change_friend_group_rs_FieldNumber_UserFriendGroupIdOld = 3,
  C_business_relation_change_friend_group_rs_FieldNumber_UserFriendGroupIdNew = 4,
};

/**
 * (tcp)改变好友组名(改变一个好友到已经存在组名/修改整个组和所属成员到新组名:user_friend_id=0)
 **/
@interface C_business_relation_change_friend_group_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 聊天用户id */
@property(nonatomic, readwrite) uint64_t userFriendId;

@property(nonatomic, readwrite) BOOL hasUserFriendId;
/** 好友旧组名id */
@property(nonatomic, readwrite) uint64_t userFriendGroupIdOld;

@property(nonatomic, readwrite) BOOL hasUserFriendGroupIdOld;
/** 好友新组名id */
@property(nonatomic, readwrite) uint64_t userFriendGroupIdNew;

@property(nonatomic, readwrite) BOOL hasUserFriendGroupIdNew;
@end

#pragma mark - C_business_relation_query_friends_apply_rq

typedef GPB_ENUM(C_business_relation_query_friends_apply_rq_FieldNumber) {
  C_business_relation_query_friends_apply_rq_FieldNumber_UserMyselfId = 1,
};

/**
 * (tcp)查询好友申请
 **/
@interface C_business_relation_query_friends_apply_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
@end

#pragma mark - C_business_relation_query_friends_apply_rs

typedef GPB_ENUM(C_business_relation_query_friends_apply_rs_FieldNumber) {
  C_business_relation_query_friends_apply_rs_FieldNumber_Error = 1,
  C_business_relation_query_friends_apply_rs_FieldNumber_ApplySArray = 2,
};

/**
 * (tcp)查询好友申请
 **/
@interface C_business_relation_query_friends_apply_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 申请好友未处理列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<B_business_relation_friend_apply*> *applySArray;
/** The number of items in @c applySArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger applySArray_Count;

@end

#pragma mark - C_business_relation_talk_friend_rq

typedef GPB_ENUM(C_business_relation_talk_friend_rq_FieldNumber) {
  C_business_relation_talk_friend_rq_FieldNumber_UserMyselfId = 1,
  C_business_relation_talk_friend_rq_FieldNumber_UserTalkId = 2,
  C_business_relation_talk_friend_rq_FieldNumber_Talking = 3,
};

/**
 * (tcp)好友聊天
 **/
@interface C_business_relation_talk_friend_rq : GPBMessage

/** 自己用户id */
@property(nonatomic, readwrite) uint64_t userMyselfId;

@property(nonatomic, readwrite) BOOL hasUserMyselfId;
/** 聊天用户id */
@property(nonatomic, readwrite) uint64_t userTalkId;

@property(nonatomic, readwrite) BOOL hasUserTalkId;
/** 说话内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *talking;
/** Test to see if @c talking has been set. */
@property(nonatomic, readwrite) BOOL hasTalking;

@end

#pragma mark - C_business_relation_talk_friend_rs

typedef GPB_ENUM(C_business_relation_talk_friend_rs_FieldNumber) {
  C_business_relation_talk_friend_rs_FieldNumber_Error = 1,
  C_business_relation_talk_friend_rs_FieldNumber_UserTalkId = 2,
};

/**
 * (tcp)好友聊天
 **/
@interface C_business_relation_talk_friend_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** 聊天用户id */
@property(nonatomic, readwrite) uint64_t userTalkId;

@property(nonatomic, readwrite) BOOL hasUserTalkId;
@end

#pragma mark - C_business_relation_talk_friend_nt

typedef GPB_ENUM(C_business_relation_talk_friend_nt_FieldNumber) {
  C_business_relation_talk_friend_nt_FieldNumber_ApplyTalkId = 1,
  C_business_relation_talk_friend_nt_FieldNumber_Talking = 2,
};

/**
 * (tcp)好友聊天
 **/
@interface C_business_relation_talk_friend_nt : GPBMessage

/** 聊天发起用户id */
@property(nonatomic, readwrite) uint64_t applyTalkId;

@property(nonatomic, readwrite) BOOL hasApplyTalkId;
/** 说话内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *talking;
/** Test to see if @c talking has been set. */
@property(nonatomic, readwrite) BOOL hasTalking;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
