// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c_basic_frame_reflex.proto

#ifndef PROTOBUF_c_5fbasic_5fframe_5freflex_2eproto__INCLUDED
#define PROTOBUF_c_5fbasic_5fframe_5freflex_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "b_error.pb.h"
// @@protoc_insertion_point(includes)
namespace b_error {
class info;
class infoDefaultTypeInternal;
extern infoDefaultTypeInternal _info_default_instance_;
}  // namespace b_error
namespace c_basic_frame_reflex {
class alloc_channel_rq;
class alloc_channel_rqDefaultTypeInternal;
extern alloc_channel_rqDefaultTypeInternal _alloc_channel_rq_default_instance_;
class alloc_channel_rs;
class alloc_channel_rsDefaultTypeInternal;
extern alloc_channel_rsDefaultTypeInternal _alloc_channel_rs_default_instance_;
class enter_channel_rq;
class enter_channel_rqDefaultTypeInternal;
extern enter_channel_rqDefaultTypeInternal _enter_channel_rq_default_instance_;
class enter_channel_rs;
class enter_channel_rsDefaultTypeInternal;
extern enter_channel_rsDefaultTypeInternal _enter_channel_rs_default_instance_;
class leave_channel_rq;
class leave_channel_rqDefaultTypeInternal;
extern leave_channel_rqDefaultTypeInternal _leave_channel_rq_default_instance_;
class leave_channel_rs;
class leave_channel_rsDefaultTypeInternal;
extern leave_channel_rsDefaultTypeInternal _leave_channel_rs_default_instance_;
class relax_channel_rq;
class relax_channel_rqDefaultTypeInternal;
extern relax_channel_rqDefaultTypeInternal _relax_channel_rq_default_instance_;
class relax_channel_rs;
class relax_channel_rsDefaultTypeInternal;
extern relax_channel_rsDefaultTypeInternal _relax_channel_rs_default_instance_;
class simulation_frame;
class simulation_frameDefaultTypeInternal;
extern simulation_frameDefaultTypeInternal _simulation_frame_default_instance_;
class simulation_frame_nt;
class simulation_frame_ntDefaultTypeInternal;
extern simulation_frame_ntDefaultTypeInternal _simulation_frame_nt_default_instance_;
class simulation_variable;
class simulation_variableDefaultTypeInternal;
extern simulation_variableDefaultTypeInternal _simulation_variable_default_instance_;
}  // namespace c_basic_frame_reflex

namespace c_basic_frame_reflex {

namespace protobuf_c_5fbasic_5fframe_5freflex_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_c_5fbasic_5fframe_5freflex_2eproto

enum alloc_channel_rq_msg {
  alloc_channel_rq_msg_id = 16777472
};
bool alloc_channel_rq_msg_IsValid(int value);
const alloc_channel_rq_msg alloc_channel_rq_msg_msg_MIN = alloc_channel_rq_msg_id;
const alloc_channel_rq_msg alloc_channel_rq_msg_msg_MAX = alloc_channel_rq_msg_id;
const int alloc_channel_rq_msg_msg_ARRAYSIZE = alloc_channel_rq_msg_msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* alloc_channel_rq_msg_descriptor();
inline const ::std::string& alloc_channel_rq_msg_Name(alloc_channel_rq_msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    alloc_channel_rq_msg_descriptor(), value);
}
inline bool alloc_channel_rq_msg_Parse(
    const ::std::string& name, alloc_channel_rq_msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<alloc_channel_rq_msg>(
    alloc_channel_rq_msg_descriptor(), name, value);
}
enum alloc_channel_rs_msg {
  alloc_channel_rs_msg_id = 16777473
};
bool alloc_channel_rs_msg_IsValid(int value);
const alloc_channel_rs_msg alloc_channel_rs_msg_msg_MIN = alloc_channel_rs_msg_id;
const alloc_channel_rs_msg alloc_channel_rs_msg_msg_MAX = alloc_channel_rs_msg_id;
const int alloc_channel_rs_msg_msg_ARRAYSIZE = alloc_channel_rs_msg_msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* alloc_channel_rs_msg_descriptor();
inline const ::std::string& alloc_channel_rs_msg_Name(alloc_channel_rs_msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    alloc_channel_rs_msg_descriptor(), value);
}
inline bool alloc_channel_rs_msg_Parse(
    const ::std::string& name, alloc_channel_rs_msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<alloc_channel_rs_msg>(
    alloc_channel_rs_msg_descriptor(), name, value);
}
enum relax_channel_rq_msg {
  relax_channel_rq_msg_id = 16777472
};
bool relax_channel_rq_msg_IsValid(int value);
const relax_channel_rq_msg relax_channel_rq_msg_msg_MIN = relax_channel_rq_msg_id;
const relax_channel_rq_msg relax_channel_rq_msg_msg_MAX = relax_channel_rq_msg_id;
const int relax_channel_rq_msg_msg_ARRAYSIZE = relax_channel_rq_msg_msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* relax_channel_rq_msg_descriptor();
inline const ::std::string& relax_channel_rq_msg_Name(relax_channel_rq_msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    relax_channel_rq_msg_descriptor(), value);
}
inline bool relax_channel_rq_msg_Parse(
    const ::std::string& name, relax_channel_rq_msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<relax_channel_rq_msg>(
    relax_channel_rq_msg_descriptor(), name, value);
}
enum relax_channel_rs_msg {
  relax_channel_rs_msg_id = 16777473
};
bool relax_channel_rs_msg_IsValid(int value);
const relax_channel_rs_msg relax_channel_rs_msg_msg_MIN = relax_channel_rs_msg_id;
const relax_channel_rs_msg relax_channel_rs_msg_msg_MAX = relax_channel_rs_msg_id;
const int relax_channel_rs_msg_msg_ARRAYSIZE = relax_channel_rs_msg_msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* relax_channel_rs_msg_descriptor();
inline const ::std::string& relax_channel_rs_msg_Name(relax_channel_rs_msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    relax_channel_rs_msg_descriptor(), value);
}
inline bool relax_channel_rs_msg_Parse(
    const ::std::string& name, relax_channel_rs_msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<relax_channel_rs_msg>(
    relax_channel_rs_msg_descriptor(), name, value);
}
enum enter_channel_rq_msg {
  enter_channel_rq_msg_id = 16777472
};
bool enter_channel_rq_msg_IsValid(int value);
const enter_channel_rq_msg enter_channel_rq_msg_msg_MIN = enter_channel_rq_msg_id;
const enter_channel_rq_msg enter_channel_rq_msg_msg_MAX = enter_channel_rq_msg_id;
const int enter_channel_rq_msg_msg_ARRAYSIZE = enter_channel_rq_msg_msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* enter_channel_rq_msg_descriptor();
inline const ::std::string& enter_channel_rq_msg_Name(enter_channel_rq_msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    enter_channel_rq_msg_descriptor(), value);
}
inline bool enter_channel_rq_msg_Parse(
    const ::std::string& name, enter_channel_rq_msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enter_channel_rq_msg>(
    enter_channel_rq_msg_descriptor(), name, value);
}
enum enter_channel_rs_msg {
  enter_channel_rs_msg_id = 16777473
};
bool enter_channel_rs_msg_IsValid(int value);
const enter_channel_rs_msg enter_channel_rs_msg_msg_MIN = enter_channel_rs_msg_id;
const enter_channel_rs_msg enter_channel_rs_msg_msg_MAX = enter_channel_rs_msg_id;
const int enter_channel_rs_msg_msg_ARRAYSIZE = enter_channel_rs_msg_msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* enter_channel_rs_msg_descriptor();
inline const ::std::string& enter_channel_rs_msg_Name(enter_channel_rs_msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    enter_channel_rs_msg_descriptor(), value);
}
inline bool enter_channel_rs_msg_Parse(
    const ::std::string& name, enter_channel_rs_msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enter_channel_rs_msg>(
    enter_channel_rs_msg_descriptor(), name, value);
}
enum leave_channel_rq_msg {
  leave_channel_rq_msg_id = 16777472
};
bool leave_channel_rq_msg_IsValid(int value);
const leave_channel_rq_msg leave_channel_rq_msg_msg_MIN = leave_channel_rq_msg_id;
const leave_channel_rq_msg leave_channel_rq_msg_msg_MAX = leave_channel_rq_msg_id;
const int leave_channel_rq_msg_msg_ARRAYSIZE = leave_channel_rq_msg_msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* leave_channel_rq_msg_descriptor();
inline const ::std::string& leave_channel_rq_msg_Name(leave_channel_rq_msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    leave_channel_rq_msg_descriptor(), value);
}
inline bool leave_channel_rq_msg_Parse(
    const ::std::string& name, leave_channel_rq_msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<leave_channel_rq_msg>(
    leave_channel_rq_msg_descriptor(), name, value);
}
enum leave_channel_rs_msg {
  leave_channel_rs_msg_id = 16777473
};
bool leave_channel_rs_msg_IsValid(int value);
const leave_channel_rs_msg leave_channel_rs_msg_msg_MIN = leave_channel_rs_msg_id;
const leave_channel_rs_msg leave_channel_rs_msg_msg_MAX = leave_channel_rs_msg_id;
const int leave_channel_rs_msg_msg_ARRAYSIZE = leave_channel_rs_msg_msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* leave_channel_rs_msg_descriptor();
inline const ::std::string& leave_channel_rs_msg_Name(leave_channel_rs_msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    leave_channel_rs_msg_descriptor(), value);
}
inline bool leave_channel_rs_msg_Parse(
    const ::std::string& name, leave_channel_rs_msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<leave_channel_rs_msg>(
    leave_channel_rs_msg_descriptor(), name, value);
}
enum simulation_frame_nt_msg {
  simulation_frame_nt_msg_id = 16777475
};
bool simulation_frame_nt_msg_IsValid(int value);
const simulation_frame_nt_msg simulation_frame_nt_msg_msg_MIN = simulation_frame_nt_msg_id;
const simulation_frame_nt_msg simulation_frame_nt_msg_msg_MAX = simulation_frame_nt_msg_id;
const int simulation_frame_nt_msg_msg_ARRAYSIZE = simulation_frame_nt_msg_msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* simulation_frame_nt_msg_descriptor();
inline const ::std::string& simulation_frame_nt_msg_Name(simulation_frame_nt_msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    simulation_frame_nt_msg_descriptor(), value);
}
inline bool simulation_frame_nt_msg_Parse(
    const ::std::string& name, simulation_frame_nt_msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<simulation_frame_nt_msg>(
    simulation_frame_nt_msg_descriptor(), name, value);
}
enum msg {
  min_id = 33558784,
  max_id = 33559039
};
bool msg_IsValid(int value);
const msg msg_MIN = min_id;
const msg msg_MAX = max_id;
const int msg_ARRAYSIZE = msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* msg_descriptor();
inline const ::std::string& msg_Name(msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    msg_descriptor(), value);
}
inline bool msg_Parse(
    const ::std::string& name, msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<msg>(
    msg_descriptor(), name, value);
}
// ===================================================================

class simulation_variable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.simulation_variable) */ {
 public:
  simulation_variable();
  virtual ~simulation_variable();

  simulation_variable(const simulation_variable& from);

  inline simulation_variable& operator=(const simulation_variable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const simulation_variable& default_instance();

  static inline const simulation_variable* internal_default_instance() {
    return reinterpret_cast<const simulation_variable*>(
               &_simulation_variable_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(simulation_variable* other);

  // implements Message ----------------------------------------------

  inline simulation_variable* New() const PROTOBUF_FINAL { return New(NULL); }

  simulation_variable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const simulation_variable& from);
  void MergeFrom(const simulation_variable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(simulation_variable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes commands = 2;
  int commands_size() const;
  void clear_commands();
  static const int kCommandsFieldNumber = 2;
  const ::std::string& commands(int index) const;
  ::std::string* mutable_commands(int index);
  void set_commands(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_commands(int index, ::std::string&& value);
  #endif
  void set_commands(int index, const char* value);
  void set_commands(int index, const void* value, size_t size);
  ::std::string* add_commands();
  void add_commands(const ::std::string& value);
  #if LANG_CXX11
  void add_commands(::std::string&& value);
  #endif
  void add_commands(const char* value);
  void add_commands(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& commands() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_commands();

  // required uint64 uid = 1 [default = 0];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.simulation_variable)
 private:
  void set_has_uid();
  void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> commands_;
  ::google::protobuf::uint64 uid_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class simulation_frame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.simulation_frame) */ {
 public:
  simulation_frame();
  virtual ~simulation_frame();

  simulation_frame(const simulation_frame& from);

  inline simulation_frame& operator=(const simulation_frame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const simulation_frame& default_instance();

  static inline const simulation_frame* internal_default_instance() {
    return reinterpret_cast<const simulation_frame*>(
               &_simulation_frame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(simulation_frame* other);

  // implements Message ----------------------------------------------

  inline simulation_frame* New() const PROTOBUF_FINAL { return New(NULL); }

  simulation_frame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const simulation_frame& from);
  void MergeFrom(const simulation_frame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(simulation_frame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
  int variables_size() const;
  void clear_variables();
  static const int kVariablesFieldNumber = 2;
  const ::c_basic_frame_reflex::simulation_variable& variables(int index) const;
  ::c_basic_frame_reflex::simulation_variable* mutable_variables(int index);
  ::c_basic_frame_reflex::simulation_variable* add_variables();
  ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >*
      mutable_variables();
  const ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >&
      variables() const;

  // required uint64 frame_number = 1 [default = 0];
  bool has_frame_number() const;
  void clear_frame_number();
  static const int kFrameNumberFieldNumber = 1;
  ::google::protobuf::uint64 frame_number() const;
  void set_frame_number(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.simulation_frame)
 private:
  void set_has_frame_number();
  void clear_has_frame_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable > variables_;
  ::google::protobuf::uint64 frame_number_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class alloc_channel_rq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.alloc_channel_rq) */ {
 public:
  alloc_channel_rq();
  virtual ~alloc_channel_rq();

  alloc_channel_rq(const alloc_channel_rq& from);

  inline alloc_channel_rq& operator=(const alloc_channel_rq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const alloc_channel_rq& default_instance();

  static inline const alloc_channel_rq* internal_default_instance() {
    return reinterpret_cast<const alloc_channel_rq*>(
               &_alloc_channel_rq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(alloc_channel_rq* other);

  // implements Message ----------------------------------------------

  inline alloc_channel_rq* New() const PROTOBUF_FINAL { return New(NULL); }

  alloc_channel_rq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const alloc_channel_rq& from);
  void MergeFrom(const alloc_channel_rq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(alloc_channel_rq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef alloc_channel_rq_msg msg;
  static const msg id =
    alloc_channel_rq_msg_id;
  static inline bool msg_IsValid(int value) {
    return alloc_channel_rq_msg_IsValid(value);
  }
  static const msg msg_MIN =
    alloc_channel_rq_msg_msg_MIN;
  static const msg msg_MAX =
    alloc_channel_rq_msg_msg_MAX;
  static const int msg_ARRAYSIZE =
    alloc_channel_rq_msg_msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msg_descriptor() {
    return alloc_channel_rq_msg_descriptor();
  }
  static inline const ::std::string& msg_Name(msg value) {
    return alloc_channel_rq_msg_Name(value);
  }
  static inline bool msg_Parse(const ::std::string& name,
      msg* value) {
    return alloc_channel_rq_msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.alloc_channel_rq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class alloc_channel_rs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.alloc_channel_rs) */ {
 public:
  alloc_channel_rs();
  virtual ~alloc_channel_rs();

  alloc_channel_rs(const alloc_channel_rs& from);

  inline alloc_channel_rs& operator=(const alloc_channel_rs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const alloc_channel_rs& default_instance();

  static inline const alloc_channel_rs* internal_default_instance() {
    return reinterpret_cast<const alloc_channel_rs*>(
               &_alloc_channel_rs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(alloc_channel_rs* other);

  // implements Message ----------------------------------------------

  inline alloc_channel_rs* New() const PROTOBUF_FINAL { return New(NULL); }

  alloc_channel_rs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const alloc_channel_rs& from);
  void MergeFrom(const alloc_channel_rs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(alloc_channel_rs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef alloc_channel_rs_msg msg;
  static const msg id =
    alloc_channel_rs_msg_id;
  static inline bool msg_IsValid(int value) {
    return alloc_channel_rs_msg_IsValid(value);
  }
  static const msg msg_MIN =
    alloc_channel_rs_msg_msg_MIN;
  static const msg msg_MAX =
    alloc_channel_rs_msg_msg_MAX;
  static const int msg_ARRAYSIZE =
    alloc_channel_rs_msg_msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msg_descriptor() {
    return alloc_channel_rs_msg_descriptor();
  }
  static inline const ::std::string& msg_Name(msg value) {
    return alloc_channel_rs_msg_Name(value);
  }
  static inline bool msg_Parse(const ::std::string& name,
      msg* value) {
    return alloc_channel_rs_msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b_error.info error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::b_error::info& error() const;
  ::b_error::info* mutable_error();
  ::b_error::info* release_error();
  void set_allocated_error(::b_error::info* error);

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.alloc_channel_rs)
 private:
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::b_error::info* error_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class relax_channel_rq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.relax_channel_rq) */ {
 public:
  relax_channel_rq();
  virtual ~relax_channel_rq();

  relax_channel_rq(const relax_channel_rq& from);

  inline relax_channel_rq& operator=(const relax_channel_rq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const relax_channel_rq& default_instance();

  static inline const relax_channel_rq* internal_default_instance() {
    return reinterpret_cast<const relax_channel_rq*>(
               &_relax_channel_rq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(relax_channel_rq* other);

  // implements Message ----------------------------------------------

  inline relax_channel_rq* New() const PROTOBUF_FINAL { return New(NULL); }

  relax_channel_rq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const relax_channel_rq& from);
  void MergeFrom(const relax_channel_rq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(relax_channel_rq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef relax_channel_rq_msg msg;
  static const msg id =
    relax_channel_rq_msg_id;
  static inline bool msg_IsValid(int value) {
    return relax_channel_rq_msg_IsValid(value);
  }
  static const msg msg_MIN =
    relax_channel_rq_msg_msg_MIN;
  static const msg msg_MAX =
    relax_channel_rq_msg_msg_MAX;
  static const int msg_ARRAYSIZE =
    relax_channel_rq_msg_msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msg_descriptor() {
    return relax_channel_rq_msg_descriptor();
  }
  static inline const ::std::string& msg_Name(msg value) {
    return relax_channel_rq_msg_Name(value);
  }
  static inline bool msg_Parse(const ::std::string& name,
      msg* value) {
    return relax_channel_rq_msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.relax_channel_rq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class relax_channel_rs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.relax_channel_rs) */ {
 public:
  relax_channel_rs();
  virtual ~relax_channel_rs();

  relax_channel_rs(const relax_channel_rs& from);

  inline relax_channel_rs& operator=(const relax_channel_rs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const relax_channel_rs& default_instance();

  static inline const relax_channel_rs* internal_default_instance() {
    return reinterpret_cast<const relax_channel_rs*>(
               &_relax_channel_rs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(relax_channel_rs* other);

  // implements Message ----------------------------------------------

  inline relax_channel_rs* New() const PROTOBUF_FINAL { return New(NULL); }

  relax_channel_rs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const relax_channel_rs& from);
  void MergeFrom(const relax_channel_rs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(relax_channel_rs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef relax_channel_rs_msg msg;
  static const msg id =
    relax_channel_rs_msg_id;
  static inline bool msg_IsValid(int value) {
    return relax_channel_rs_msg_IsValid(value);
  }
  static const msg msg_MIN =
    relax_channel_rs_msg_msg_MIN;
  static const msg msg_MAX =
    relax_channel_rs_msg_msg_MAX;
  static const int msg_ARRAYSIZE =
    relax_channel_rs_msg_msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msg_descriptor() {
    return relax_channel_rs_msg_descriptor();
  }
  static inline const ::std::string& msg_Name(msg value) {
    return relax_channel_rs_msg_Name(value);
  }
  static inline bool msg_Parse(const ::std::string& name,
      msg* value) {
    return relax_channel_rs_msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b_error.info error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::b_error::info& error() const;
  ::b_error::info* mutable_error();
  ::b_error::info* release_error();
  void set_allocated_error(::b_error::info* error);

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.relax_channel_rs)
 private:
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::b_error::info* error_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class enter_channel_rq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.enter_channel_rq) */ {
 public:
  enter_channel_rq();
  virtual ~enter_channel_rq();

  enter_channel_rq(const enter_channel_rq& from);

  inline enter_channel_rq& operator=(const enter_channel_rq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const enter_channel_rq& default_instance();

  static inline const enter_channel_rq* internal_default_instance() {
    return reinterpret_cast<const enter_channel_rq*>(
               &_enter_channel_rq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(enter_channel_rq* other);

  // implements Message ----------------------------------------------

  inline enter_channel_rq* New() const PROTOBUF_FINAL { return New(NULL); }

  enter_channel_rq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const enter_channel_rq& from);
  void MergeFrom(const enter_channel_rq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(enter_channel_rq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef enter_channel_rq_msg msg;
  static const msg id =
    enter_channel_rq_msg_id;
  static inline bool msg_IsValid(int value) {
    return enter_channel_rq_msg_IsValid(value);
  }
  static const msg msg_MIN =
    enter_channel_rq_msg_msg_MIN;
  static const msg msg_MAX =
    enter_channel_rq_msg_msg_MAX;
  static const int msg_ARRAYSIZE =
    enter_channel_rq_msg_msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msg_descriptor() {
    return enter_channel_rq_msg_descriptor();
  }
  static inline const ::std::string& msg_Name(msg value) {
    return enter_channel_rq_msg_Name(value);
  }
  static inline bool msg_Parse(const ::std::string& name,
      msg* value) {
    return enter_channel_rq_msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.enter_channel_rq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class enter_channel_rs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.enter_channel_rs) */ {
 public:
  enter_channel_rs();
  virtual ~enter_channel_rs();

  enter_channel_rs(const enter_channel_rs& from);

  inline enter_channel_rs& operator=(const enter_channel_rs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const enter_channel_rs& default_instance();

  static inline const enter_channel_rs* internal_default_instance() {
    return reinterpret_cast<const enter_channel_rs*>(
               &_enter_channel_rs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(enter_channel_rs* other);

  // implements Message ----------------------------------------------

  inline enter_channel_rs* New() const PROTOBUF_FINAL { return New(NULL); }

  enter_channel_rs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const enter_channel_rs& from);
  void MergeFrom(const enter_channel_rs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(enter_channel_rs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef enter_channel_rs_msg msg;
  static const msg id =
    enter_channel_rs_msg_id;
  static inline bool msg_IsValid(int value) {
    return enter_channel_rs_msg_IsValid(value);
  }
  static const msg msg_MIN =
    enter_channel_rs_msg_msg_MIN;
  static const msg msg_MAX =
    enter_channel_rs_msg_msg_MAX;
  static const int msg_ARRAYSIZE =
    enter_channel_rs_msg_msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msg_descriptor() {
    return enter_channel_rs_msg_descriptor();
  }
  static inline const ::std::string& msg_Name(msg value) {
    return enter_channel_rs_msg_Name(value);
  }
  static inline bool msg_Parse(const ::std::string& name,
      msg* value) {
    return enter_channel_rs_msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b_error.info error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::b_error::info& error() const;
  ::b_error::info* mutable_error();
  ::b_error::info* release_error();
  void set_allocated_error(::b_error::info* error);

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.enter_channel_rs)
 private:
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::b_error::info* error_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class leave_channel_rq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.leave_channel_rq) */ {
 public:
  leave_channel_rq();
  virtual ~leave_channel_rq();

  leave_channel_rq(const leave_channel_rq& from);

  inline leave_channel_rq& operator=(const leave_channel_rq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const leave_channel_rq& default_instance();

  static inline const leave_channel_rq* internal_default_instance() {
    return reinterpret_cast<const leave_channel_rq*>(
               &_leave_channel_rq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(leave_channel_rq* other);

  // implements Message ----------------------------------------------

  inline leave_channel_rq* New() const PROTOBUF_FINAL { return New(NULL); }

  leave_channel_rq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const leave_channel_rq& from);
  void MergeFrom(const leave_channel_rq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(leave_channel_rq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef leave_channel_rq_msg msg;
  static const msg id =
    leave_channel_rq_msg_id;
  static inline bool msg_IsValid(int value) {
    return leave_channel_rq_msg_IsValid(value);
  }
  static const msg msg_MIN =
    leave_channel_rq_msg_msg_MIN;
  static const msg msg_MAX =
    leave_channel_rq_msg_msg_MAX;
  static const int msg_ARRAYSIZE =
    leave_channel_rq_msg_msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msg_descriptor() {
    return leave_channel_rq_msg_descriptor();
  }
  static inline const ::std::string& msg_Name(msg value) {
    return leave_channel_rq_msg_Name(value);
  }
  static inline bool msg_Parse(const ::std::string& name,
      msg* value) {
    return leave_channel_rq_msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.leave_channel_rq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class leave_channel_rs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.leave_channel_rs) */ {
 public:
  leave_channel_rs();
  virtual ~leave_channel_rs();

  leave_channel_rs(const leave_channel_rs& from);

  inline leave_channel_rs& operator=(const leave_channel_rs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const leave_channel_rs& default_instance();

  static inline const leave_channel_rs* internal_default_instance() {
    return reinterpret_cast<const leave_channel_rs*>(
               &_leave_channel_rs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(leave_channel_rs* other);

  // implements Message ----------------------------------------------

  inline leave_channel_rs* New() const PROTOBUF_FINAL { return New(NULL); }

  leave_channel_rs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const leave_channel_rs& from);
  void MergeFrom(const leave_channel_rs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(leave_channel_rs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef leave_channel_rs_msg msg;
  static const msg id =
    leave_channel_rs_msg_id;
  static inline bool msg_IsValid(int value) {
    return leave_channel_rs_msg_IsValid(value);
  }
  static const msg msg_MIN =
    leave_channel_rs_msg_msg_MIN;
  static const msg msg_MAX =
    leave_channel_rs_msg_msg_MAX;
  static const int msg_ARRAYSIZE =
    leave_channel_rs_msg_msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msg_descriptor() {
    return leave_channel_rs_msg_descriptor();
  }
  static inline const ::std::string& msg_Name(msg value) {
    return leave_channel_rs_msg_Name(value);
  }
  static inline bool msg_Parse(const ::std::string& name,
      msg* value) {
    return leave_channel_rs_msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b_error.info error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::b_error::info& error() const;
  ::b_error::info* mutable_error();
  ::b_error::info* release_error();
  void set_allocated_error(::b_error::info* error);

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.leave_channel_rs)
 private:
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::b_error::info* error_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class simulation_frame_nt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c_basic_frame_reflex.simulation_frame_nt) */ {
 public:
  simulation_frame_nt();
  virtual ~simulation_frame_nt();

  simulation_frame_nt(const simulation_frame_nt& from);

  inline simulation_frame_nt& operator=(const simulation_frame_nt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const simulation_frame_nt& default_instance();

  static inline const simulation_frame_nt* internal_default_instance() {
    return reinterpret_cast<const simulation_frame_nt*>(
               &_simulation_frame_nt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(simulation_frame_nt* other);

  // implements Message ----------------------------------------------

  inline simulation_frame_nt* New() const PROTOBUF_FINAL { return New(NULL); }

  simulation_frame_nt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const simulation_frame_nt& from);
  void MergeFrom(const simulation_frame_nt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(simulation_frame_nt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef simulation_frame_nt_msg msg;
  static const msg id =
    simulation_frame_nt_msg_id;
  static inline bool msg_IsValid(int value) {
    return simulation_frame_nt_msg_IsValid(value);
  }
  static const msg msg_MIN =
    simulation_frame_nt_msg_msg_MIN;
  static const msg msg_MAX =
    simulation_frame_nt_msg_msg_MAX;
  static const int msg_ARRAYSIZE =
    simulation_frame_nt_msg_msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msg_descriptor() {
    return simulation_frame_nt_msg_descriptor();
  }
  static inline const ::std::string& msg_Name(msg value) {
    return simulation_frame_nt_msg_Name(value);
  }
  static inline bool msg_Parse(const ::std::string& name,
      msg* value) {
    return simulation_frame_nt_msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
  int variables_size() const;
  void clear_variables();
  static const int kVariablesFieldNumber = 2;
  const ::c_basic_frame_reflex::simulation_variable& variables(int index) const;
  ::c_basic_frame_reflex::simulation_variable* mutable_variables(int index);
  ::c_basic_frame_reflex::simulation_variable* add_variables();
  ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >*
      mutable_variables();
  const ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >&
      variables() const;

  // required uint64 frame_number = 1 [default = 0];
  bool has_frame_number() const;
  void clear_frame_number();
  static const int kFrameNumberFieldNumber = 1;
  ::google::protobuf::uint64 frame_number() const;
  void set_frame_number(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:c_basic_frame_reflex.simulation_frame_nt)
 private:
  void set_has_frame_number();
  void clear_has_frame_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable > variables_;
  ::google::protobuf::uint64 frame_number_;
  friend struct protobuf_c_5fbasic_5fframe_5freflex_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// simulation_variable

// required uint64 uid = 1 [default = 0];
inline bool simulation_variable::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void simulation_variable::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void simulation_variable::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void simulation_variable::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 simulation_variable::uid() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_variable.uid)
  return uid_;
}
inline void simulation_variable::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_variable.uid)
}

// repeated bytes commands = 2;
inline int simulation_variable::commands_size() const {
  return commands_.size();
}
inline void simulation_variable::clear_commands() {
  commands_.Clear();
}
inline const ::std::string& simulation_variable::commands(int index) const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_variable.commands)
  return commands_.Get(index);
}
inline ::std::string* simulation_variable::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.simulation_variable.commands)
  return commands_.Mutable(index);
}
inline void simulation_variable::set_commands(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_variable.commands)
  commands_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void simulation_variable::set_commands(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_variable.commands)
  commands_.Mutable(index)->assign(std::move(value));
}
#endif
inline void simulation_variable::set_commands(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  commands_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:c_basic_frame_reflex.simulation_variable.commands)
}
inline void simulation_variable::set_commands(int index, const void* value, size_t size) {
  commands_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:c_basic_frame_reflex.simulation_variable.commands)
}
inline ::std::string* simulation_variable::add_commands() {
  // @@protoc_insertion_point(field_add_mutable:c_basic_frame_reflex.simulation_variable.commands)
  return commands_.Add();
}
inline void simulation_variable::add_commands(const ::std::string& value) {
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:c_basic_frame_reflex.simulation_variable.commands)
}
#if LANG_CXX11
inline void simulation_variable::add_commands(::std::string&& value) {
  commands_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:c_basic_frame_reflex.simulation_variable.commands)
}
#endif
inline void simulation_variable::add_commands(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:c_basic_frame_reflex.simulation_variable.commands)
}
inline void simulation_variable::add_commands(const void* value, size_t size) {
  commands_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:c_basic_frame_reflex.simulation_variable.commands)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
simulation_variable::commands() const {
  // @@protoc_insertion_point(field_list:c_basic_frame_reflex.simulation_variable.commands)
  return commands_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
simulation_variable::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:c_basic_frame_reflex.simulation_variable.commands)
  return &commands_;
}

// -------------------------------------------------------------------

// simulation_frame

// required uint64 frame_number = 1 [default = 0];
inline bool simulation_frame::has_frame_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void simulation_frame::set_has_frame_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void simulation_frame::clear_has_frame_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void simulation_frame::clear_frame_number() {
  frame_number_ = GOOGLE_ULONGLONG(0);
  clear_has_frame_number();
}
inline ::google::protobuf::uint64 simulation_frame::frame_number() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_frame.frame_number)
  return frame_number_;
}
inline void simulation_frame::set_frame_number(::google::protobuf::uint64 value) {
  set_has_frame_number();
  frame_number_ = value;
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_frame.frame_number)
}

// repeated .c_basic_frame_reflex.simulation_variable variables = 2;
inline int simulation_frame::variables_size() const {
  return variables_.size();
}
inline void simulation_frame::clear_variables() {
  variables_.Clear();
}
inline const ::c_basic_frame_reflex::simulation_variable& simulation_frame::variables(int index) const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_frame.variables)
  return variables_.Get(index);
}
inline ::c_basic_frame_reflex::simulation_variable* simulation_frame::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.simulation_frame.variables)
  return variables_.Mutable(index);
}
inline ::c_basic_frame_reflex::simulation_variable* simulation_frame::add_variables() {
  // @@protoc_insertion_point(field_add:c_basic_frame_reflex.simulation_frame.variables)
  return variables_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >*
simulation_frame::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:c_basic_frame_reflex.simulation_frame.variables)
  return &variables_;
}
inline const ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >&
simulation_frame::variables() const {
  // @@protoc_insertion_point(field_list:c_basic_frame_reflex.simulation_frame.variables)
  return variables_;
}

// -------------------------------------------------------------------

// alloc_channel_rq

// -------------------------------------------------------------------

// alloc_channel_rs

// required .b_error.info error = 1;
inline bool alloc_channel_rs::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void alloc_channel_rs::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void alloc_channel_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void alloc_channel_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
inline const ::b_error::info& alloc_channel_rs::error() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.alloc_channel_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
inline ::b_error::info* alloc_channel_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.alloc_channel_rs.error)
  return error_;
}
inline ::b_error::info* alloc_channel_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_basic_frame_reflex.alloc_channel_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
inline void alloc_channel_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_basic_frame_reflex.alloc_channel_rs.error)
}

// -------------------------------------------------------------------

// relax_channel_rq

// -------------------------------------------------------------------

// relax_channel_rs

// required .b_error.info error = 1;
inline bool relax_channel_rs::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void relax_channel_rs::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void relax_channel_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void relax_channel_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
inline const ::b_error::info& relax_channel_rs::error() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.relax_channel_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
inline ::b_error::info* relax_channel_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.relax_channel_rs.error)
  return error_;
}
inline ::b_error::info* relax_channel_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_basic_frame_reflex.relax_channel_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
inline void relax_channel_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_basic_frame_reflex.relax_channel_rs.error)
}

// -------------------------------------------------------------------

// enter_channel_rq

// -------------------------------------------------------------------

// enter_channel_rs

// required .b_error.info error = 1;
inline bool enter_channel_rs::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void enter_channel_rs::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void enter_channel_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void enter_channel_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
inline const ::b_error::info& enter_channel_rs::error() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.enter_channel_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
inline ::b_error::info* enter_channel_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.enter_channel_rs.error)
  return error_;
}
inline ::b_error::info* enter_channel_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_basic_frame_reflex.enter_channel_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
inline void enter_channel_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_basic_frame_reflex.enter_channel_rs.error)
}

// -------------------------------------------------------------------

// leave_channel_rq

// -------------------------------------------------------------------

// leave_channel_rs

// required .b_error.info error = 1;
inline bool leave_channel_rs::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void leave_channel_rs::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void leave_channel_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void leave_channel_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
inline const ::b_error::info& leave_channel_rs::error() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.leave_channel_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
inline ::b_error::info* leave_channel_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.leave_channel_rs.error)
  return error_;
}
inline ::b_error::info* leave_channel_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_basic_frame_reflex.leave_channel_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
inline void leave_channel_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_basic_frame_reflex.leave_channel_rs.error)
}

// -------------------------------------------------------------------

// simulation_frame_nt

// required uint64 frame_number = 1 [default = 0];
inline bool simulation_frame_nt::has_frame_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void simulation_frame_nt::set_has_frame_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void simulation_frame_nt::clear_has_frame_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void simulation_frame_nt::clear_frame_number() {
  frame_number_ = GOOGLE_ULONGLONG(0);
  clear_has_frame_number();
}
inline ::google::protobuf::uint64 simulation_frame_nt::frame_number() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_frame_nt.frame_number)
  return frame_number_;
}
inline void simulation_frame_nt::set_frame_number(::google::protobuf::uint64 value) {
  set_has_frame_number();
  frame_number_ = value;
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_frame_nt.frame_number)
}

// repeated .c_basic_frame_reflex.simulation_variable variables = 2;
inline int simulation_frame_nt::variables_size() const {
  return variables_.size();
}
inline void simulation_frame_nt::clear_variables() {
  variables_.Clear();
}
inline const ::c_basic_frame_reflex::simulation_variable& simulation_frame_nt::variables(int index) const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_frame_nt.variables)
  return variables_.Get(index);
}
inline ::c_basic_frame_reflex::simulation_variable* simulation_frame_nt::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.simulation_frame_nt.variables)
  return variables_.Mutable(index);
}
inline ::c_basic_frame_reflex::simulation_variable* simulation_frame_nt::add_variables() {
  // @@protoc_insertion_point(field_add:c_basic_frame_reflex.simulation_frame_nt.variables)
  return variables_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >*
simulation_frame_nt::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:c_basic_frame_reflex.simulation_frame_nt.variables)
  return &variables_;
}
inline const ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >&
simulation_frame_nt::variables() const {
  // @@protoc_insertion_point(field_list:c_basic_frame_reflex.simulation_frame_nt.variables)
  return variables_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace c_basic_frame_reflex

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::c_basic_frame_reflex::alloc_channel_rq_msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::alloc_channel_rq_msg>() {
  return ::c_basic_frame_reflex::alloc_channel_rq_msg_descriptor();
}
template <> struct is_proto_enum< ::c_basic_frame_reflex::alloc_channel_rs_msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::alloc_channel_rs_msg>() {
  return ::c_basic_frame_reflex::alloc_channel_rs_msg_descriptor();
}
template <> struct is_proto_enum< ::c_basic_frame_reflex::relax_channel_rq_msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::relax_channel_rq_msg>() {
  return ::c_basic_frame_reflex::relax_channel_rq_msg_descriptor();
}
template <> struct is_proto_enum< ::c_basic_frame_reflex::relax_channel_rs_msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::relax_channel_rs_msg>() {
  return ::c_basic_frame_reflex::relax_channel_rs_msg_descriptor();
}
template <> struct is_proto_enum< ::c_basic_frame_reflex::enter_channel_rq_msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::enter_channel_rq_msg>() {
  return ::c_basic_frame_reflex::enter_channel_rq_msg_descriptor();
}
template <> struct is_proto_enum< ::c_basic_frame_reflex::enter_channel_rs_msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::enter_channel_rs_msg>() {
  return ::c_basic_frame_reflex::enter_channel_rs_msg_descriptor();
}
template <> struct is_proto_enum< ::c_basic_frame_reflex::leave_channel_rq_msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::leave_channel_rq_msg>() {
  return ::c_basic_frame_reflex::leave_channel_rq_msg_descriptor();
}
template <> struct is_proto_enum< ::c_basic_frame_reflex::leave_channel_rs_msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::leave_channel_rs_msg>() {
  return ::c_basic_frame_reflex::leave_channel_rs_msg_descriptor();
}
template <> struct is_proto_enum< ::c_basic_frame_reflex::simulation_frame_nt_msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::simulation_frame_nt_msg>() {
  return ::c_basic_frame_reflex::simulation_frame_nt_msg_descriptor();
}
template <> struct is_proto_enum< ::c_basic_frame_reflex::msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c_basic_frame_reflex::msg>() {
  return ::c_basic_frame_reflex::msg_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_c_5fbasic_5fframe_5freflex_2eproto__INCLUDED
