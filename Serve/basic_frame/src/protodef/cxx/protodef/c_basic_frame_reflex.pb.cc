// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c_basic_frame_reflex.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "c_basic_frame_reflex.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace c_basic_frame_reflex {
class simulation_variableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<simulation_variable> {
} _simulation_variable_default_instance_;
class simulation_frameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<simulation_frame> {
} _simulation_frame_default_instance_;
class alloc_channel_rqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<alloc_channel_rq> {
} _alloc_channel_rq_default_instance_;
class alloc_channel_rsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<alloc_channel_rs> {
} _alloc_channel_rs_default_instance_;
class relax_channel_rqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<relax_channel_rq> {
} _relax_channel_rq_default_instance_;
class relax_channel_rsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<relax_channel_rs> {
} _relax_channel_rs_default_instance_;
class enter_channel_rqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<enter_channel_rq> {
} _enter_channel_rq_default_instance_;
class enter_channel_rsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<enter_channel_rs> {
} _enter_channel_rs_default_instance_;
class leave_channel_rqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<leave_channel_rq> {
} _leave_channel_rq_default_instance_;
class leave_channel_rsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<leave_channel_rs> {
} _leave_channel_rs_default_instance_;
class simulation_frame_ntDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<simulation_frame_nt> {
} _simulation_frame_nt_default_instance_;

namespace protobuf_c_5fbasic_5fframe_5freflex_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[10];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_variable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_variable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_variable, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_variable, commands_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_frame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_frame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_frame, frame_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_frame, variables_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(alloc_channel_rq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(alloc_channel_rq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(alloc_channel_rs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(alloc_channel_rs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(alloc_channel_rs, error_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(relax_channel_rq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(relax_channel_rq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(relax_channel_rs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(relax_channel_rs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(relax_channel_rs, error_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_channel_rq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_channel_rq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_channel_rs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_channel_rs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_channel_rs, error_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(leave_channel_rq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(leave_channel_rq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(leave_channel_rs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(leave_channel_rs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(leave_channel_rs, error_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_frame_nt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_frame_nt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_frame_nt, frame_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(simulation_frame_nt, variables_),
  0,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(simulation_variable)},
  { 9, 16, sizeof(simulation_frame)},
  { 18, 23, sizeof(alloc_channel_rq)},
  { 23, 29, sizeof(alloc_channel_rs)},
  { 30, 35, sizeof(relax_channel_rq)},
  { 35, 41, sizeof(relax_channel_rs)},
  { 42, 47, sizeof(enter_channel_rq)},
  { 47, 53, sizeof(enter_channel_rs)},
  { 54, 59, sizeof(leave_channel_rq)},
  { 59, 65, sizeof(leave_channel_rs)},
  { 66, 73, sizeof(simulation_frame_nt)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_simulation_variable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_simulation_frame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_alloc_channel_rq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_alloc_channel_rs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_relax_channel_rq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_relax_channel_rs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_enter_channel_rq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_enter_channel_rs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_leave_channel_rq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_leave_channel_rs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_simulation_frame_nt_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "c_basic_frame_reflex.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

}  // namespace

void TableStruct::Shutdown() {
  _simulation_variable_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _simulation_frame_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _alloc_channel_rq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _alloc_channel_rs_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _relax_channel_rq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _relax_channel_rs_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _enter_channel_rq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _enter_channel_rs_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _leave_channel_rq_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _leave_channel_rs_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _simulation_frame_nt_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::b_error::protobuf_b_5ferror_2eproto::InitDefaults();
  _simulation_variable_default_instance_.DefaultConstruct();
  _simulation_frame_default_instance_.DefaultConstruct();
  _alloc_channel_rq_default_instance_.DefaultConstruct();
  _alloc_channel_rs_default_instance_.DefaultConstruct();
  _relax_channel_rq_default_instance_.DefaultConstruct();
  _relax_channel_rs_default_instance_.DefaultConstruct();
  _enter_channel_rq_default_instance_.DefaultConstruct();
  _enter_channel_rs_default_instance_.DefaultConstruct();
  _leave_channel_rq_default_instance_.DefaultConstruct();
  _leave_channel_rs_default_instance_.DefaultConstruct();
  _simulation_frame_nt_default_instance_.DefaultConstruct();
  _alloc_channel_rs_default_instance_.get_mutable()->error_ = const_cast< ::b_error::info*>(
      ::b_error::info::internal_default_instance());
  _relax_channel_rs_default_instance_.get_mutable()->error_ = const_cast< ::b_error::info*>(
      ::b_error::info::internal_default_instance());
  _enter_channel_rs_default_instance_.get_mutable()->error_ = const_cast< ::b_error::info*>(
      ::b_error::info::internal_default_instance());
  _leave_channel_rs_default_instance_.get_mutable()->error_ = const_cast< ::b_error::info*>(
      ::b_error::info::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\032c_basic_frame_reflex.proto\022\024c_basic_fr"
      "ame_reflex\032\rb_error.proto\"7\n\023simulation_"
      "variable\022\016\n\003uid\030\001 \002(\004:\0010\022\020\n\010commands\030\002 \003"
      "(\014\"i\n\020simulation_frame\022\027\n\014frame_number\030\001"
      " \002(\004:\0010\022<\n\tvariables\030\002 \003(\0132).c_basic_fra"
      "me_reflex.simulation_variable\"$\n\020alloc_c"
      "hannel_rq\"\020\n\003msg\022\t\n\002id\020\200\202\200\010\"B\n\020alloc_cha"
      "nnel_rs\022\034\n\005error\030\001 \002(\0132\r.b_error.info\"\020\n"
      "\003msg\022\t\n\002id\020\201\202\200\010\"$\n\020relax_channel_rq\"\020\n\003m"
      "sg\022\t\n\002id\020\200\202\200\010\"B\n\020relax_channel_rs\022\034\n\005err"
      "or\030\001 \002(\0132\r.b_error.info\"\020\n\003msg\022\t\n\002id\020\201\202\200"
      "\010\"$\n\020enter_channel_rq\"\020\n\003msg\022\t\n\002id\020\200\202\200\010\""
      "B\n\020enter_channel_rs\022\034\n\005error\030\001 \002(\0132\r.b_e"
      "rror.info\"\020\n\003msg\022\t\n\002id\020\201\202\200\010\"$\n\020leave_cha"
      "nnel_rq\"\020\n\003msg\022\t\n\002id\020\200\202\200\010\"B\n\020leave_chann"
      "el_rs\022\034\n\005error\030\001 \002(\0132\r.b_error.info\"\020\n\003m"
      "sg\022\t\n\002id\020\201\202\200\010\"~\n\023simulation_frame_nt\022\027\n\014"
      "frame_number\030\001 \002(\004:\0010\022<\n\tvariables\030\002 \003(\013"
      "2).c_basic_frame_reflex.simulation_varia"
      "ble\"\020\n\003msg\022\t\n\002id\020\203\202\200\010*#\n\003msg\022\r\n\006min_id\020\200"
      "\242\200\020\022\r\n\006max_id\020\377\243\200\020Bn\n\010protodefB\024c_basic_"
      "frame_reflexZ\035protodef/c_basic_frame_ref"
      "lex\242\002\025C_basic_frame_reflex_\252\002\024c_basic_fr"
      "ame_reflex"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 930);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "c_basic_frame_reflex.proto", &protobuf_RegisterTypes);
  ::b_error::protobuf_b_5ferror_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_c_5fbasic_5fframe_5freflex_2eproto

const ::google::protobuf::EnumDescriptor* alloc_channel_rq_msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[0];
}
bool alloc_channel_rq_msg_IsValid(int value) {
  switch (value) {
    case 16777472:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const alloc_channel_rq_msg alloc_channel_rq::id;
const alloc_channel_rq_msg alloc_channel_rq::msg_MIN;
const alloc_channel_rq_msg alloc_channel_rq::msg_MAX;
const int alloc_channel_rq::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* alloc_channel_rs_msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[1];
}
bool alloc_channel_rs_msg_IsValid(int value) {
  switch (value) {
    case 16777473:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const alloc_channel_rs_msg alloc_channel_rs::id;
const alloc_channel_rs_msg alloc_channel_rs::msg_MIN;
const alloc_channel_rs_msg alloc_channel_rs::msg_MAX;
const int alloc_channel_rs::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* relax_channel_rq_msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[2];
}
bool relax_channel_rq_msg_IsValid(int value) {
  switch (value) {
    case 16777472:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const relax_channel_rq_msg relax_channel_rq::id;
const relax_channel_rq_msg relax_channel_rq::msg_MIN;
const relax_channel_rq_msg relax_channel_rq::msg_MAX;
const int relax_channel_rq::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* relax_channel_rs_msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[3];
}
bool relax_channel_rs_msg_IsValid(int value) {
  switch (value) {
    case 16777473:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const relax_channel_rs_msg relax_channel_rs::id;
const relax_channel_rs_msg relax_channel_rs::msg_MIN;
const relax_channel_rs_msg relax_channel_rs::msg_MAX;
const int relax_channel_rs::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* enter_channel_rq_msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[4];
}
bool enter_channel_rq_msg_IsValid(int value) {
  switch (value) {
    case 16777472:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const enter_channel_rq_msg enter_channel_rq::id;
const enter_channel_rq_msg enter_channel_rq::msg_MIN;
const enter_channel_rq_msg enter_channel_rq::msg_MAX;
const int enter_channel_rq::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* enter_channel_rs_msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[5];
}
bool enter_channel_rs_msg_IsValid(int value) {
  switch (value) {
    case 16777473:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const enter_channel_rs_msg enter_channel_rs::id;
const enter_channel_rs_msg enter_channel_rs::msg_MIN;
const enter_channel_rs_msg enter_channel_rs::msg_MAX;
const int enter_channel_rs::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* leave_channel_rq_msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[6];
}
bool leave_channel_rq_msg_IsValid(int value) {
  switch (value) {
    case 16777472:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const leave_channel_rq_msg leave_channel_rq::id;
const leave_channel_rq_msg leave_channel_rq::msg_MIN;
const leave_channel_rq_msg leave_channel_rq::msg_MAX;
const int leave_channel_rq::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* leave_channel_rs_msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[7];
}
bool leave_channel_rs_msg_IsValid(int value) {
  switch (value) {
    case 16777473:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const leave_channel_rs_msg leave_channel_rs::id;
const leave_channel_rs_msg leave_channel_rs::msg_MIN;
const leave_channel_rs_msg leave_channel_rs::msg_MAX;
const int leave_channel_rs::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* simulation_frame_nt_msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[8];
}
bool simulation_frame_nt_msg_IsValid(int value) {
  switch (value) {
    case 16777475:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const simulation_frame_nt_msg simulation_frame_nt::id;
const simulation_frame_nt_msg simulation_frame_nt::msg_MIN;
const simulation_frame_nt_msg simulation_frame_nt::msg_MAX;
const int simulation_frame_nt::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* msg_descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_enum_descriptors[9];
}
bool msg_IsValid(int value) {
  switch (value) {
    case 33558784:
    case 33559039:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int simulation_variable::kUidFieldNumber;
const int simulation_variable::kCommandsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

simulation_variable::simulation_variable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.simulation_variable)
}
simulation_variable::simulation_variable(const simulation_variable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      commands_(from.commands_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.simulation_variable)
}

void simulation_variable::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
}

simulation_variable::~simulation_variable() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.simulation_variable)
  SharedDtor();
}

void simulation_variable::SharedDtor() {
}

void simulation_variable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* simulation_variable::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const simulation_variable& simulation_variable::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

simulation_variable* simulation_variable::New(::google::protobuf::Arena* arena) const {
  simulation_variable* n = new simulation_variable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void simulation_variable::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.simulation_variable)
  commands_.Clear();
  uid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool simulation_variable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.simulation_variable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes commands = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_commands()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.simulation_variable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.simulation_variable)
  return false;
#undef DO_
}

void simulation_variable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.simulation_variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 uid = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // repeated bytes commands = 2;
  for (int i = 0, n = this->commands_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->commands(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.simulation_variable)
}

::google::protobuf::uint8* simulation_variable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.simulation_variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 uid = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // repeated bytes commands = 2;
  for (int i = 0, n = this->commands_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->commands(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.simulation_variable)
  return target;
}

size_t simulation_variable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.simulation_variable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 uid = 1 [default = 0];
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }
  // repeated bytes commands = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->commands_size());
  for (int i = 0, n = this->commands_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->commands(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void simulation_variable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.simulation_variable)
  GOOGLE_DCHECK_NE(&from, this);
  const simulation_variable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const simulation_variable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.simulation_variable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.simulation_variable)
    MergeFrom(*source);
  }
}

void simulation_variable::MergeFrom(const simulation_variable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.simulation_variable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  commands_.MergeFrom(from.commands_);
  if (from.has_uid()) {
    set_uid(from.uid());
  }
}

void simulation_variable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.simulation_variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void simulation_variable::CopyFrom(const simulation_variable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.simulation_variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool simulation_variable::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void simulation_variable::Swap(simulation_variable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void simulation_variable::InternalSwap(simulation_variable* other) {
  commands_.InternalSwap(&other->commands_);
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata simulation_variable::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// simulation_variable

// required uint64 uid = 1 [default = 0];
bool simulation_variable::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void simulation_variable::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void simulation_variable::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void simulation_variable::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
::google::protobuf::uint64 simulation_variable::uid() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_variable.uid)
  return uid_;
}
void simulation_variable::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_variable.uid)
}

// repeated bytes commands = 2;
int simulation_variable::commands_size() const {
  return commands_.size();
}
void simulation_variable::clear_commands() {
  commands_.Clear();
}
const ::std::string& simulation_variable::commands(int index) const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_variable.commands)
  return commands_.Get(index);
}
::std::string* simulation_variable::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.simulation_variable.commands)
  return commands_.Mutable(index);
}
void simulation_variable::set_commands(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_variable.commands)
  commands_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void simulation_variable::set_commands(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_variable.commands)
  commands_.Mutable(index)->assign(std::move(value));
}
#endif
void simulation_variable::set_commands(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  commands_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:c_basic_frame_reflex.simulation_variable.commands)
}
void simulation_variable::set_commands(int index, const void* value, size_t size) {
  commands_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:c_basic_frame_reflex.simulation_variable.commands)
}
::std::string* simulation_variable::add_commands() {
  // @@protoc_insertion_point(field_add_mutable:c_basic_frame_reflex.simulation_variable.commands)
  return commands_.Add();
}
void simulation_variable::add_commands(const ::std::string& value) {
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:c_basic_frame_reflex.simulation_variable.commands)
}
#if LANG_CXX11
void simulation_variable::add_commands(::std::string&& value) {
  commands_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:c_basic_frame_reflex.simulation_variable.commands)
}
#endif
void simulation_variable::add_commands(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:c_basic_frame_reflex.simulation_variable.commands)
}
void simulation_variable::add_commands(const void* value, size_t size) {
  commands_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:c_basic_frame_reflex.simulation_variable.commands)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
simulation_variable::commands() const {
  // @@protoc_insertion_point(field_list:c_basic_frame_reflex.simulation_variable.commands)
  return commands_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
simulation_variable::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:c_basic_frame_reflex.simulation_variable.commands)
  return &commands_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int simulation_frame::kFrameNumberFieldNumber;
const int simulation_frame::kVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

simulation_frame::simulation_frame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.simulation_frame)
}
simulation_frame::simulation_frame(const simulation_frame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      variables_(from.variables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_number_ = from.frame_number_;
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.simulation_frame)
}

void simulation_frame::SharedCtor() {
  _cached_size_ = 0;
  frame_number_ = GOOGLE_ULONGLONG(0);
}

simulation_frame::~simulation_frame() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.simulation_frame)
  SharedDtor();
}

void simulation_frame::SharedDtor() {
}

void simulation_frame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* simulation_frame::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const simulation_frame& simulation_frame::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

simulation_frame* simulation_frame::New(::google::protobuf::Arena* arena) const {
  simulation_frame* n = new simulation_frame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void simulation_frame::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.simulation_frame)
  variables_.Clear();
  frame_number_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool simulation_frame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.simulation_frame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 frame_number = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_frame_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frame_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.simulation_frame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.simulation_frame)
  return false;
#undef DO_
}

void simulation_frame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.simulation_frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 frame_number = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->frame_number(), output);
  }

  // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
  for (unsigned int i = 0, n = this->variables_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->variables(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.simulation_frame)
}

::google::protobuf::uint8* simulation_frame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.simulation_frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 frame_number = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->frame_number(), target);
  }

  // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
  for (unsigned int i = 0, n = this->variables_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->variables(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.simulation_frame)
  return target;
}

size_t simulation_frame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.simulation_frame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 frame_number = 1 [default = 0];
  if (has_frame_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->frame_number());
  }
  // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
  {
    unsigned int count = this->variables_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->variables(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void simulation_frame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.simulation_frame)
  GOOGLE_DCHECK_NE(&from, this);
  const simulation_frame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const simulation_frame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.simulation_frame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.simulation_frame)
    MergeFrom(*source);
  }
}

void simulation_frame::MergeFrom(const simulation_frame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.simulation_frame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variables_.MergeFrom(from.variables_);
  if (from.has_frame_number()) {
    set_frame_number(from.frame_number());
  }
}

void simulation_frame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.simulation_frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void simulation_frame::CopyFrom(const simulation_frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.simulation_frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool simulation_frame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->variables())) return false;
  return true;
}

void simulation_frame::Swap(simulation_frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void simulation_frame::InternalSwap(simulation_frame* other) {
  variables_.InternalSwap(&other->variables_);
  std::swap(frame_number_, other->frame_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata simulation_frame::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// simulation_frame

// required uint64 frame_number = 1 [default = 0];
bool simulation_frame::has_frame_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void simulation_frame::set_has_frame_number() {
  _has_bits_[0] |= 0x00000001u;
}
void simulation_frame::clear_has_frame_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void simulation_frame::clear_frame_number() {
  frame_number_ = GOOGLE_ULONGLONG(0);
  clear_has_frame_number();
}
::google::protobuf::uint64 simulation_frame::frame_number() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_frame.frame_number)
  return frame_number_;
}
void simulation_frame::set_frame_number(::google::protobuf::uint64 value) {
  set_has_frame_number();
  frame_number_ = value;
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_frame.frame_number)
}

// repeated .c_basic_frame_reflex.simulation_variable variables = 2;
int simulation_frame::variables_size() const {
  return variables_.size();
}
void simulation_frame::clear_variables() {
  variables_.Clear();
}
const ::c_basic_frame_reflex::simulation_variable& simulation_frame::variables(int index) const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_frame.variables)
  return variables_.Get(index);
}
::c_basic_frame_reflex::simulation_variable* simulation_frame::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.simulation_frame.variables)
  return variables_.Mutable(index);
}
::c_basic_frame_reflex::simulation_variable* simulation_frame::add_variables() {
  // @@protoc_insertion_point(field_add:c_basic_frame_reflex.simulation_frame.variables)
  return variables_.Add();
}
::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >*
simulation_frame::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:c_basic_frame_reflex.simulation_frame.variables)
  return &variables_;
}
const ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >&
simulation_frame::variables() const {
  // @@protoc_insertion_point(field_list:c_basic_frame_reflex.simulation_frame.variables)
  return variables_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

alloc_channel_rq::alloc_channel_rq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.alloc_channel_rq)
}
alloc_channel_rq::alloc_channel_rq(const alloc_channel_rq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.alloc_channel_rq)
}

void alloc_channel_rq::SharedCtor() {
  _cached_size_ = 0;
}

alloc_channel_rq::~alloc_channel_rq() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.alloc_channel_rq)
  SharedDtor();
}

void alloc_channel_rq::SharedDtor() {
}

void alloc_channel_rq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* alloc_channel_rq::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const alloc_channel_rq& alloc_channel_rq::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

alloc_channel_rq* alloc_channel_rq::New(::google::protobuf::Arena* arena) const {
  alloc_channel_rq* n = new alloc_channel_rq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void alloc_channel_rq::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.alloc_channel_rq)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool alloc_channel_rq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.alloc_channel_rq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.alloc_channel_rq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.alloc_channel_rq)
  return false;
#undef DO_
}

void alloc_channel_rq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.alloc_channel_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.alloc_channel_rq)
}

::google::protobuf::uint8* alloc_channel_rq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.alloc_channel_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.alloc_channel_rq)
  return target;
}

size_t alloc_channel_rq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.alloc_channel_rq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void alloc_channel_rq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.alloc_channel_rq)
  GOOGLE_DCHECK_NE(&from, this);
  const alloc_channel_rq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const alloc_channel_rq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.alloc_channel_rq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.alloc_channel_rq)
    MergeFrom(*source);
  }
}

void alloc_channel_rq::MergeFrom(const alloc_channel_rq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.alloc_channel_rq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void alloc_channel_rq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.alloc_channel_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void alloc_channel_rq::CopyFrom(const alloc_channel_rq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.alloc_channel_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool alloc_channel_rq::IsInitialized() const {
  return true;
}

void alloc_channel_rq::Swap(alloc_channel_rq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void alloc_channel_rq::InternalSwap(alloc_channel_rq* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata alloc_channel_rq::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// alloc_channel_rq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int alloc_channel_rs::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

alloc_channel_rs::alloc_channel_rs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.alloc_channel_rs)
}
alloc_channel_rs::alloc_channel_rs(const alloc_channel_rs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::b_error::info(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.alloc_channel_rs)
}

void alloc_channel_rs::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
}

alloc_channel_rs::~alloc_channel_rs() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.alloc_channel_rs)
  SharedDtor();
}

void alloc_channel_rs::SharedDtor() {
  if (this != internal_default_instance()) {
    delete error_;
  }
}

void alloc_channel_rs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* alloc_channel_rs::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const alloc_channel_rs& alloc_channel_rs::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

alloc_channel_rs* alloc_channel_rs::New(::google::protobuf::Arena* arena) const {
  alloc_channel_rs* n = new alloc_channel_rs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void alloc_channel_rs::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.alloc_channel_rs)
  if (has_error()) {
    GOOGLE_DCHECK(error_ != NULL);
    error_->::b_error::info::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool alloc_channel_rs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.alloc_channel_rs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .b_error.info error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.alloc_channel_rs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.alloc_channel_rs)
  return false;
#undef DO_
}

void alloc_channel_rs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.alloc_channel_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.alloc_channel_rs)
}

::google::protobuf::uint8* alloc_channel_rs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.alloc_channel_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.alloc_channel_rs)
  return target;
}

size_t alloc_channel_rs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.alloc_channel_rs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .b_error.info error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void alloc_channel_rs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.alloc_channel_rs)
  GOOGLE_DCHECK_NE(&from, this);
  const alloc_channel_rs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const alloc_channel_rs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.alloc_channel_rs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.alloc_channel_rs)
    MergeFrom(*source);
  }
}

void alloc_channel_rs::MergeFrom(const alloc_channel_rs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.alloc_channel_rs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::b_error::info::MergeFrom(from.error());
  }
}

void alloc_channel_rs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.alloc_channel_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void alloc_channel_rs::CopyFrom(const alloc_channel_rs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.alloc_channel_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool alloc_channel_rs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void alloc_channel_rs::Swap(alloc_channel_rs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void alloc_channel_rs::InternalSwap(alloc_channel_rs* other) {
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata alloc_channel_rs::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// alloc_channel_rs

// required .b_error.info error = 1;
bool alloc_channel_rs::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void alloc_channel_rs::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void alloc_channel_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void alloc_channel_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
const ::b_error::info& alloc_channel_rs::error() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.alloc_channel_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
::b_error::info* alloc_channel_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.alloc_channel_rs.error)
  return error_;
}
::b_error::info* alloc_channel_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_basic_frame_reflex.alloc_channel_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
void alloc_channel_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_basic_frame_reflex.alloc_channel_rs.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

relax_channel_rq::relax_channel_rq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.relax_channel_rq)
}
relax_channel_rq::relax_channel_rq(const relax_channel_rq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.relax_channel_rq)
}

void relax_channel_rq::SharedCtor() {
  _cached_size_ = 0;
}

relax_channel_rq::~relax_channel_rq() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.relax_channel_rq)
  SharedDtor();
}

void relax_channel_rq::SharedDtor() {
}

void relax_channel_rq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* relax_channel_rq::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const relax_channel_rq& relax_channel_rq::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

relax_channel_rq* relax_channel_rq::New(::google::protobuf::Arena* arena) const {
  relax_channel_rq* n = new relax_channel_rq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void relax_channel_rq::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.relax_channel_rq)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool relax_channel_rq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.relax_channel_rq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.relax_channel_rq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.relax_channel_rq)
  return false;
#undef DO_
}

void relax_channel_rq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.relax_channel_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.relax_channel_rq)
}

::google::protobuf::uint8* relax_channel_rq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.relax_channel_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.relax_channel_rq)
  return target;
}

size_t relax_channel_rq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.relax_channel_rq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void relax_channel_rq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.relax_channel_rq)
  GOOGLE_DCHECK_NE(&from, this);
  const relax_channel_rq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const relax_channel_rq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.relax_channel_rq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.relax_channel_rq)
    MergeFrom(*source);
  }
}

void relax_channel_rq::MergeFrom(const relax_channel_rq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.relax_channel_rq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void relax_channel_rq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.relax_channel_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void relax_channel_rq::CopyFrom(const relax_channel_rq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.relax_channel_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool relax_channel_rq::IsInitialized() const {
  return true;
}

void relax_channel_rq::Swap(relax_channel_rq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void relax_channel_rq::InternalSwap(relax_channel_rq* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata relax_channel_rq::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// relax_channel_rq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int relax_channel_rs::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

relax_channel_rs::relax_channel_rs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.relax_channel_rs)
}
relax_channel_rs::relax_channel_rs(const relax_channel_rs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::b_error::info(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.relax_channel_rs)
}

void relax_channel_rs::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
}

relax_channel_rs::~relax_channel_rs() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.relax_channel_rs)
  SharedDtor();
}

void relax_channel_rs::SharedDtor() {
  if (this != internal_default_instance()) {
    delete error_;
  }
}

void relax_channel_rs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* relax_channel_rs::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const relax_channel_rs& relax_channel_rs::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

relax_channel_rs* relax_channel_rs::New(::google::protobuf::Arena* arena) const {
  relax_channel_rs* n = new relax_channel_rs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void relax_channel_rs::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.relax_channel_rs)
  if (has_error()) {
    GOOGLE_DCHECK(error_ != NULL);
    error_->::b_error::info::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool relax_channel_rs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.relax_channel_rs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .b_error.info error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.relax_channel_rs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.relax_channel_rs)
  return false;
#undef DO_
}

void relax_channel_rs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.relax_channel_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.relax_channel_rs)
}

::google::protobuf::uint8* relax_channel_rs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.relax_channel_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.relax_channel_rs)
  return target;
}

size_t relax_channel_rs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.relax_channel_rs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .b_error.info error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void relax_channel_rs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.relax_channel_rs)
  GOOGLE_DCHECK_NE(&from, this);
  const relax_channel_rs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const relax_channel_rs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.relax_channel_rs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.relax_channel_rs)
    MergeFrom(*source);
  }
}

void relax_channel_rs::MergeFrom(const relax_channel_rs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.relax_channel_rs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::b_error::info::MergeFrom(from.error());
  }
}

void relax_channel_rs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.relax_channel_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void relax_channel_rs::CopyFrom(const relax_channel_rs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.relax_channel_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool relax_channel_rs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void relax_channel_rs::Swap(relax_channel_rs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void relax_channel_rs::InternalSwap(relax_channel_rs* other) {
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata relax_channel_rs::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// relax_channel_rs

// required .b_error.info error = 1;
bool relax_channel_rs::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void relax_channel_rs::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void relax_channel_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void relax_channel_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
const ::b_error::info& relax_channel_rs::error() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.relax_channel_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
::b_error::info* relax_channel_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.relax_channel_rs.error)
  return error_;
}
::b_error::info* relax_channel_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_basic_frame_reflex.relax_channel_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
void relax_channel_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_basic_frame_reflex.relax_channel_rs.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

enter_channel_rq::enter_channel_rq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.enter_channel_rq)
}
enter_channel_rq::enter_channel_rq(const enter_channel_rq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.enter_channel_rq)
}

void enter_channel_rq::SharedCtor() {
  _cached_size_ = 0;
}

enter_channel_rq::~enter_channel_rq() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.enter_channel_rq)
  SharedDtor();
}

void enter_channel_rq::SharedDtor() {
}

void enter_channel_rq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* enter_channel_rq::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const enter_channel_rq& enter_channel_rq::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

enter_channel_rq* enter_channel_rq::New(::google::protobuf::Arena* arena) const {
  enter_channel_rq* n = new enter_channel_rq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void enter_channel_rq::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.enter_channel_rq)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool enter_channel_rq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.enter_channel_rq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.enter_channel_rq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.enter_channel_rq)
  return false;
#undef DO_
}

void enter_channel_rq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.enter_channel_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.enter_channel_rq)
}

::google::protobuf::uint8* enter_channel_rq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.enter_channel_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.enter_channel_rq)
  return target;
}

size_t enter_channel_rq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.enter_channel_rq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void enter_channel_rq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.enter_channel_rq)
  GOOGLE_DCHECK_NE(&from, this);
  const enter_channel_rq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const enter_channel_rq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.enter_channel_rq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.enter_channel_rq)
    MergeFrom(*source);
  }
}

void enter_channel_rq::MergeFrom(const enter_channel_rq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.enter_channel_rq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void enter_channel_rq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.enter_channel_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void enter_channel_rq::CopyFrom(const enter_channel_rq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.enter_channel_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool enter_channel_rq::IsInitialized() const {
  return true;
}

void enter_channel_rq::Swap(enter_channel_rq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void enter_channel_rq::InternalSwap(enter_channel_rq* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata enter_channel_rq::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// enter_channel_rq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int enter_channel_rs::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

enter_channel_rs::enter_channel_rs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.enter_channel_rs)
}
enter_channel_rs::enter_channel_rs(const enter_channel_rs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::b_error::info(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.enter_channel_rs)
}

void enter_channel_rs::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
}

enter_channel_rs::~enter_channel_rs() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.enter_channel_rs)
  SharedDtor();
}

void enter_channel_rs::SharedDtor() {
  if (this != internal_default_instance()) {
    delete error_;
  }
}

void enter_channel_rs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* enter_channel_rs::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const enter_channel_rs& enter_channel_rs::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

enter_channel_rs* enter_channel_rs::New(::google::protobuf::Arena* arena) const {
  enter_channel_rs* n = new enter_channel_rs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void enter_channel_rs::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.enter_channel_rs)
  if (has_error()) {
    GOOGLE_DCHECK(error_ != NULL);
    error_->::b_error::info::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool enter_channel_rs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.enter_channel_rs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .b_error.info error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.enter_channel_rs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.enter_channel_rs)
  return false;
#undef DO_
}

void enter_channel_rs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.enter_channel_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.enter_channel_rs)
}

::google::protobuf::uint8* enter_channel_rs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.enter_channel_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.enter_channel_rs)
  return target;
}

size_t enter_channel_rs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.enter_channel_rs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .b_error.info error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void enter_channel_rs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.enter_channel_rs)
  GOOGLE_DCHECK_NE(&from, this);
  const enter_channel_rs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const enter_channel_rs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.enter_channel_rs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.enter_channel_rs)
    MergeFrom(*source);
  }
}

void enter_channel_rs::MergeFrom(const enter_channel_rs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.enter_channel_rs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::b_error::info::MergeFrom(from.error());
  }
}

void enter_channel_rs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.enter_channel_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void enter_channel_rs::CopyFrom(const enter_channel_rs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.enter_channel_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool enter_channel_rs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void enter_channel_rs::Swap(enter_channel_rs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void enter_channel_rs::InternalSwap(enter_channel_rs* other) {
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata enter_channel_rs::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// enter_channel_rs

// required .b_error.info error = 1;
bool enter_channel_rs::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void enter_channel_rs::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void enter_channel_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void enter_channel_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
const ::b_error::info& enter_channel_rs::error() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.enter_channel_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
::b_error::info* enter_channel_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.enter_channel_rs.error)
  return error_;
}
::b_error::info* enter_channel_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_basic_frame_reflex.enter_channel_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
void enter_channel_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_basic_frame_reflex.enter_channel_rs.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

leave_channel_rq::leave_channel_rq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.leave_channel_rq)
}
leave_channel_rq::leave_channel_rq(const leave_channel_rq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.leave_channel_rq)
}

void leave_channel_rq::SharedCtor() {
  _cached_size_ = 0;
}

leave_channel_rq::~leave_channel_rq() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.leave_channel_rq)
  SharedDtor();
}

void leave_channel_rq::SharedDtor() {
}

void leave_channel_rq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* leave_channel_rq::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const leave_channel_rq& leave_channel_rq::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

leave_channel_rq* leave_channel_rq::New(::google::protobuf::Arena* arena) const {
  leave_channel_rq* n = new leave_channel_rq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void leave_channel_rq::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.leave_channel_rq)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool leave_channel_rq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.leave_channel_rq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.leave_channel_rq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.leave_channel_rq)
  return false;
#undef DO_
}

void leave_channel_rq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.leave_channel_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.leave_channel_rq)
}

::google::protobuf::uint8* leave_channel_rq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.leave_channel_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.leave_channel_rq)
  return target;
}

size_t leave_channel_rq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.leave_channel_rq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void leave_channel_rq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.leave_channel_rq)
  GOOGLE_DCHECK_NE(&from, this);
  const leave_channel_rq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const leave_channel_rq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.leave_channel_rq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.leave_channel_rq)
    MergeFrom(*source);
  }
}

void leave_channel_rq::MergeFrom(const leave_channel_rq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.leave_channel_rq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void leave_channel_rq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.leave_channel_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void leave_channel_rq::CopyFrom(const leave_channel_rq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.leave_channel_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool leave_channel_rq::IsInitialized() const {
  return true;
}

void leave_channel_rq::Swap(leave_channel_rq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void leave_channel_rq::InternalSwap(leave_channel_rq* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata leave_channel_rq::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// leave_channel_rq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int leave_channel_rs::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

leave_channel_rs::leave_channel_rs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.leave_channel_rs)
}
leave_channel_rs::leave_channel_rs(const leave_channel_rs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::b_error::info(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.leave_channel_rs)
}

void leave_channel_rs::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
}

leave_channel_rs::~leave_channel_rs() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.leave_channel_rs)
  SharedDtor();
}

void leave_channel_rs::SharedDtor() {
  if (this != internal_default_instance()) {
    delete error_;
  }
}

void leave_channel_rs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* leave_channel_rs::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const leave_channel_rs& leave_channel_rs::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

leave_channel_rs* leave_channel_rs::New(::google::protobuf::Arena* arena) const {
  leave_channel_rs* n = new leave_channel_rs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void leave_channel_rs::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.leave_channel_rs)
  if (has_error()) {
    GOOGLE_DCHECK(error_ != NULL);
    error_->::b_error::info::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool leave_channel_rs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.leave_channel_rs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .b_error.info error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.leave_channel_rs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.leave_channel_rs)
  return false;
#undef DO_
}

void leave_channel_rs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.leave_channel_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.leave_channel_rs)
}

::google::protobuf::uint8* leave_channel_rs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.leave_channel_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.leave_channel_rs)
  return target;
}

size_t leave_channel_rs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.leave_channel_rs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .b_error.info error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void leave_channel_rs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.leave_channel_rs)
  GOOGLE_DCHECK_NE(&from, this);
  const leave_channel_rs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const leave_channel_rs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.leave_channel_rs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.leave_channel_rs)
    MergeFrom(*source);
  }
}

void leave_channel_rs::MergeFrom(const leave_channel_rs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.leave_channel_rs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::b_error::info::MergeFrom(from.error());
  }
}

void leave_channel_rs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.leave_channel_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void leave_channel_rs::CopyFrom(const leave_channel_rs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.leave_channel_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool leave_channel_rs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void leave_channel_rs::Swap(leave_channel_rs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void leave_channel_rs::InternalSwap(leave_channel_rs* other) {
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata leave_channel_rs::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// leave_channel_rs

// required .b_error.info error = 1;
bool leave_channel_rs::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void leave_channel_rs::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void leave_channel_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void leave_channel_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
const ::b_error::info& leave_channel_rs::error() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.leave_channel_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
::b_error::info* leave_channel_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.leave_channel_rs.error)
  return error_;
}
::b_error::info* leave_channel_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_basic_frame_reflex.leave_channel_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
void leave_channel_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_basic_frame_reflex.leave_channel_rs.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int simulation_frame_nt::kFrameNumberFieldNumber;
const int simulation_frame_nt::kVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

simulation_frame_nt::simulation_frame_nt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_basic_frame_reflex.simulation_frame_nt)
}
simulation_frame_nt::simulation_frame_nt(const simulation_frame_nt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      variables_(from.variables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_number_ = from.frame_number_;
  // @@protoc_insertion_point(copy_constructor:c_basic_frame_reflex.simulation_frame_nt)
}

void simulation_frame_nt::SharedCtor() {
  _cached_size_ = 0;
  frame_number_ = GOOGLE_ULONGLONG(0);
}

simulation_frame_nt::~simulation_frame_nt() {
  // @@protoc_insertion_point(destructor:c_basic_frame_reflex.simulation_frame_nt)
  SharedDtor();
}

void simulation_frame_nt::SharedDtor() {
}

void simulation_frame_nt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* simulation_frame_nt::descriptor() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const simulation_frame_nt& simulation_frame_nt::default_instance() {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::InitDefaults();
  return *internal_default_instance();
}

simulation_frame_nt* simulation_frame_nt::New(::google::protobuf::Arena* arena) const {
  simulation_frame_nt* n = new simulation_frame_nt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void simulation_frame_nt::Clear() {
// @@protoc_insertion_point(message_clear_start:c_basic_frame_reflex.simulation_frame_nt)
  variables_.Clear();
  frame_number_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool simulation_frame_nt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_basic_frame_reflex.simulation_frame_nt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 frame_number = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_frame_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frame_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_basic_frame_reflex.simulation_frame_nt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_basic_frame_reflex.simulation_frame_nt)
  return false;
#undef DO_
}

void simulation_frame_nt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_basic_frame_reflex.simulation_frame_nt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 frame_number = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->frame_number(), output);
  }

  // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
  for (unsigned int i = 0, n = this->variables_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->variables(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_basic_frame_reflex.simulation_frame_nt)
}

::google::protobuf::uint8* simulation_frame_nt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_basic_frame_reflex.simulation_frame_nt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 frame_number = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->frame_number(), target);
  }

  // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
  for (unsigned int i = 0, n = this->variables_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->variables(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_basic_frame_reflex.simulation_frame_nt)
  return target;
}

size_t simulation_frame_nt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_basic_frame_reflex.simulation_frame_nt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 frame_number = 1 [default = 0];
  if (has_frame_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->frame_number());
  }
  // repeated .c_basic_frame_reflex.simulation_variable variables = 2;
  {
    unsigned int count = this->variables_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->variables(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void simulation_frame_nt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_basic_frame_reflex.simulation_frame_nt)
  GOOGLE_DCHECK_NE(&from, this);
  const simulation_frame_nt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const simulation_frame_nt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_basic_frame_reflex.simulation_frame_nt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_basic_frame_reflex.simulation_frame_nt)
    MergeFrom(*source);
  }
}

void simulation_frame_nt::MergeFrom(const simulation_frame_nt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_basic_frame_reflex.simulation_frame_nt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variables_.MergeFrom(from.variables_);
  if (from.has_frame_number()) {
    set_frame_number(from.frame_number());
  }
}

void simulation_frame_nt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_basic_frame_reflex.simulation_frame_nt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void simulation_frame_nt::CopyFrom(const simulation_frame_nt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_basic_frame_reflex.simulation_frame_nt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool simulation_frame_nt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->variables())) return false;
  return true;
}

void simulation_frame_nt::Swap(simulation_frame_nt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void simulation_frame_nt::InternalSwap(simulation_frame_nt* other) {
  variables_.InternalSwap(&other->variables_);
  std::swap(frame_number_, other->frame_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata simulation_frame_nt::GetMetadata() const {
  protobuf_c_5fbasic_5fframe_5freflex_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbasic_5fframe_5freflex_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// simulation_frame_nt

// required uint64 frame_number = 1 [default = 0];
bool simulation_frame_nt::has_frame_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void simulation_frame_nt::set_has_frame_number() {
  _has_bits_[0] |= 0x00000001u;
}
void simulation_frame_nt::clear_has_frame_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void simulation_frame_nt::clear_frame_number() {
  frame_number_ = GOOGLE_ULONGLONG(0);
  clear_has_frame_number();
}
::google::protobuf::uint64 simulation_frame_nt::frame_number() const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_frame_nt.frame_number)
  return frame_number_;
}
void simulation_frame_nt::set_frame_number(::google::protobuf::uint64 value) {
  set_has_frame_number();
  frame_number_ = value;
  // @@protoc_insertion_point(field_set:c_basic_frame_reflex.simulation_frame_nt.frame_number)
}

// repeated .c_basic_frame_reflex.simulation_variable variables = 2;
int simulation_frame_nt::variables_size() const {
  return variables_.size();
}
void simulation_frame_nt::clear_variables() {
  variables_.Clear();
}
const ::c_basic_frame_reflex::simulation_variable& simulation_frame_nt::variables(int index) const {
  // @@protoc_insertion_point(field_get:c_basic_frame_reflex.simulation_frame_nt.variables)
  return variables_.Get(index);
}
::c_basic_frame_reflex::simulation_variable* simulation_frame_nt::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:c_basic_frame_reflex.simulation_frame_nt.variables)
  return variables_.Mutable(index);
}
::c_basic_frame_reflex::simulation_variable* simulation_frame_nt::add_variables() {
  // @@protoc_insertion_point(field_add:c_basic_frame_reflex.simulation_frame_nt.variables)
  return variables_.Add();
}
::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >*
simulation_frame_nt::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:c_basic_frame_reflex.simulation_frame_nt.variables)
  return &variables_;
}
const ::google::protobuf::RepeatedPtrField< ::c_basic_frame_reflex::simulation_variable >&
simulation_frame_nt::variables() const {
  // @@protoc_insertion_point(field_list:c_basic_frame_reflex.simulation_frame_nt.variables)
  return variables_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace c_basic_frame_reflex

// @@protoc_insertion_point(global_scope)
