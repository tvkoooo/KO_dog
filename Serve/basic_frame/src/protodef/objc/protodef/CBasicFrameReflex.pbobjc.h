// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c_basic_frame_reflex.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class B_error_info;
@class C_basic_frame_reflex_simulation_variable;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum C_basic_frame_reflex_msg

/**
 * ////////////////////////////////////////////////////////////////
 * msg area.
 **/
typedef GPB_ENUM(C_basic_frame_reflex_msg) {
  C_basic_frame_reflex_msg_MinId = 33558784,
  C_basic_frame_reflex_msg_MaxId = 33559039,
};

GPBEnumDescriptor *C_basic_frame_reflex_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_basic_frame_reflex_alloc_channel_rq_msg

typedef GPB_ENUM(C_basic_frame_reflex_alloc_channel_rq_msg) {
  C_basic_frame_reflex_alloc_channel_rq_msg_Id = 16777472,
};

GPBEnumDescriptor *C_basic_frame_reflex_alloc_channel_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_alloc_channel_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_basic_frame_reflex_alloc_channel_rs_msg

typedef GPB_ENUM(C_basic_frame_reflex_alloc_channel_rs_msg) {
  C_basic_frame_reflex_alloc_channel_rs_msg_Id = 16777473,
};

GPBEnumDescriptor *C_basic_frame_reflex_alloc_channel_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_alloc_channel_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_basic_frame_reflex_relax_channel_rq_msg

typedef GPB_ENUM(C_basic_frame_reflex_relax_channel_rq_msg) {
  C_basic_frame_reflex_relax_channel_rq_msg_Id = 16777472,
};

GPBEnumDescriptor *C_basic_frame_reflex_relax_channel_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_relax_channel_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_basic_frame_reflex_relax_channel_rs_msg

typedef GPB_ENUM(C_basic_frame_reflex_relax_channel_rs_msg) {
  C_basic_frame_reflex_relax_channel_rs_msg_Id = 16777473,
};

GPBEnumDescriptor *C_basic_frame_reflex_relax_channel_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_relax_channel_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_basic_frame_reflex_enter_channel_rq_msg

typedef GPB_ENUM(C_basic_frame_reflex_enter_channel_rq_msg) {
  C_basic_frame_reflex_enter_channel_rq_msg_Id = 16777472,
};

GPBEnumDescriptor *C_basic_frame_reflex_enter_channel_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_enter_channel_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_basic_frame_reflex_enter_channel_rs_msg

typedef GPB_ENUM(C_basic_frame_reflex_enter_channel_rs_msg) {
  C_basic_frame_reflex_enter_channel_rs_msg_Id = 16777473,
};

GPBEnumDescriptor *C_basic_frame_reflex_enter_channel_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_enter_channel_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_basic_frame_reflex_leave_channel_rq_msg

typedef GPB_ENUM(C_basic_frame_reflex_leave_channel_rq_msg) {
  C_basic_frame_reflex_leave_channel_rq_msg_Id = 16777472,
};

GPBEnumDescriptor *C_basic_frame_reflex_leave_channel_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_leave_channel_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_basic_frame_reflex_leave_channel_rs_msg

typedef GPB_ENUM(C_basic_frame_reflex_leave_channel_rs_msg) {
  C_basic_frame_reflex_leave_channel_rs_msg_Id = 16777473,
};

GPBEnumDescriptor *C_basic_frame_reflex_leave_channel_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_leave_channel_rs_msg_IsValidValue(int32_t value);

#pragma mark - Enum C_basic_frame_reflex_simulation_frame_nt_msg

typedef GPB_ENUM(C_basic_frame_reflex_simulation_frame_nt_msg) {
  C_basic_frame_reflex_simulation_frame_nt_msg_Id = 16777475,
};

GPBEnumDescriptor *C_basic_frame_reflex_simulation_frame_nt_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL C_basic_frame_reflex_simulation_frame_nt_msg_IsValidValue(int32_t value);

#pragma mark - C_basic_frame_reflex_CBasicFrameReflexRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface C_basic_frame_reflex_CBasicFrameReflexRoot : GPBRootObject
@end

#pragma mark - C_basic_frame_reflex_simulation_variable

typedef GPB_ENUM(C_basic_frame_reflex_simulation_variable_FieldNumber) {
  C_basic_frame_reflex_simulation_variable_FieldNumber_Uid = 1,
  C_basic_frame_reflex_simulation_variable_FieldNumber_CommandsArray = 2,
};

/**
 * ////////////////////////////////////////////////////////////////
 * struct
 **/
@interface C_basic_frame_reflex_simulation_variable : GPBMessage

/** 用户号 */
@property(nonatomic, readwrite) uint64_t uid;

@property(nonatomic, readwrite) BOOL hasUid;
/** 命令集 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *commandsArray;
/** The number of items in @c commandsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger commandsArray_Count;

@end

#pragma mark - C_basic_frame_reflex_simulation_frame

typedef GPB_ENUM(C_basic_frame_reflex_simulation_frame_FieldNumber) {
  C_basic_frame_reflex_simulation_frame_FieldNumber_FrameNumber = 1,
  C_basic_frame_reflex_simulation_frame_FieldNumber_VariablesArray = 2,
};

@interface C_basic_frame_reflex_simulation_frame : GPBMessage

/** 帧序号 */
@property(nonatomic, readwrite) uint64_t frameNumber;

@property(nonatomic, readwrite) BOOL hasFrameNumber;
/** 变量集 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<C_basic_frame_reflex_simulation_variable*> *variablesArray;
/** The number of items in @c variablesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger variablesArray_Count;

@end

#pragma mark - C_basic_frame_reflex_alloc_channel_rq

/**
 * ////////////////////////////////////////////////////////////////
 * rq rs
 * 分配.
 **/
@interface C_basic_frame_reflex_alloc_channel_rq : GPBMessage

@end

#pragma mark - C_basic_frame_reflex_alloc_channel_rs

typedef GPB_ENUM(C_basic_frame_reflex_alloc_channel_rs_FieldNumber) {
  C_basic_frame_reflex_alloc_channel_rs_FieldNumber_Error = 1,
};

@interface C_basic_frame_reflex_alloc_channel_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

@end

#pragma mark - C_basic_frame_reflex_relax_channel_rq

/**
 * 释放.
 **/
@interface C_basic_frame_reflex_relax_channel_rq : GPBMessage

@end

#pragma mark - C_basic_frame_reflex_relax_channel_rs

typedef GPB_ENUM(C_basic_frame_reflex_relax_channel_rs_FieldNumber) {
  C_basic_frame_reflex_relax_channel_rs_FieldNumber_Error = 1,
};

@interface C_basic_frame_reflex_relax_channel_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

@end

#pragma mark - C_basic_frame_reflex_enter_channel_rq

/**
 * 入场.
 **/
@interface C_basic_frame_reflex_enter_channel_rq : GPBMessage

@end

#pragma mark - C_basic_frame_reflex_enter_channel_rs

typedef GPB_ENUM(C_basic_frame_reflex_enter_channel_rs_FieldNumber) {
  C_basic_frame_reflex_enter_channel_rs_FieldNumber_Error = 1,
};

@interface C_basic_frame_reflex_enter_channel_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

@end

#pragma mark - C_basic_frame_reflex_leave_channel_rq

/**
 * 出场.
 **/
@interface C_basic_frame_reflex_leave_channel_rq : GPBMessage

@end

#pragma mark - C_basic_frame_reflex_leave_channel_rs

typedef GPB_ENUM(C_basic_frame_reflex_leave_channel_rs_FieldNumber) {
  C_basic_frame_reflex_leave_channel_rs_FieldNumber_Error = 1,
};

@interface C_basic_frame_reflex_leave_channel_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

@end

#pragma mark - C_basic_frame_reflex_simulation_frame_nt

typedef GPB_ENUM(C_basic_frame_reflex_simulation_frame_nt_FieldNumber) {
  C_basic_frame_reflex_simulation_frame_nt_FieldNumber_FrameNumber = 1,
  C_basic_frame_reflex_simulation_frame_nt_FieldNumber_VariablesArray = 2,
};

/**
 * ////////////////////////////////////////////////////////////////
 **/
@interface C_basic_frame_reflex_simulation_frame_nt : GPBMessage

/** 帧序号 */
@property(nonatomic, readwrite) uint64_t frameNumber;

@property(nonatomic, readwrite) BOOL hasFrameNumber;
/** 变量集 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<C_basic_frame_reflex_simulation_variable*> *variablesArray;
/** The number of items in @c variablesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger variablesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
