// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lc_message_package.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lc_message_package.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace lc_message_package {
class message_package_streamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_package_stream> {
} _message_package_stream_default_instance_;

namespace protobuf_lc_5fmessage_5fpackage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_package_stream, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_package_stream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_package_stream, system_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_package_stream, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_package_stream, user_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_package_stream, user_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_package_stream, meassage_),
  4,
  3,
  0,
  1,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(message_package_stream)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_package_stream_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "lc_message_package.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _message_package_stream_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _message_package_stream_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\030lc_message_package.proto\022\022lc_message_p"
      "ackage\"{\n\026message_package_stream\022\024\n\014syst"
      "em_state\030\001 \001(\r\022\017\n\007user_id\030\002 \001(\004\022\021\n\tuser_"
      "nick\030\003 \001(\t\022\025\n\ruser_password\030\004 \001(\t\022\020\n\010mea"
      "ssage\030\006 \001(\tBf\n\010protodefB\022lc_message_pack"
      "ageZ\033protodef/lc_message_package\242\002\023Lc_me"
      "ssage_package_\252\002\022lc_message_package"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 275);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lc_message_package.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_lc_5fmessage_5fpackage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_package_stream::kSystemStateFieldNumber;
const int message_package_stream::kUserIdFieldNumber;
const int message_package_stream::kUserNickFieldNumber;
const int message_package_stream::kUserPasswordFieldNumber;
const int message_package_stream::kMeassageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_package_stream::message_package_stream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lc_5fmessage_5fpackage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lc_message_package.message_package_stream)
}
message_package_stream::message_package_stream(const message_package_stream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_nick()) {
    user_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_nick_);
  }
  user_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_password()) {
    user_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_);
  }
  meassage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_meassage()) {
    meassage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meassage_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&system_state_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(system_state_));
  // @@protoc_insertion_point(copy_constructor:lc_message_package.message_package_stream)
}

void message_package_stream::SharedCtor() {
  _cached_size_ = 0;
  user_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meassage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&system_state_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(system_state_));
}

message_package_stream::~message_package_stream() {
  // @@protoc_insertion_point(destructor:lc_message_package.message_package_stream)
  SharedDtor();
}

void message_package_stream::SharedDtor() {
  user_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meassage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void message_package_stream::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_package_stream::descriptor() {
  protobuf_lc_5fmessage_5fpackage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lc_5fmessage_5fpackage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const message_package_stream& message_package_stream::default_instance() {
  protobuf_lc_5fmessage_5fpackage_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_package_stream* message_package_stream::New(::google::protobuf::Arena* arena) const {
  message_package_stream* n = new message_package_stream;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_package_stream::Clear() {
// @@protoc_insertion_point(message_clear_start:lc_message_package.message_package_stream)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_user_nick()) {
      GOOGLE_DCHECK(!user_nick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_nick_.UnsafeRawStringPointer())->clear();
    }
    if (has_user_password()) {
      GOOGLE_DCHECK(!user_password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_password_.UnsafeRawStringPointer())->clear();
    }
    if (has_meassage()) {
      GOOGLE_DCHECK(!meassage_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*meassage_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&user_id_, 0, reinterpret_cast<char*>(&system_state_) -
      reinterpret_cast<char*>(&user_id_) + sizeof(system_state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_package_stream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lc_message_package.message_package_stream)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 system_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_system_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &system_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_nick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_nick().data(), this->user_nick().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lc_message_package.message_package_stream.user_nick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_password().data(), this->user_password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lc_message_package.message_package_stream.user_password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string meassage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_meassage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->meassage().data(), this->meassage().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lc_message_package.message_package_stream.meassage");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lc_message_package.message_package_stream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lc_message_package.message_package_stream)
  return false;
#undef DO_
}

void message_package_stream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lc_message_package.message_package_stream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 system_state = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->system_state(), output);
  }

  // optional uint64 user_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->user_id(), output);
  }

  // optional string user_nick = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_nick().data(), this->user_nick().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lc_message_package.message_package_stream.user_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_nick(), output);
  }

  // optional string user_password = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_password().data(), this->user_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lc_message_package.message_package_stream.user_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_password(), output);
  }

  // optional string meassage = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->meassage().data(), this->meassage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lc_message_package.message_package_stream.meassage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->meassage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lc_message_package.message_package_stream)
}

::google::protobuf::uint8* message_package_stream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lc_message_package.message_package_stream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 system_state = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->system_state(), target);
  }

  // optional uint64 user_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->user_id(), target);
  }

  // optional string user_nick = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_nick().data(), this->user_nick().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lc_message_package.message_package_stream.user_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_nick(), target);
  }

  // optional string user_password = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_password().data(), this->user_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lc_message_package.message_package_stream.user_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_password(), target);
  }

  // optional string meassage = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->meassage().data(), this->meassage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lc_message_package.message_package_stream.meassage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->meassage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lc_message_package.message_package_stream)
  return target;
}

size_t message_package_stream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lc_message_package.message_package_stream)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string user_nick = 3;
    if (has_user_nick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_nick());
    }

    // optional string user_password = 4;
    if (has_user_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_password());
    }

    // optional string meassage = 6;
    if (has_meassage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->meassage());
    }

    // optional uint64 user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

    // optional uint32 system_state = 1;
    if (has_system_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->system_state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_package_stream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lc_message_package.message_package_stream)
  GOOGLE_DCHECK_NE(&from, this);
  const message_package_stream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_package_stream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lc_message_package.message_package_stream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lc_message_package.message_package_stream)
    MergeFrom(*source);
  }
}

void message_package_stream::MergeFrom(const message_package_stream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lc_message_package.message_package_stream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_nick();
      user_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_nick_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_user_password();
      user_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_meassage();
      meassage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meassage_);
    }
    if (cached_has_bits & 0x00000008u) {
      user_id_ = from.user_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      system_state_ = from.system_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void message_package_stream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lc_message_package.message_package_stream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_package_stream::CopyFrom(const message_package_stream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lc_message_package.message_package_stream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_package_stream::IsInitialized() const {
  return true;
}

void message_package_stream::Swap(message_package_stream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_package_stream::InternalSwap(message_package_stream* other) {
  user_nick_.Swap(&other->user_nick_);
  user_password_.Swap(&other->user_password_);
  meassage_.Swap(&other->meassage_);
  std::swap(user_id_, other->user_id_);
  std::swap(system_state_, other->system_state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_package_stream::GetMetadata() const {
  protobuf_lc_5fmessage_5fpackage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lc_5fmessage_5fpackage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_package_stream

// optional uint32 system_state = 1;
bool message_package_stream::has_system_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void message_package_stream::set_has_system_state() {
  _has_bits_[0] |= 0x00000010u;
}
void message_package_stream::clear_has_system_state() {
  _has_bits_[0] &= ~0x00000010u;
}
void message_package_stream::clear_system_state() {
  system_state_ = 0u;
  clear_has_system_state();
}
::google::protobuf::uint32 message_package_stream::system_state() const {
  // @@protoc_insertion_point(field_get:lc_message_package.message_package_stream.system_state)
  return system_state_;
}
void message_package_stream::set_system_state(::google::protobuf::uint32 value) {
  set_has_system_state();
  system_state_ = value;
  // @@protoc_insertion_point(field_set:lc_message_package.message_package_stream.system_state)
}

// optional uint64 user_id = 2;
bool message_package_stream::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void message_package_stream::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
void message_package_stream::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void message_package_stream::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
::google::protobuf::uint64 message_package_stream::user_id() const {
  // @@protoc_insertion_point(field_get:lc_message_package.message_package_stream.user_id)
  return user_id_;
}
void message_package_stream::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:lc_message_package.message_package_stream.user_id)
}

// optional string user_nick = 3;
bool message_package_stream::has_user_nick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void message_package_stream::set_has_user_nick() {
  _has_bits_[0] |= 0x00000001u;
}
void message_package_stream::clear_has_user_nick() {
  _has_bits_[0] &= ~0x00000001u;
}
void message_package_stream::clear_user_nick() {
  user_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_nick();
}
const ::std::string& message_package_stream::user_nick() const {
  // @@protoc_insertion_point(field_get:lc_message_package.message_package_stream.user_nick)
  return user_nick_.GetNoArena();
}
void message_package_stream::set_user_nick(const ::std::string& value) {
  set_has_user_nick();
  user_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lc_message_package.message_package_stream.user_nick)
}
#if LANG_CXX11
void message_package_stream::set_user_nick(::std::string&& value) {
  set_has_user_nick();
  user_nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lc_message_package.message_package_stream.user_nick)
}
#endif
void message_package_stream::set_user_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_nick();
  user_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lc_message_package.message_package_stream.user_nick)
}
void message_package_stream::set_user_nick(const char* value, size_t size) {
  set_has_user_nick();
  user_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lc_message_package.message_package_stream.user_nick)
}
::std::string* message_package_stream::mutable_user_nick() {
  set_has_user_nick();
  // @@protoc_insertion_point(field_mutable:lc_message_package.message_package_stream.user_nick)
  return user_nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message_package_stream::release_user_nick() {
  // @@protoc_insertion_point(field_release:lc_message_package.message_package_stream.user_nick)
  clear_has_user_nick();
  return user_nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message_package_stream::set_allocated_user_nick(::std::string* user_nick) {
  if (user_nick != NULL) {
    set_has_user_nick();
  } else {
    clear_has_user_nick();
  }
  user_nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_nick);
  // @@protoc_insertion_point(field_set_allocated:lc_message_package.message_package_stream.user_nick)
}

// optional string user_password = 4;
bool message_package_stream::has_user_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void message_package_stream::set_has_user_password() {
  _has_bits_[0] |= 0x00000002u;
}
void message_package_stream::clear_has_user_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void message_package_stream::clear_user_password() {
  user_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_password();
}
const ::std::string& message_package_stream::user_password() const {
  // @@protoc_insertion_point(field_get:lc_message_package.message_package_stream.user_password)
  return user_password_.GetNoArena();
}
void message_package_stream::set_user_password(const ::std::string& value) {
  set_has_user_password();
  user_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lc_message_package.message_package_stream.user_password)
}
#if LANG_CXX11
void message_package_stream::set_user_password(::std::string&& value) {
  set_has_user_password();
  user_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lc_message_package.message_package_stream.user_password)
}
#endif
void message_package_stream::set_user_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_password();
  user_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lc_message_package.message_package_stream.user_password)
}
void message_package_stream::set_user_password(const char* value, size_t size) {
  set_has_user_password();
  user_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lc_message_package.message_package_stream.user_password)
}
::std::string* message_package_stream::mutable_user_password() {
  set_has_user_password();
  // @@protoc_insertion_point(field_mutable:lc_message_package.message_package_stream.user_password)
  return user_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message_package_stream::release_user_password() {
  // @@protoc_insertion_point(field_release:lc_message_package.message_package_stream.user_password)
  clear_has_user_password();
  return user_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message_package_stream::set_allocated_user_password(::std::string* user_password) {
  if (user_password != NULL) {
    set_has_user_password();
  } else {
    clear_has_user_password();
  }
  user_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_password);
  // @@protoc_insertion_point(field_set_allocated:lc_message_package.message_package_stream.user_password)
}

// optional string meassage = 6;
bool message_package_stream::has_meassage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void message_package_stream::set_has_meassage() {
  _has_bits_[0] |= 0x00000004u;
}
void message_package_stream::clear_has_meassage() {
  _has_bits_[0] &= ~0x00000004u;
}
void message_package_stream::clear_meassage() {
  meassage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_meassage();
}
const ::std::string& message_package_stream::meassage() const {
  // @@protoc_insertion_point(field_get:lc_message_package.message_package_stream.meassage)
  return meassage_.GetNoArena();
}
void message_package_stream::set_meassage(const ::std::string& value) {
  set_has_meassage();
  meassage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lc_message_package.message_package_stream.meassage)
}
#if LANG_CXX11
void message_package_stream::set_meassage(::std::string&& value) {
  set_has_meassage();
  meassage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lc_message_package.message_package_stream.meassage)
}
#endif
void message_package_stream::set_meassage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_meassage();
  meassage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lc_message_package.message_package_stream.meassage)
}
void message_package_stream::set_meassage(const char* value, size_t size) {
  set_has_meassage();
  meassage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lc_message_package.message_package_stream.meassage)
}
::std::string* message_package_stream::mutable_meassage() {
  set_has_meassage();
  // @@protoc_insertion_point(field_mutable:lc_message_package.message_package_stream.meassage)
  return meassage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message_package_stream::release_meassage() {
  // @@protoc_insertion_point(field_release:lc_message_package.message_package_stream.meassage)
  clear_has_meassage();
  return meassage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message_package_stream::set_allocated_meassage(::std::string* meassage) {
  if (meassage != NULL) {
    set_has_meassage();
  } else {
    clear_has_meassage();
  }
  meassage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), meassage);
  // @@protoc_insertion_point(field_set_allocated:lc_message_package.message_package_stream.meassage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace lc_message_package

// @@protoc_insertion_point(global_scope)
