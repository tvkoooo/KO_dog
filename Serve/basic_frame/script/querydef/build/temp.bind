//
//	Generated by lua
//	copyright longer 2018
//  mm_q_cobweb_common_cback.h

#ifndef __mm_q_cobweb_common_cback_h__
#define __mm_q_cobweb_common_cback_h__
#include "mysql/mm_db_mysql_query.h"
#include "dish/mm_package.h"
#include "core/mm_logger.h"
#include "querydef/mm_m_cobweb_common.h"

namespace mm
{
	//
	//	struct definition for p_get_config_launch_cback	//
	struct p_get_config_launch_cback : public mm_queryer
	{
	public:
		mm_uint32_t code;// error code for sql.
		m_config_launch_cback info;// config for server address infomation.
	public:
		virtual ~p_get_config_launch_cback();
	public:
		p_get_config_launch_cback();
		//////////////////////////////////////////////////////////////////////////
		// package
		virtual void encode(mm_o_archive& archive) const;
		virtual void decode(const mm_i_archive& archive);
		//////////////////////////////////////////////////////////////////////////
		// queryer
		virtual int query(struct mm_db_mysql* _sql, mm_uint32_t logger_level);
	};
	//
	//	struct definition for p_set_config_launch_cback	//
	struct p_set_config_launch_cback : public mm_queryer
	{
	public:
		mm_uint32_t code;// error code for sql.
		m_config_launch_cback info;// config for server address infomation.
	public:
		virtual ~p_set_config_launch_cback();
	public:
		p_set_config_launch_cback();
		//////////////////////////////////////////////////////////////////////////
		// package
		virtual void encode(mm_o_archive& archive) const;
		virtual void decode(const mm_i_archive& archive);
		//////////////////////////////////////////////////////////////////////////
		// queryer
		virtual int query(struct mm_db_mysql* _sql, mm_uint32_t logger_level);
	};
}
#endif//__dish_q_cobweb_common_cback_h__