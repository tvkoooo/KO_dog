//
//	Generated by lua
//	copyright longer 2019
//  mm_m_db_ko_dog_t_nt_message.cpp

#include "mm_m_db_ko_dog_t_nt_message.h"

namespace mm
{
	//
	//	struct implementation for t_nt_message	//
	t_nt_message::~t_nt_message()
	{

	}
	t_nt_message::t_nt_message()
		:note_id(0)
		,read_state(0)
		,to_user_id(0)
		,user_id(0)
		,message_mid(0)
		,create_time(0)
		,nt_message("")
	{

	}
	void t_nt_message::encode(mm_o_archive& archive) const
	{
		archive << note_id;
		archive << read_state;
		archive << to_user_id;
		archive << user_id;
		archive << message_mid;
		archive << create_time;
		archive << nt_message;
	}
	void t_nt_message::decode(const mm_i_archive& archive)
	{
		archive >> note_id;
		archive >> read_state;
		archive >> to_user_id;
		archive >> user_id;
		archive >> message_mid;
		archive >> create_time;
		archive >> nt_message;
	}
}