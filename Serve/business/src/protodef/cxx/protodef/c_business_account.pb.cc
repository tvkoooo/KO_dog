// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c_business_account.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "c_business_account.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace c_business_account {
class signed_in_rqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<signed_in_rq> {
} _signed_in_rq_default_instance_;
class signed_in_rsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<signed_in_rs> {
} _signed_in_rs_default_instance_;
class register_rqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<register_rq> {
} _register_rq_default_instance_;
class register_rsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<register_rs> {
} _register_rs_default_instance_;

namespace protobuf_c_5fbusiness_5faccount_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rq, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rq, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rs, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rs, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rs, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(signed_in_rs, token_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rq, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rq, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rs, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rs, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rs, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_rs, token_),
  2,
  0,
  3,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(signed_in_rq)},
  { 9, 18, sizeof(signed_in_rs)},
  { 22, 29, sizeof(register_rq)},
  { 31, 40, sizeof(register_rs)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_signed_in_rq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_signed_in_rs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_register_rq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_register_rs_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "c_business_account.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _signed_in_rq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _signed_in_rs_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _register_rq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _register_rs_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::b_error::protobuf_b_5ferror_2eproto::InitDefaults();
  ::b_math::protobuf_b_5fmath_2eproto::InitDefaults();
  ::b_network::protobuf_b_5fnetwork_2eproto::InitDefaults();
  _signed_in_rq_default_instance_.DefaultConstruct();
  _signed_in_rs_default_instance_.DefaultConstruct();
  _register_rq_default_instance_.DefaultConstruct();
  _register_rs_default_instance_.DefaultConstruct();
  _signed_in_rs_default_instance_.get_mutable()->error_ = const_cast< ::b_error::info*>(
      ::b_error::info::internal_default_instance());
  _register_rs_default_instance_.get_mutable()->error_ = const_cast< ::b_error::info*>(
      ::b_error::info::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\030c_business_account.proto\022\022c_business_a"
      "ccount\032\rb_error.proto\032\014b_math.proto\032\017b_n"
      "etwork.proto\"E\n\014signed_in_rq\022\021\n\tuser_nam"
      "e\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\"\020\n\003msg\022\t\n\002id\020\220"
      "\300\200\020\"q\n\014signed_in_rs\022\034\n\005error\030\001 \002(\0132\r.b_e"
      "rror.info\022\021\n\tuser_name\030\002 \002(\t\022\017\n\007user_id\030"
      "\003 \002(\004\022\r\n\005token\030\004 \002(\t\"\020\n\003msg\022\t\n\002id\020\221\240\200\020\"D"
      "\n\013register_rq\022\021\n\tuser_name\030\001 \002(\t\022\020\n\010pass"
      "word\030\002 \002(\t\"\020\n\003msg\022\t\n\002id\020\240\300\200\020\"p\n\013register"
      "_rs\022\034\n\005error\030\001 \002(\0132\r.b_error.info\022\021\n\tuse"
      "r_name\030\002 \002(\t\022\017\n\007user_id\030\003 \002(\004\022\r\n\005token\030\004"
      " \002(\t\"\020\n\003msg\022\t\n\002id\020\241\240\200\020*#\n\003msg\022\r\n\006min_id\020"
      "\200\300\200\020\022\r\n\006max_id\020\377\301\200\020Bf\n\010protodefB\022c_busin"
      "ess_accountZ\033protodef/c_business_account"
      "\242\002\023C_business_account_\252\002\022c_business_acco"
      "unt"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 603);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "c_business_account.proto", &protobuf_RegisterTypes);
  ::b_error::protobuf_b_5ferror_2eproto::AddDescriptors();
  ::b_math::protobuf_b_5fmath_2eproto::AddDescriptors();
  ::b_network::protobuf_b_5fnetwork_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_c_5fbusiness_5faccount_2eproto

const ::google::protobuf::EnumDescriptor* signed_in_rq_msg_descriptor() {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_enum_descriptors[0];
}
bool signed_in_rq_msg_IsValid(int value) {
  switch (value) {
    case 33562640:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const signed_in_rq_msg signed_in_rq::id;
const signed_in_rq_msg signed_in_rq::msg_MIN;
const signed_in_rq_msg signed_in_rq::msg_MAX;
const int signed_in_rq::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* signed_in_rs_msg_descriptor() {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_enum_descriptors[1];
}
bool signed_in_rs_msg_IsValid(int value) {
  switch (value) {
    case 33558545:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const signed_in_rs_msg signed_in_rs::id;
const signed_in_rs_msg signed_in_rs::msg_MIN;
const signed_in_rs_msg signed_in_rs::msg_MAX;
const int signed_in_rs::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* register_rq_msg_descriptor() {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_enum_descriptors[2];
}
bool register_rq_msg_IsValid(int value) {
  switch (value) {
    case 33562656:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const register_rq_msg register_rq::id;
const register_rq_msg register_rq::msg_MIN;
const register_rq_msg register_rq::msg_MAX;
const int register_rq::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* register_rs_msg_descriptor() {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_enum_descriptors[3];
}
bool register_rs_msg_IsValid(int value) {
  switch (value) {
    case 33558561:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const register_rs_msg register_rs::id;
const register_rs_msg register_rs::msg_MIN;
const register_rs_msg register_rs::msg_MAX;
const int register_rs::msg_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* msg_descriptor() {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_enum_descriptors[4];
}
bool msg_IsValid(int value) {
  switch (value) {
    case 33562624:
    case 33562879:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int signed_in_rq::kUserNameFieldNumber;
const int signed_in_rq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

signed_in_rq::signed_in_rq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbusiness_5faccount_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_business_account.signed_in_rq)
}
signed_in_rq::signed_in_rq(const signed_in_rq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_name()) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:c_business_account.signed_in_rq)
}

void signed_in_rq::SharedCtor() {
  _cached_size_ = 0;
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

signed_in_rq::~signed_in_rq() {
  // @@protoc_insertion_point(destructor:c_business_account.signed_in_rq)
  SharedDtor();
}

void signed_in_rq::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void signed_in_rq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* signed_in_rq::descriptor() {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const signed_in_rq& signed_in_rq::default_instance() {
  protobuf_c_5fbusiness_5faccount_2eproto::InitDefaults();
  return *internal_default_instance();
}

signed_in_rq* signed_in_rq::New(::google::protobuf::Arena* arena) const {
  signed_in_rq* n = new signed_in_rq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void signed_in_rq::Clear() {
// @@protoc_insertion_point(message_clear_start:c_business_account.signed_in_rq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_user_name()) {
      GOOGLE_DCHECK(!user_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool signed_in_rq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_business_account.signed_in_rq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c_business_account.signed_in_rq.user_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c_business_account.signed_in_rq.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_business_account.signed_in_rq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_business_account.signed_in_rq)
  return false;
#undef DO_
}

void signed_in_rq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_business_account.signed_in_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string user_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.signed_in_rq.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.signed_in_rq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_business_account.signed_in_rq)
}

::google::protobuf::uint8* signed_in_rq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_business_account.signed_in_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string user_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.signed_in_rq.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.signed_in_rq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_business_account.signed_in_rq)
  return target;
}

size_t signed_in_rq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:c_business_account.signed_in_rq)
  size_t total_size = 0;

  if (has_user_name()) {
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t signed_in_rq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_business_account.signed_in_rq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void signed_in_rq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_business_account.signed_in_rq)
  GOOGLE_DCHECK_NE(&from, this);
  const signed_in_rq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const signed_in_rq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_business_account.signed_in_rq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_business_account.signed_in_rq)
    MergeFrom(*source);
  }
}

void signed_in_rq::MergeFrom(const signed_in_rq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_business_account.signed_in_rq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void signed_in_rq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_business_account.signed_in_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void signed_in_rq::CopyFrom(const signed_in_rq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_business_account.signed_in_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool signed_in_rq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void signed_in_rq::Swap(signed_in_rq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void signed_in_rq::InternalSwap(signed_in_rq* other) {
  user_name_.Swap(&other->user_name_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata signed_in_rq::GetMetadata() const {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// signed_in_rq

// required string user_name = 1;
bool signed_in_rq::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void signed_in_rq::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
void signed_in_rq::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void signed_in_rq::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
const ::std::string& signed_in_rq::user_name() const {
  // @@protoc_insertion_point(field_get:c_business_account.signed_in_rq.user_name)
  return user_name_.GetNoArena();
}
void signed_in_rq::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c_business_account.signed_in_rq.user_name)
}
#if LANG_CXX11
void signed_in_rq::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c_business_account.signed_in_rq.user_name)
}
#endif
void signed_in_rq::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c_business_account.signed_in_rq.user_name)
}
void signed_in_rq::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c_business_account.signed_in_rq.user_name)
}
::std::string* signed_in_rq::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:c_business_account.signed_in_rq.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* signed_in_rq::release_user_name() {
  // @@protoc_insertion_point(field_release:c_business_account.signed_in_rq.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void signed_in_rq::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:c_business_account.signed_in_rq.user_name)
}

// required string password = 2;
bool signed_in_rq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void signed_in_rq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void signed_in_rq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void signed_in_rq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& signed_in_rq::password() const {
  // @@protoc_insertion_point(field_get:c_business_account.signed_in_rq.password)
  return password_.GetNoArena();
}
void signed_in_rq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c_business_account.signed_in_rq.password)
}
#if LANG_CXX11
void signed_in_rq::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c_business_account.signed_in_rq.password)
}
#endif
void signed_in_rq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c_business_account.signed_in_rq.password)
}
void signed_in_rq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c_business_account.signed_in_rq.password)
}
::std::string* signed_in_rq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:c_business_account.signed_in_rq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* signed_in_rq::release_password() {
  // @@protoc_insertion_point(field_release:c_business_account.signed_in_rq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void signed_in_rq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:c_business_account.signed_in_rq.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int signed_in_rs::kErrorFieldNumber;
const int signed_in_rs::kUserNameFieldNumber;
const int signed_in_rs::kUserIdFieldNumber;
const int signed_in_rs::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

signed_in_rs::signed_in_rs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbusiness_5faccount_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_business_account.signed_in_rs)
}
signed_in_rs::signed_in_rs(const signed_in_rs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_name()) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_error()) {
    error_ = new ::b_error::info(*from.error_);
  } else {
    error_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:c_business_account.signed_in_rs)
}

void signed_in_rs::SharedCtor() {
  _cached_size_ = 0;
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&error_) + sizeof(user_id_));
}

signed_in_rs::~signed_in_rs() {
  // @@protoc_insertion_point(destructor:c_business_account.signed_in_rs)
  SharedDtor();
}

void signed_in_rs::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete error_;
  }
}

void signed_in_rs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* signed_in_rs::descriptor() {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const signed_in_rs& signed_in_rs::default_instance() {
  protobuf_c_5fbusiness_5faccount_2eproto::InitDefaults();
  return *internal_default_instance();
}

signed_in_rs* signed_in_rs::New(::google::protobuf::Arena* arena) const {
  signed_in_rs* n = new signed_in_rs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void signed_in_rs::Clear() {
// @@protoc_insertion_point(message_clear_start:c_business_account.signed_in_rs)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_user_name()) {
      GOOGLE_DCHECK(!user_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_token()) {
      GOOGLE_DCHECK(!token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*token_.UnsafeRawStringPointer())->clear();
    }
    if (has_error()) {
      GOOGLE_DCHECK(error_ != NULL);
      error_->::b_error::info::Clear();
    }
  }
  user_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool signed_in_rs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_business_account.signed_in_rs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .b_error.info error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string user_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c_business_account.signed_in_rs.user_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 user_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c_business_account.signed_in_rs.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_business_account.signed_in_rs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_business_account.signed_in_rs)
  return false;
#undef DO_
}

void signed_in_rs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_business_account.signed_in_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // required string user_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.signed_in_rs.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // required uint64 user_id = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->user_id(), output);
  }

  // required string token = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.signed_in_rs.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_business_account.signed_in_rs)
}

::google::protobuf::uint8* signed_in_rs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_business_account.signed_in_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, deterministic, target);
  }

  // required string user_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.signed_in_rs.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // required uint64 user_id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->user_id(), target);
  }

  // required string token = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.signed_in_rs.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_business_account.signed_in_rs)
  return target;
}

size_t signed_in_rs::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:c_business_account.signed_in_rs)
  size_t total_size = 0;

  if (has_user_name()) {
    // required string user_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  if (has_token()) {
    // required string token = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_error()) {
    // required .b_error.info error = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  if (has_user_id()) {
    // required uint64 user_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  return total_size;
}
size_t signed_in_rs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_business_account.signed_in_rs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string user_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());

    // required string token = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required .b_error.info error = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);

    // required uint64 user_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void signed_in_rs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_business_account.signed_in_rs)
  GOOGLE_DCHECK_NE(&from, this);
  const signed_in_rs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const signed_in_rs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_business_account.signed_in_rs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_business_account.signed_in_rs)
    MergeFrom(*source);
  }
}

void signed_in_rs::MergeFrom(const signed_in_rs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_business_account.signed_in_rs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_error()->::b_error::info::MergeFrom(from.error());
    }
    if (cached_has_bits & 0x00000008u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void signed_in_rs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_business_account.signed_in_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void signed_in_rs::CopyFrom(const signed_in_rs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_business_account.signed_in_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool signed_in_rs::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void signed_in_rs::Swap(signed_in_rs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void signed_in_rs::InternalSwap(signed_in_rs* other) {
  user_name_.Swap(&other->user_name_);
  token_.Swap(&other->token_);
  std::swap(error_, other->error_);
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata signed_in_rs::GetMetadata() const {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// signed_in_rs

// required .b_error.info error = 1;
bool signed_in_rs::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void signed_in_rs::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
void signed_in_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
void signed_in_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
const ::b_error::info& signed_in_rs::error() const {
  // @@protoc_insertion_point(field_get:c_business_account.signed_in_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
::b_error::info* signed_in_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_business_account.signed_in_rs.error)
  return error_;
}
::b_error::info* signed_in_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_business_account.signed_in_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
void signed_in_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_business_account.signed_in_rs.error)
}

// required string user_name = 2;
bool signed_in_rs::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void signed_in_rs::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
void signed_in_rs::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void signed_in_rs::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
const ::std::string& signed_in_rs::user_name() const {
  // @@protoc_insertion_point(field_get:c_business_account.signed_in_rs.user_name)
  return user_name_.GetNoArena();
}
void signed_in_rs::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c_business_account.signed_in_rs.user_name)
}
#if LANG_CXX11
void signed_in_rs::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c_business_account.signed_in_rs.user_name)
}
#endif
void signed_in_rs::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c_business_account.signed_in_rs.user_name)
}
void signed_in_rs::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c_business_account.signed_in_rs.user_name)
}
::std::string* signed_in_rs::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:c_business_account.signed_in_rs.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* signed_in_rs::release_user_name() {
  // @@protoc_insertion_point(field_release:c_business_account.signed_in_rs.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void signed_in_rs::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:c_business_account.signed_in_rs.user_name)
}

// required uint64 user_id = 3;
bool signed_in_rs::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void signed_in_rs::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
void signed_in_rs::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void signed_in_rs::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
::google::protobuf::uint64 signed_in_rs::user_id() const {
  // @@protoc_insertion_point(field_get:c_business_account.signed_in_rs.user_id)
  return user_id_;
}
void signed_in_rs::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:c_business_account.signed_in_rs.user_id)
}

// required string token = 4;
bool signed_in_rs::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void signed_in_rs::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
void signed_in_rs::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
void signed_in_rs::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& signed_in_rs::token() const {
  // @@protoc_insertion_point(field_get:c_business_account.signed_in_rs.token)
  return token_.GetNoArena();
}
void signed_in_rs::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c_business_account.signed_in_rs.token)
}
#if LANG_CXX11
void signed_in_rs::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c_business_account.signed_in_rs.token)
}
#endif
void signed_in_rs::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c_business_account.signed_in_rs.token)
}
void signed_in_rs::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c_business_account.signed_in_rs.token)
}
::std::string* signed_in_rs::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:c_business_account.signed_in_rs.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* signed_in_rs::release_token() {
  // @@protoc_insertion_point(field_release:c_business_account.signed_in_rs.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void signed_in_rs::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c_business_account.signed_in_rs.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int register_rq::kUserNameFieldNumber;
const int register_rq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

register_rq::register_rq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbusiness_5faccount_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_business_account.register_rq)
}
register_rq::register_rq(const register_rq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_name()) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:c_business_account.register_rq)
}

void register_rq::SharedCtor() {
  _cached_size_ = 0;
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

register_rq::~register_rq() {
  // @@protoc_insertion_point(destructor:c_business_account.register_rq)
  SharedDtor();
}

void register_rq::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void register_rq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* register_rq::descriptor() {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const register_rq& register_rq::default_instance() {
  protobuf_c_5fbusiness_5faccount_2eproto::InitDefaults();
  return *internal_default_instance();
}

register_rq* register_rq::New(::google::protobuf::Arena* arena) const {
  register_rq* n = new register_rq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void register_rq::Clear() {
// @@protoc_insertion_point(message_clear_start:c_business_account.register_rq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_user_name()) {
      GOOGLE_DCHECK(!user_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool register_rq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_business_account.register_rq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c_business_account.register_rq.user_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c_business_account.register_rq.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_business_account.register_rq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_business_account.register_rq)
  return false;
#undef DO_
}

void register_rq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_business_account.register_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string user_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.register_rq.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.register_rq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_business_account.register_rq)
}

::google::protobuf::uint8* register_rq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_business_account.register_rq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string user_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.register_rq.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.register_rq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_business_account.register_rq)
  return target;
}

size_t register_rq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:c_business_account.register_rq)
  size_t total_size = 0;

  if (has_user_name()) {
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t register_rq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_business_account.register_rq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string user_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void register_rq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_business_account.register_rq)
  GOOGLE_DCHECK_NE(&from, this);
  const register_rq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const register_rq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_business_account.register_rq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_business_account.register_rq)
    MergeFrom(*source);
  }
}

void register_rq::MergeFrom(const register_rq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_business_account.register_rq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void register_rq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_business_account.register_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void register_rq::CopyFrom(const register_rq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_business_account.register_rq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool register_rq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void register_rq::Swap(register_rq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void register_rq::InternalSwap(register_rq* other) {
  user_name_.Swap(&other->user_name_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata register_rq::GetMetadata() const {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// register_rq

// required string user_name = 1;
bool register_rq::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void register_rq::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
void register_rq::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void register_rq::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
const ::std::string& register_rq::user_name() const {
  // @@protoc_insertion_point(field_get:c_business_account.register_rq.user_name)
  return user_name_.GetNoArena();
}
void register_rq::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c_business_account.register_rq.user_name)
}
#if LANG_CXX11
void register_rq::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c_business_account.register_rq.user_name)
}
#endif
void register_rq::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c_business_account.register_rq.user_name)
}
void register_rq::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c_business_account.register_rq.user_name)
}
::std::string* register_rq::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:c_business_account.register_rq.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* register_rq::release_user_name() {
  // @@protoc_insertion_point(field_release:c_business_account.register_rq.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void register_rq::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:c_business_account.register_rq.user_name)
}

// required string password = 2;
bool register_rq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void register_rq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void register_rq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void register_rq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& register_rq::password() const {
  // @@protoc_insertion_point(field_get:c_business_account.register_rq.password)
  return password_.GetNoArena();
}
void register_rq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c_business_account.register_rq.password)
}
#if LANG_CXX11
void register_rq::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c_business_account.register_rq.password)
}
#endif
void register_rq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c_business_account.register_rq.password)
}
void register_rq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c_business_account.register_rq.password)
}
::std::string* register_rq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:c_business_account.register_rq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* register_rq::release_password() {
  // @@protoc_insertion_point(field_release:c_business_account.register_rq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void register_rq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:c_business_account.register_rq.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int register_rs::kErrorFieldNumber;
const int register_rs::kUserNameFieldNumber;
const int register_rs::kUserIdFieldNumber;
const int register_rs::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

register_rs::register_rs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_c_5fbusiness_5faccount_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:c_business_account.register_rs)
}
register_rs::register_rs(const register_rs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_name()) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_error()) {
    error_ = new ::b_error::info(*from.error_);
  } else {
    error_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:c_business_account.register_rs)
}

void register_rs::SharedCtor() {
  _cached_size_ = 0;
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&error_) + sizeof(user_id_));
}

register_rs::~register_rs() {
  // @@protoc_insertion_point(destructor:c_business_account.register_rs)
  SharedDtor();
}

void register_rs::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete error_;
  }
}

void register_rs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* register_rs::descriptor() {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const register_rs& register_rs::default_instance() {
  protobuf_c_5fbusiness_5faccount_2eproto::InitDefaults();
  return *internal_default_instance();
}

register_rs* register_rs::New(::google::protobuf::Arena* arena) const {
  register_rs* n = new register_rs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void register_rs::Clear() {
// @@protoc_insertion_point(message_clear_start:c_business_account.register_rs)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_user_name()) {
      GOOGLE_DCHECK(!user_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_token()) {
      GOOGLE_DCHECK(!token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*token_.UnsafeRawStringPointer())->clear();
    }
    if (has_error()) {
      GOOGLE_DCHECK(error_ != NULL);
      error_->::b_error::info::Clear();
    }
  }
  user_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool register_rs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c_business_account.register_rs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .b_error.info error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string user_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c_business_account.register_rs.user_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 user_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c_business_account.register_rs.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c_business_account.register_rs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c_business_account.register_rs)
  return false;
#undef DO_
}

void register_rs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c_business_account.register_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // required string user_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.register_rs.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // required uint64 user_id = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->user_id(), output);
  }

  // required string token = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.register_rs.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c_business_account.register_rs)
}

::google::protobuf::uint8* register_rs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c_business_account.register_rs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .b_error.info error = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, deterministic, target);
  }

  // required string user_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.register_rs.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // required uint64 user_id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->user_id(), target);
  }

  // required string token = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_business_account.register_rs.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c_business_account.register_rs)
  return target;
}

size_t register_rs::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:c_business_account.register_rs)
  size_t total_size = 0;

  if (has_user_name()) {
    // required string user_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  if (has_token()) {
    // required string token = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_error()) {
    // required .b_error.info error = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  if (has_user_id()) {
    // required uint64 user_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  return total_size;
}
size_t register_rs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:c_business_account.register_rs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string user_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());

    // required string token = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required .b_error.info error = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);

    // required uint64 user_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void register_rs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:c_business_account.register_rs)
  GOOGLE_DCHECK_NE(&from, this);
  const register_rs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const register_rs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:c_business_account.register_rs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:c_business_account.register_rs)
    MergeFrom(*source);
  }
}

void register_rs::MergeFrom(const register_rs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:c_business_account.register_rs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_error()->::b_error::info::MergeFrom(from.error());
    }
    if (cached_has_bits & 0x00000008u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void register_rs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:c_business_account.register_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void register_rs::CopyFrom(const register_rs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:c_business_account.register_rs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool register_rs::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void register_rs::Swap(register_rs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void register_rs::InternalSwap(register_rs* other) {
  user_name_.Swap(&other->user_name_);
  token_.Swap(&other->token_);
  std::swap(error_, other->error_);
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata register_rs::GetMetadata() const {
  protobuf_c_5fbusiness_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_c_5fbusiness_5faccount_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// register_rs

// required .b_error.info error = 1;
bool register_rs::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void register_rs::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
void register_rs::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
void register_rs::clear_error() {
  if (error_ != NULL) error_->::b_error::info::Clear();
  clear_has_error();
}
const ::b_error::info& register_rs::error() const {
  // @@protoc_insertion_point(field_get:c_business_account.register_rs.error)
  return error_ != NULL ? *error_
                         : *::b_error::info::internal_default_instance();
}
::b_error::info* register_rs::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::b_error::info;
  }
  // @@protoc_insertion_point(field_mutable:c_business_account.register_rs.error)
  return error_;
}
::b_error::info* register_rs::release_error() {
  // @@protoc_insertion_point(field_release:c_business_account.register_rs.error)
  clear_has_error();
  ::b_error::info* temp = error_;
  error_ = NULL;
  return temp;
}
void register_rs::set_allocated_error(::b_error::info* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:c_business_account.register_rs.error)
}

// required string user_name = 2;
bool register_rs::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void register_rs::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
void register_rs::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void register_rs::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
const ::std::string& register_rs::user_name() const {
  // @@protoc_insertion_point(field_get:c_business_account.register_rs.user_name)
  return user_name_.GetNoArena();
}
void register_rs::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c_business_account.register_rs.user_name)
}
#if LANG_CXX11
void register_rs::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c_business_account.register_rs.user_name)
}
#endif
void register_rs::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c_business_account.register_rs.user_name)
}
void register_rs::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c_business_account.register_rs.user_name)
}
::std::string* register_rs::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:c_business_account.register_rs.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* register_rs::release_user_name() {
  // @@protoc_insertion_point(field_release:c_business_account.register_rs.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void register_rs::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:c_business_account.register_rs.user_name)
}

// required uint64 user_id = 3;
bool register_rs::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void register_rs::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
void register_rs::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void register_rs::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
::google::protobuf::uint64 register_rs::user_id() const {
  // @@protoc_insertion_point(field_get:c_business_account.register_rs.user_id)
  return user_id_;
}
void register_rs::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:c_business_account.register_rs.user_id)
}

// required string token = 4;
bool register_rs::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void register_rs::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
void register_rs::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
void register_rs::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& register_rs::token() const {
  // @@protoc_insertion_point(field_get:c_business_account.register_rs.token)
  return token_.GetNoArena();
}
void register_rs::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c_business_account.register_rs.token)
}
#if LANG_CXX11
void register_rs::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c_business_account.register_rs.token)
}
#endif
void register_rs::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c_business_account.register_rs.token)
}
void register_rs::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c_business_account.register_rs.token)
}
::std::string* register_rs::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:c_business_account.register_rs.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* register_rs::release_token() {
  // @@protoc_insertion_point(field_release:c_business_account.register_rs.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void register_rs::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c_business_account.register_rs.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace c_business_account

// @@protoc_insertion_point(global_scope)
