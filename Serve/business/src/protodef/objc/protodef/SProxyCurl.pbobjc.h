// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s_proxy_curl.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class B_error_info;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum S_proxy_curl_msg

/**
 * ////////////////////////////////////////////////////////////////
 * msg area.
 **/
typedef GPB_ENUM(S_proxy_curl_msg) {
  S_proxy_curl_msg_MinId = 16777472,
  S_proxy_curl_msg_MaxId = 16777727,
};

GPBEnumDescriptor *S_proxy_curl_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL S_proxy_curl_msg_IsValidValue(int32_t value);

#pragma mark - Enum S_proxy_curl_json_data_rq_msg

typedef GPB_ENUM(S_proxy_curl_json_data_rq_msg) {
  S_proxy_curl_json_data_rq_msg_Id = 16777472,
};

GPBEnumDescriptor *S_proxy_curl_json_data_rq_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL S_proxy_curl_json_data_rq_msg_IsValidValue(int32_t value);

#pragma mark - Enum S_proxy_curl_json_data_rs_msg

typedef GPB_ENUM(S_proxy_curl_json_data_rs_msg) {
  S_proxy_curl_json_data_rs_msg_Id = 16777473,
};

GPBEnumDescriptor *S_proxy_curl_json_data_rs_msg_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL S_proxy_curl_json_data_rs_msg_IsValidValue(int32_t value);

#pragma mark - S_proxy_curl_SProxyCurlRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface S_proxy_curl_SProxyCurlRoot : GPBRootObject
@end

#pragma mark - S_proxy_curl_json_data_rq

typedef GPB_ENUM(S_proxy_curl_json_data_rq_FieldNumber) {
  S_proxy_curl_json_data_rq_FieldNumber_Buffer = 1,
};

/**
 * ////////////////////////////////////////////////////////////////
 * struct
 * ////////////////////////////////////////////////////////////////
 * rq rs
 * set logger.
 **/
@interface S_proxy_curl_json_data_rq : GPBMessage

/** json buffer rq. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *buffer;
/** Test to see if @c buffer has been set. */
@property(nonatomic, readwrite) BOOL hasBuffer;

@end

#pragma mark - S_proxy_curl_json_data_rs

typedef GPB_ENUM(S_proxy_curl_json_data_rs_FieldNumber) {
  S_proxy_curl_json_data_rs_FieldNumber_Error = 1,
  S_proxy_curl_json_data_rs_FieldNumber_CurlCode = 2,
  S_proxy_curl_json_data_rs_FieldNumber_Buffer = 3,
};

@interface S_proxy_curl_json_data_rs : GPBMessage

/** error info */
@property(nonatomic, readwrite, strong, null_resettable) B_error_info *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

/** curl code. */
@property(nonatomic, readwrite) uint32_t curlCode;

@property(nonatomic, readwrite) BOOL hasCurlCode;
/** json buffer rs. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *buffer;
/** Test to see if @c buffer has been set. */
@property(nonatomic, readwrite) BOOL hasBuffer;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
